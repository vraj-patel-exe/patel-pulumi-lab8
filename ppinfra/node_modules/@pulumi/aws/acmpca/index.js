"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.Policy = exports.Permission = exports.getCertificateAuthorityOutput = exports.getCertificateAuthority = exports.getCertificateOutput = exports.getCertificate = exports.CertificateAuthorityCertificate = exports.CertificateAuthority = exports.Certificate = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
exports.Certificate = null;
utilities.lazyLoad(exports, ["Certificate"], () => require("./certificate"));
exports.CertificateAuthority = null;
utilities.lazyLoad(exports, ["CertificateAuthority"], () => require("./certificateAuthority"));
exports.CertificateAuthorityCertificate = null;
utilities.lazyLoad(exports, ["CertificateAuthorityCertificate"], () => require("./certificateAuthorityCertificate"));
exports.getCertificate = null;
exports.getCertificateOutput = null;
utilities.lazyLoad(exports, ["getCertificate", "getCertificateOutput"], () => require("./getCertificate"));
exports.getCertificateAuthority = null;
exports.getCertificateAuthorityOutput = null;
utilities.lazyLoad(exports, ["getCertificateAuthority", "getCertificateAuthorityOutput"], () => require("./getCertificateAuthority"));
exports.Permission = null;
utilities.lazyLoad(exports, ["Permission"], () => require("./permission"));
exports.Policy = null;
utilities.lazyLoad(exports, ["Policy"], () => require("./policy"));
const _module = {
    version: utilities.getVersion(),
    construct: (name, type, urn) => {
        switch (type) {
            case "aws:acmpca/certificate:Certificate":
                return new exports.Certificate(name, undefined, { urn });
            case "aws:acmpca/certificateAuthority:CertificateAuthority":
                return new exports.CertificateAuthority(name, undefined, { urn });
            case "aws:acmpca/certificateAuthorityCertificate:CertificateAuthorityCertificate":
                return new exports.CertificateAuthorityCertificate(name, undefined, { urn });
            case "aws:acmpca/permission:Permission":
                return new exports.Permission(name, undefined, { urn });
            case "aws:acmpca/policy:Policy":
                return new exports.Policy(name, undefined, { urn });
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("aws", "acmpca/certificate", _module);
pulumi.runtime.registerResourceModule("aws", "acmpca/certificateAuthority", _module);
pulumi.runtime.registerResourceModule("aws", "acmpca/certificateAuthorityCertificate", _module);
pulumi.runtime.registerResourceModule("aws", "acmpca/permission", _module);
pulumi.runtime.registerResourceModule("aws", "acmpca/policy", _module);
//# sourceMappingURL=index.js.map