"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.VpcLink = exports.UsagePlanKey = exports.UsagePlan = exports.Stage = exports.RestApiPolicy = exports.RestApi = exports.Response = exports.Resource = exports.RequestValidator = exports.Model = exports.MethodSettings = exports.MethodResponse = exports.Method = exports.IntegrationResponse = exports.Integration = exports.getVpcLinkOutput = exports.getVpcLink = exports.getSdkOutput = exports.getSdk = exports.getRestApiOutput = exports.getRestApi = exports.getResourceOutput = exports.getResource = exports.getKeyOutput = exports.getKey = exports.getExportOutput = exports.getExport = exports.getDomainNameOutput = exports.getDomainName = exports.getAuthorizersOutput = exports.getAuthorizers = exports.getAuthorizerOutput = exports.getAuthorizer = exports.DomainNameAccessAssociation = exports.DomainName = exports.DocumentationVersion = exports.DocumentationPart = exports.Deployment = exports.ClientCertificate = exports.BasePathMapping = exports.Authorizer = exports.ApiKey = exports.Account = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
exports.Account = null;
utilities.lazyLoad(exports, ["Account"], () => require("./account"));
exports.ApiKey = null;
utilities.lazyLoad(exports, ["ApiKey"], () => require("./apiKey"));
exports.Authorizer = null;
utilities.lazyLoad(exports, ["Authorizer"], () => require("./authorizer"));
exports.BasePathMapping = null;
utilities.lazyLoad(exports, ["BasePathMapping"], () => require("./basePathMapping"));
exports.ClientCertificate = null;
utilities.lazyLoad(exports, ["ClientCertificate"], () => require("./clientCertificate"));
exports.Deployment = null;
utilities.lazyLoad(exports, ["Deployment"], () => require("./deployment"));
exports.DocumentationPart = null;
utilities.lazyLoad(exports, ["DocumentationPart"], () => require("./documentationPart"));
exports.DocumentationVersion = null;
utilities.lazyLoad(exports, ["DocumentationVersion"], () => require("./documentationVersion"));
exports.DomainName = null;
utilities.lazyLoad(exports, ["DomainName"], () => require("./domainName"));
exports.DomainNameAccessAssociation = null;
utilities.lazyLoad(exports, ["DomainNameAccessAssociation"], () => require("./domainNameAccessAssociation"));
exports.getAuthorizer = null;
exports.getAuthorizerOutput = null;
utilities.lazyLoad(exports, ["getAuthorizer", "getAuthorizerOutput"], () => require("./getAuthorizer"));
exports.getAuthorizers = null;
exports.getAuthorizersOutput = null;
utilities.lazyLoad(exports, ["getAuthorizers", "getAuthorizersOutput"], () => require("./getAuthorizers"));
exports.getDomainName = null;
exports.getDomainNameOutput = null;
utilities.lazyLoad(exports, ["getDomainName", "getDomainNameOutput"], () => require("./getDomainName"));
exports.getExport = null;
exports.getExportOutput = null;
utilities.lazyLoad(exports, ["getExport", "getExportOutput"], () => require("./getExport"));
exports.getKey = null;
exports.getKeyOutput = null;
utilities.lazyLoad(exports, ["getKey", "getKeyOutput"], () => require("./getKey"));
exports.getResource = null;
exports.getResourceOutput = null;
utilities.lazyLoad(exports, ["getResource", "getResourceOutput"], () => require("./getResource"));
exports.getRestApi = null;
exports.getRestApiOutput = null;
utilities.lazyLoad(exports, ["getRestApi", "getRestApiOutput"], () => require("./getRestApi"));
exports.getSdk = null;
exports.getSdkOutput = null;
utilities.lazyLoad(exports, ["getSdk", "getSdkOutput"], () => require("./getSdk"));
exports.getVpcLink = null;
exports.getVpcLinkOutput = null;
utilities.lazyLoad(exports, ["getVpcLink", "getVpcLinkOutput"], () => require("./getVpcLink"));
exports.Integration = null;
utilities.lazyLoad(exports, ["Integration"], () => require("./integration"));
exports.IntegrationResponse = null;
utilities.lazyLoad(exports, ["IntegrationResponse"], () => require("./integrationResponse"));
exports.Method = null;
utilities.lazyLoad(exports, ["Method"], () => require("./method"));
exports.MethodResponse = null;
utilities.lazyLoad(exports, ["MethodResponse"], () => require("./methodResponse"));
exports.MethodSettings = null;
utilities.lazyLoad(exports, ["MethodSettings"], () => require("./methodSettings"));
exports.Model = null;
utilities.lazyLoad(exports, ["Model"], () => require("./model"));
exports.RequestValidator = null;
utilities.lazyLoad(exports, ["RequestValidator"], () => require("./requestValidator"));
exports.Resource = null;
utilities.lazyLoad(exports, ["Resource"], () => require("./resource"));
exports.Response = null;
utilities.lazyLoad(exports, ["Response"], () => require("./response"));
exports.RestApi = null;
utilities.lazyLoad(exports, ["RestApi"], () => require("./restApi"));
exports.RestApiPolicy = null;
utilities.lazyLoad(exports, ["RestApiPolicy"], () => require("./restApiPolicy"));
exports.Stage = null;
utilities.lazyLoad(exports, ["Stage"], () => require("./stage"));
exports.UsagePlan = null;
utilities.lazyLoad(exports, ["UsagePlan"], () => require("./usagePlan"));
exports.UsagePlanKey = null;
utilities.lazyLoad(exports, ["UsagePlanKey"], () => require("./usagePlanKey"));
exports.VpcLink = null;
utilities.lazyLoad(exports, ["VpcLink"], () => require("./vpcLink"));
const _module = {
    version: utilities.getVersion(),
    construct: (name, type, urn) => {
        switch (type) {
            case "aws:apigateway/account:Account":
                return new exports.Account(name, undefined, { urn });
            case "aws:apigateway/apiKey:ApiKey":
                return new exports.ApiKey(name, undefined, { urn });
            case "aws:apigateway/authorizer:Authorizer":
                return new exports.Authorizer(name, undefined, { urn });
            case "aws:apigateway/basePathMapping:BasePathMapping":
                return new exports.BasePathMapping(name, undefined, { urn });
            case "aws:apigateway/clientCertificate:ClientCertificate":
                return new exports.ClientCertificate(name, undefined, { urn });
            case "aws:apigateway/deployment:Deployment":
                return new exports.Deployment(name, undefined, { urn });
            case "aws:apigateway/documentationPart:DocumentationPart":
                return new exports.DocumentationPart(name, undefined, { urn });
            case "aws:apigateway/documentationVersion:DocumentationVersion":
                return new exports.DocumentationVersion(name, undefined, { urn });
            case "aws:apigateway/domainName:DomainName":
                return new exports.DomainName(name, undefined, { urn });
            case "aws:apigateway/domainNameAccessAssociation:DomainNameAccessAssociation":
                return new exports.DomainNameAccessAssociation(name, undefined, { urn });
            case "aws:apigateway/integration:Integration":
                return new exports.Integration(name, undefined, { urn });
            case "aws:apigateway/integrationResponse:IntegrationResponse":
                return new exports.IntegrationResponse(name, undefined, { urn });
            case "aws:apigateway/method:Method":
                return new exports.Method(name, undefined, { urn });
            case "aws:apigateway/methodResponse:MethodResponse":
                return new exports.MethodResponse(name, undefined, { urn });
            case "aws:apigateway/methodSettings:MethodSettings":
                return new exports.MethodSettings(name, undefined, { urn });
            case "aws:apigateway/model:Model":
                return new exports.Model(name, undefined, { urn });
            case "aws:apigateway/requestValidator:RequestValidator":
                return new exports.RequestValidator(name, undefined, { urn });
            case "aws:apigateway/resource:Resource":
                return new exports.Resource(name, undefined, { urn });
            case "aws:apigateway/response:Response":
                return new exports.Response(name, undefined, { urn });
            case "aws:apigateway/restApi:RestApi":
                return new exports.RestApi(name, undefined, { urn });
            case "aws:apigateway/restApiPolicy:RestApiPolicy":
                return new exports.RestApiPolicy(name, undefined, { urn });
            case "aws:apigateway/stage:Stage":
                return new exports.Stage(name, undefined, { urn });
            case "aws:apigateway/usagePlan:UsagePlan":
                return new exports.UsagePlan(name, undefined, { urn });
            case "aws:apigateway/usagePlanKey:UsagePlanKey":
                return new exports.UsagePlanKey(name, undefined, { urn });
            case "aws:apigateway/vpcLink:VpcLink":
                return new exports.VpcLink(name, undefined, { urn });
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("aws", "apigateway/account", _module);
pulumi.runtime.registerResourceModule("aws", "apigateway/apiKey", _module);
pulumi.runtime.registerResourceModule("aws", "apigateway/authorizer", _module);
pulumi.runtime.registerResourceModule("aws", "apigateway/basePathMapping", _module);
pulumi.runtime.registerResourceModule("aws", "apigateway/clientCertificate", _module);
pulumi.runtime.registerResourceModule("aws", "apigateway/deployment", _module);
pulumi.runtime.registerResourceModule("aws", "apigateway/documentationPart", _module);
pulumi.runtime.registerResourceModule("aws", "apigateway/documentationVersion", _module);
pulumi.runtime.registerResourceModule("aws", "apigateway/domainName", _module);
pulumi.runtime.registerResourceModule("aws", "apigateway/domainNameAccessAssociation", _module);
pulumi.runtime.registerResourceModule("aws", "apigateway/integration", _module);
pulumi.runtime.registerResourceModule("aws", "apigateway/integrationResponse", _module);
pulumi.runtime.registerResourceModule("aws", "apigateway/method", _module);
pulumi.runtime.registerResourceModule("aws", "apigateway/methodResponse", _module);
pulumi.runtime.registerResourceModule("aws", "apigateway/methodSettings", _module);
pulumi.runtime.registerResourceModule("aws", "apigateway/model", _module);
pulumi.runtime.registerResourceModule("aws", "apigateway/requestValidator", _module);
pulumi.runtime.registerResourceModule("aws", "apigateway/resource", _module);
pulumi.runtime.registerResourceModule("aws", "apigateway/response", _module);
pulumi.runtime.registerResourceModule("aws", "apigateway/restApi", _module);
pulumi.runtime.registerResourceModule("aws", "apigateway/restApiPolicy", _module);
pulumi.runtime.registerResourceModule("aws", "apigateway/stage", _module);
pulumi.runtime.registerResourceModule("aws", "apigateway/usagePlan", _module);
pulumi.runtime.registerResourceModule("aws", "apigateway/usagePlanKey", _module);
pulumi.runtime.registerResourceModule("aws", "apigateway/vpcLink", _module);
//# sourceMappingURL=index.js.map