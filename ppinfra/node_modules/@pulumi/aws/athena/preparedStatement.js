"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.PreparedStatement = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
/**
 * Resource for managing an Athena Prepared Statement.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const test = new aws.s3.BucketV2("test", {
 *     bucket: "tf-test",
 *     forceDestroy: true,
 * });
 * const testWorkgroup = new aws.athena.Workgroup("test", {name: "tf-test"});
 * const testDatabase = new aws.athena.Database("test", {
 *     name: "example",
 *     bucket: test.bucket,
 * });
 * const testPreparedStatement = new aws.athena.PreparedStatement("test", {
 *     name: "tf_test",
 *     queryStatement: pulumi.interpolate`SELECT * FROM ${testDatabase.name} WHERE x = ?`,
 *     workgroup: testWorkgroup.name,
 * });
 * ```
 *
 * ## Import
 *
 * Using `pulumi import`, import Athena Prepared Statement using the `WORKGROUP-NAME/STATEMENT-NAME`. For example:
 *
 * ```sh
 * $ pulumi import aws:athena/preparedStatement:PreparedStatement example 12345abcde/example
 * ```
 */
class PreparedStatement extends pulumi.CustomResource {
    /**
     * Get an existing PreparedStatement resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name, id, state, opts) {
        return new PreparedStatement(name, state, Object.assign(Object.assign({}, opts), { id: id }));
    }
    /**
     * Returns true if the given object is an instance of PreparedStatement.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === PreparedStatement.__pulumiType;
    }
    constructor(name, argsOrState, opts) {
        let resourceInputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["queryStatement"] = state ? state.queryStatement : undefined;
            resourceInputs["workgroup"] = state ? state.workgroup : undefined;
        }
        else {
            const args = argsOrState;
            if ((!args || args.queryStatement === undefined) && !opts.urn) {
                throw new Error("Missing required property 'queryStatement'");
            }
            if ((!args || args.workgroup === undefined) && !opts.urn) {
                throw new Error("Missing required property 'workgroup'");
            }
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["queryStatement"] = args ? args.queryStatement : undefined;
            resourceInputs["workgroup"] = args ? args.workgroup : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(PreparedStatement.__pulumiType, name, resourceInputs, opts);
    }
}
exports.PreparedStatement = PreparedStatement;
/** @internal */
PreparedStatement.__pulumiType = 'aws:athena/preparedStatement:PreparedStatement';
//# sourceMappingURL=preparedStatement.js.map