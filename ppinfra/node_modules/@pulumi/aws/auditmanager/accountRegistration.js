"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.AccountRegistration = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
/**
 * Resource for managing AWS Audit Manager Account Registration.
 *
 * ## Example Usage
 *
 * ### Basic Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const example = new aws.auditmanager.AccountRegistration("example", {});
 * ```
 *
 * ### Deregister On Destroy
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const example = new aws.auditmanager.AccountRegistration("example", {deregisterOnDestroy: true});
 * ```
 *
 * ## Import
 *
 * Using `pulumi import`, import Audit Manager Account Registration resources using the `id`. For example:
 *
 * ```sh
 * $ pulumi import aws:auditmanager/accountRegistration:AccountRegistration example us-east-1
 * ```
 */
class AccountRegistration extends pulumi.CustomResource {
    /**
     * Get an existing AccountRegistration resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name, id, state, opts) {
        return new AccountRegistration(name, state, Object.assign(Object.assign({}, opts), { id: id }));
    }
    /**
     * Returns true if the given object is an instance of AccountRegistration.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === AccountRegistration.__pulumiType;
    }
    constructor(name, argsOrState, opts) {
        let resourceInputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState;
            resourceInputs["delegatedAdminAccount"] = state ? state.delegatedAdminAccount : undefined;
            resourceInputs["deregisterOnDestroy"] = state ? state.deregisterOnDestroy : undefined;
            resourceInputs["kmsKey"] = state ? state.kmsKey : undefined;
            resourceInputs["status"] = state ? state.status : undefined;
        }
        else {
            const args = argsOrState;
            resourceInputs["delegatedAdminAccount"] = args ? args.delegatedAdminAccount : undefined;
            resourceInputs["deregisterOnDestroy"] = args ? args.deregisterOnDestroy : undefined;
            resourceInputs["kmsKey"] = args ? args.kmsKey : undefined;
            resourceInputs["status"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(AccountRegistration.__pulumiType, name, resourceInputs, opts);
    }
}
exports.AccountRegistration = AccountRegistration;
/** @internal */
AccountRegistration.__pulumiType = 'aws:auditmanager/accountRegistration:AccountRegistration';
//# sourceMappingURL=accountRegistration.js.map