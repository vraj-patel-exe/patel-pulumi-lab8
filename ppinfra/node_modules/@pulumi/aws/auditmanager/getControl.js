"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.getControlOutput = exports.getControl = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
/**
 * Data source for managing an AWS Audit Manager Control.
 *
 * ## Example Usage
 *
 * ### Basic Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const example = aws.auditmanager.getControl({
 *     name: "1. Risk Management",
 *     type: "Standard",
 * });
 * ```
 *
 * ### With Framework Resource
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const example = aws.auditmanager.getControl({
 *     name: "1. Risk Management",
 *     type: "Standard",
 * });
 * const example2 = aws.auditmanager.getControl({
 *     name: "2. Personnel",
 *     type: "Standard",
 * });
 * const exampleFramework = new aws.auditmanager.Framework("example", {
 *     name: "example",
 *     controlSets: [
 *         {
 *             name: "example",
 *             controls: [{
 *                 id: example.then(example => example.id),
 *             }],
 *         },
 *         {
 *             name: "example2",
 *             controls: [{
 *                 id: example2.then(example2 => example2.id),
 *             }],
 *         },
 *     ],
 * });
 * ```
 */
function getControl(args, opts) {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aws:auditmanager/getControl:getControl", {
        "controlMappingSources": args.controlMappingSources,
        "name": args.name,
        "type": args.type,
    }, opts);
}
exports.getControl = getControl;
/**
 * Data source for managing an AWS Audit Manager Control.
 *
 * ## Example Usage
 *
 * ### Basic Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const example = aws.auditmanager.getControl({
 *     name: "1. Risk Management",
 *     type: "Standard",
 * });
 * ```
 *
 * ### With Framework Resource
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const example = aws.auditmanager.getControl({
 *     name: "1. Risk Management",
 *     type: "Standard",
 * });
 * const example2 = aws.auditmanager.getControl({
 *     name: "2. Personnel",
 *     type: "Standard",
 * });
 * const exampleFramework = new aws.auditmanager.Framework("example", {
 *     name: "example",
 *     controlSets: [
 *         {
 *             name: "example",
 *             controls: [{
 *                 id: example.then(example => example.id),
 *             }],
 *         },
 *         {
 *             name: "example2",
 *             controls: [{
 *                 id: example2.then(example2 => example2.id),
 *             }],
 *         },
 *     ],
 * });
 * ```
 */
function getControlOutput(args, opts) {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("aws:auditmanager/getControl:getControl", {
        "controlMappingSources": args.controlMappingSources,
        "name": args.name,
        "type": args.type,
    }, opts);
}
exports.getControlOutput = getControlOutput;
//# sourceMappingURL=getControl.js.map