"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.RestoreTestingPlan = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
/**
 * Resource for managing an AWS Backup Restore Testing Plan.
 *
 * ## Example Usage
 *
 * ### Basic Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const example = new aws.backup.RestoreTestingPlan("example", {
 *     recoveryPointSelection: {
 *         algorithm: "LATEST_WITHIN_WINDOW",
 *         includeVaults: ["*"],
 *         recoveryPointTypes: ["CONTINUOUS"],
 *     },
 *     scheduleExpression: "cron(0 12 ? * * *)",
 * });
 * ```
 *
 * ## Import
 *
 * Using `pulumi import`, import Backup Restore Testing Plan using the `name`. For example:
 *
 * ```sh
 * $ pulumi import aws:backup/restoreTestingPlan:RestoreTestingPlan example my_testing_plan
 * ```
 */
class RestoreTestingPlan extends pulumi.CustomResource {
    /**
     * Get an existing RestoreTestingPlan resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name, id, state, opts) {
        return new RestoreTestingPlan(name, state, Object.assign(Object.assign({}, opts), { id: id }));
    }
    /**
     * Returns true if the given object is an instance of RestoreTestingPlan.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === RestoreTestingPlan.__pulumiType;
    }
    constructor(name, argsOrState, opts) {
        let resourceInputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState;
            resourceInputs["arn"] = state ? state.arn : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["recoveryPointSelection"] = state ? state.recoveryPointSelection : undefined;
            resourceInputs["scheduleExpression"] = state ? state.scheduleExpression : undefined;
            resourceInputs["scheduleExpressionTimezone"] = state ? state.scheduleExpressionTimezone : undefined;
            resourceInputs["startWindowHours"] = state ? state.startWindowHours : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
            resourceInputs["tagsAll"] = state ? state.tagsAll : undefined;
        }
        else {
            const args = argsOrState;
            if ((!args || args.scheduleExpression === undefined) && !opts.urn) {
                throw new Error("Missing required property 'scheduleExpression'");
            }
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["recoveryPointSelection"] = args ? args.recoveryPointSelection : undefined;
            resourceInputs["scheduleExpression"] = args ? args.scheduleExpression : undefined;
            resourceInputs["scheduleExpressionTimezone"] = args ? args.scheduleExpressionTimezone : undefined;
            resourceInputs["startWindowHours"] = args ? args.startWindowHours : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["arn"] = undefined /*out*/;
            resourceInputs["tagsAll"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(RestoreTestingPlan.__pulumiType, name, resourceInputs, opts);
    }
}
exports.RestoreTestingPlan = RestoreTestingPlan;
/** @internal */
RestoreTestingPlan.__pulumiType = 'aws:backup/restoreTestingPlan:RestoreTestingPlan';
//# sourceMappingURL=restoreTestingPlan.js.map