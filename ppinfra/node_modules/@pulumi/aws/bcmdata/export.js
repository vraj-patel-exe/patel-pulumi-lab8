"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.Export = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
/**
 * Resource for managing an AWS BCM Data Exports Export.
 *
 * ## Example Usage
 *
 * ### Basic Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const test = new aws.bcmdata.Export("test", {"export": {
 *     name: "testexample",
 *     dataQueries: [{
 *         queryStatement: "SELECT identity_line_item_id, identity_time_interval, line_item_product_code,line_item_unblended_cost FROM COST_AND_USAGE_REPORT",
 *         tableConfigurations: {
 *             COST_AND_USAGE_REPORT: {
 *                 TIME_GRANULARITY: "HOURLY",
 *                 INCLUDE_RESOURCES: "FALSE",
 *                 INCLUDE_MANUAL_DISCOUNT_COMPATIBILITY: "FALSE",
 *                 INCLUDE_SPLIT_COST_ALLOCATION_DATA: "FALSE",
 *             },
 *         },
 *     }],
 *     destinationConfigurations: [{
 *         s3Destinations: [{
 *             s3Bucket: testAwsS3Bucket.bucket,
 *             s3Prefix: testAwsS3Bucket.bucketPrefix,
 *             s3Region: testAwsS3Bucket.region,
 *             s3OutputConfigurations: [{
 *                 overwrite: "OVERWRITE_REPORT",
 *                 format: "TEXT_OR_CSV",
 *                 compression: "GZIP",
 *                 outputType: "CUSTOM",
 *             }],
 *         }],
 *     }],
 *     refreshCadences: [{
 *         frequency: "SYNCHRONOUS",
 *     }],
 * }});
 * ```
 *
 * ## Import
 *
 * Using `pulumi import`, import BCM Data Exports Export using the export ARN. For example:
 *
 * ```sh
 * $ pulumi import aws:bcmdata/export:Export example arn:aws:bcm-data-exports:us-east-1:123456789012:export/CostUsageReport-9f1c75f3-f982-4d9a-b936-1e7ecab814b7
 * ```
 */
class Export extends pulumi.CustomResource {
    /**
     * Get an existing Export resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name, id, state, opts) {
        return new Export(name, state, Object.assign(Object.assign({}, opts), { id: id }));
    }
    /**
     * Returns true if the given object is an instance of Export.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Export.__pulumiType;
    }
    constructor(name, argsOrState, opts) {
        let resourceInputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState;
            resourceInputs["export"] = state ? state.export : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
            resourceInputs["tagsAll"] = state ? state.tagsAll : undefined;
            resourceInputs["timeouts"] = state ? state.timeouts : undefined;
        }
        else {
            const args = argsOrState;
            resourceInputs["export"] = args ? args.export : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["timeouts"] = args ? args.timeouts : undefined;
            resourceInputs["tagsAll"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Export.__pulumiType, name, resourceInputs, opts);
    }
}
exports.Export = Export;
/** @internal */
Export.__pulumiType = 'aws:bcmdata/export:Export';
//# sourceMappingURL=export.js.map