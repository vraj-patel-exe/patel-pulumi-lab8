"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.TeamsChannelConfiguration = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
/**
 * Resource for managing an AWS Chatbot Microsoft Teams Channel Configuration.
 *
 * > **NOTE:** We provide this resource on a best-effort basis. If you are able to test it and find it useful, we welcome your input at GitHub.
 *
 * ## Example Usage
 *
 * ### Basic Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const test = new aws.chatbot.TeamsChannelConfiguration("test", {
 *     channelId: "C07EZ1ABC23",
 *     configurationName: "mitt-lags-kanal",
 *     iamRoleArn: testAwsIamRole.arn,
 *     teamId: "74361522-da01-538d-aa2e-ac7918c6bb92",
 *     tenantId: "1234",
 *     tags: {
 *         Name: "mitt-lags-kanal",
 *     },
 * });
 * ```
 *
 * ## Import
 *
 * Using `pulumi import`, import Chatbot Microsoft Teams Channel Configuration using the `team_id`. For example:
 *
 * ```sh
 * $ pulumi import aws:chatbot/teamsChannelConfiguration:TeamsChannelConfiguration example 5f4f15d2-b958-522a-8333-124aa8bf0925
 * ```
 */
class TeamsChannelConfiguration extends pulumi.CustomResource {
    /**
     * Get an existing TeamsChannelConfiguration resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name, id, state, opts) {
        return new TeamsChannelConfiguration(name, state, Object.assign(Object.assign({}, opts), { id: id }));
    }
    /**
     * Returns true if the given object is an instance of TeamsChannelConfiguration.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === TeamsChannelConfiguration.__pulumiType;
    }
    constructor(name, argsOrState, opts) {
        let resourceInputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState;
            resourceInputs["channelId"] = state ? state.channelId : undefined;
            resourceInputs["channelName"] = state ? state.channelName : undefined;
            resourceInputs["chatConfigurationArn"] = state ? state.chatConfigurationArn : undefined;
            resourceInputs["configurationName"] = state ? state.configurationName : undefined;
            resourceInputs["guardrailPolicyArns"] = state ? state.guardrailPolicyArns : undefined;
            resourceInputs["iamRoleArn"] = state ? state.iamRoleArn : undefined;
            resourceInputs["loggingLevel"] = state ? state.loggingLevel : undefined;
            resourceInputs["snsTopicArns"] = state ? state.snsTopicArns : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
            resourceInputs["tagsAll"] = state ? state.tagsAll : undefined;
            resourceInputs["teamId"] = state ? state.teamId : undefined;
            resourceInputs["teamName"] = state ? state.teamName : undefined;
            resourceInputs["tenantId"] = state ? state.tenantId : undefined;
            resourceInputs["timeouts"] = state ? state.timeouts : undefined;
            resourceInputs["userAuthorizationRequired"] = state ? state.userAuthorizationRequired : undefined;
        }
        else {
            const args = argsOrState;
            if ((!args || args.channelId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'channelId'");
            }
            if ((!args || args.configurationName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'configurationName'");
            }
            if ((!args || args.iamRoleArn === undefined) && !opts.urn) {
                throw new Error("Missing required property 'iamRoleArn'");
            }
            if ((!args || args.teamId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'teamId'");
            }
            if ((!args || args.tenantId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'tenantId'");
            }
            resourceInputs["channelId"] = args ? args.channelId : undefined;
            resourceInputs["channelName"] = args ? args.channelName : undefined;
            resourceInputs["configurationName"] = args ? args.configurationName : undefined;
            resourceInputs["guardrailPolicyArns"] = args ? args.guardrailPolicyArns : undefined;
            resourceInputs["iamRoleArn"] = args ? args.iamRoleArn : undefined;
            resourceInputs["loggingLevel"] = args ? args.loggingLevel : undefined;
            resourceInputs["snsTopicArns"] = args ? args.snsTopicArns : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["teamId"] = args ? args.teamId : undefined;
            resourceInputs["teamName"] = args ? args.teamName : undefined;
            resourceInputs["tenantId"] = args ? args.tenantId : undefined;
            resourceInputs["timeouts"] = args ? args.timeouts : undefined;
            resourceInputs["userAuthorizationRequired"] = args ? args.userAuthorizationRequired : undefined;
            resourceInputs["chatConfigurationArn"] = undefined /*out*/;
            resourceInputs["tagsAll"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(TeamsChannelConfiguration.__pulumiType, name, resourceInputs, opts);
    }
}
exports.TeamsChannelConfiguration = TeamsChannelConfiguration;
/** @internal */
TeamsChannelConfiguration.__pulumiType = 'aws:chatbot/teamsChannelConfiguration:TeamsChannelConfiguration';
//# sourceMappingURL=teamsChannelConfiguration.js.map