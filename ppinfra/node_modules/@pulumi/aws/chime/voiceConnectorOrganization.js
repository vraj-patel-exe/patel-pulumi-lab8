"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.VoiceConnectorOrganization = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
/**
 * Enable origination settings to control inbound calling to your SIP infrastructure.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const _default = new aws.chime.VoiceConnector("default", {
 *     name: "test",
 *     requireEncryption: true,
 * });
 * const defaultVoiceConnectorOrganization = new aws.chime.VoiceConnectorOrganization("default", {
 *     disabled: false,
 *     voiceConnectorId: _default.id,
 *     routes: [
 *         {
 *             host: "127.0.0.1",
 *             port: 8081,
 *             protocol: "TCP",
 *             priority: 1,
 *             weight: 1,
 *         },
 *         {
 *             host: "127.0.0.2",
 *             port: 8082,
 *             protocol: "TCP",
 *             priority: 2,
 *             weight: 10,
 *         },
 *     ],
 * });
 * ```
 *
 * ## Import
 *
 * Using `pulumi import`, import Chime Voice Connector Origination using the `voice_connector_id`. For example:
 *
 * ```sh
 * $ pulumi import aws:chime/voiceConnectorOrganization:VoiceConnectorOrganization default abcdef1ghij2klmno3pqr4
 * ```
 */
class VoiceConnectorOrganization extends pulumi.CustomResource {
    /**
     * Get an existing VoiceConnectorOrganization resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name, id, state, opts) {
        return new VoiceConnectorOrganization(name, state, Object.assign(Object.assign({}, opts), { id: id }));
    }
    /**
     * Returns true if the given object is an instance of VoiceConnectorOrganization.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === VoiceConnectorOrganization.__pulumiType;
    }
    constructor(name, argsOrState, opts) {
        let resourceInputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState;
            resourceInputs["disabled"] = state ? state.disabled : undefined;
            resourceInputs["routes"] = state ? state.routes : undefined;
            resourceInputs["voiceConnectorId"] = state ? state.voiceConnectorId : undefined;
        }
        else {
            const args = argsOrState;
            if ((!args || args.routes === undefined) && !opts.urn) {
                throw new Error("Missing required property 'routes'");
            }
            if ((!args || args.voiceConnectorId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'voiceConnectorId'");
            }
            resourceInputs["disabled"] = args ? args.disabled : undefined;
            resourceInputs["routes"] = args ? args.routes : undefined;
            resourceInputs["voiceConnectorId"] = args ? args.voiceConnectorId : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(VoiceConnectorOrganization.__pulumiType, name, resourceInputs, opts);
    }
}
exports.VoiceConnectorOrganization = VoiceConnectorOrganization;
/** @internal */
VoiceConnectorOrganization.__pulumiType = 'aws:chime/voiceConnectorOrganization:VoiceConnectorOrganization';
//# sourceMappingURL=voiceConnectorOrganization.js.map