"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.Membership = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
/**
 * Provides a AWS Clean Rooms membership. Memberships are used to join a Clean Rooms collaboration by the invited member.
 *
 * ## Example Usage
 *
 * ### Membership with tags
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const testMembership = new aws.cleanrooms.Membership("test_membership", {
 *     collaborationId: "1234abcd-12ab-34cd-56ef-1234567890ab",
 *     queryLogStatus: "DISABLED",
 *     defaultResultConfiguration: {
 *         roleArn: "arn:aws:iam::123456789012:role/role-name",
 *         outputConfiguration: {
 *             s3: {
 *                 bucket: "test-bucket",
 *                 resultFormat: "PARQUET",
 *                 keyPrefix: "test-prefix",
 *             },
 *         },
 *     },
 *     tags: {
 *         Project: "Terraform",
 *     },
 * });
 * ```
 *
 * ## Import
 *
 * Using `pulumi import`, import `aws_cleanrooms_membership` using the `id`. For example:
 *
 * ```sh
 * $ pulumi import aws:cleanrooms/membership:Membership membership 1234abcd-12ab-34cd-56ef-1234567890ab
 * ```
 */
class Membership extends pulumi.CustomResource {
    /**
     * Get an existing Membership resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name, id, state, opts) {
        return new Membership(name, state, Object.assign(Object.assign({}, opts), { id: id }));
    }
    /**
     * Returns true if the given object is an instance of Membership.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Membership.__pulumiType;
    }
    constructor(name, argsOrState, opts) {
        let resourceInputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState;
            resourceInputs["arn"] = state ? state.arn : undefined;
            resourceInputs["collaborationArn"] = state ? state.collaborationArn : undefined;
            resourceInputs["collaborationCreatorAccountId"] = state ? state.collaborationCreatorAccountId : undefined;
            resourceInputs["collaborationCreatorDisplayName"] = state ? state.collaborationCreatorDisplayName : undefined;
            resourceInputs["collaborationId"] = state ? state.collaborationId : undefined;
            resourceInputs["collaborationName"] = state ? state.collaborationName : undefined;
            resourceInputs["createTime"] = state ? state.createTime : undefined;
            resourceInputs["defaultResultConfiguration"] = state ? state.defaultResultConfiguration : undefined;
            resourceInputs["memberAbilities"] = state ? state.memberAbilities : undefined;
            resourceInputs["paymentConfiguration"] = state ? state.paymentConfiguration : undefined;
            resourceInputs["queryLogStatus"] = state ? state.queryLogStatus : undefined;
            resourceInputs["status"] = state ? state.status : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
            resourceInputs["tagsAll"] = state ? state.tagsAll : undefined;
            resourceInputs["updateTime"] = state ? state.updateTime : undefined;
        }
        else {
            const args = argsOrState;
            if ((!args || args.collaborationId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'collaborationId'");
            }
            if ((!args || args.queryLogStatus === undefined) && !opts.urn) {
                throw new Error("Missing required property 'queryLogStatus'");
            }
            resourceInputs["collaborationId"] = args ? args.collaborationId : undefined;
            resourceInputs["defaultResultConfiguration"] = args ? args.defaultResultConfiguration : undefined;
            resourceInputs["paymentConfiguration"] = args ? args.paymentConfiguration : undefined;
            resourceInputs["queryLogStatus"] = args ? args.queryLogStatus : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["arn"] = undefined /*out*/;
            resourceInputs["collaborationArn"] = undefined /*out*/;
            resourceInputs["collaborationCreatorAccountId"] = undefined /*out*/;
            resourceInputs["collaborationCreatorDisplayName"] = undefined /*out*/;
            resourceInputs["collaborationName"] = undefined /*out*/;
            resourceInputs["createTime"] = undefined /*out*/;
            resourceInputs["memberAbilities"] = undefined /*out*/;
            resourceInputs["status"] = undefined /*out*/;
            resourceInputs["tagsAll"] = undefined /*out*/;
            resourceInputs["updateTime"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Membership.__pulumiType, name, resourceInputs, opts);
    }
}
exports.Membership = Membership;
/** @internal */
Membership.__pulumiType = 'aws:cleanrooms/membership:Membership';
//# sourceMappingURL=membership.js.map