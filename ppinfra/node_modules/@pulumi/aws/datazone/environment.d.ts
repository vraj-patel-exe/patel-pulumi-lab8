import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
/**
 * Resource for managing an AWS DataZone Environment.
 *
 * ## Example Usage
 *
 * ### Basic Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const example = new aws.datazone.Environment("example", {
 *     name: "example",
 *     accountIdentifier: test.accountId,
 *     accountRegion: testAwsRegion.name,
 *     blueprintIdentifier: testAwsDatazoneEnvironmentBlueprintConfiguration.environmentBlueprintId,
 *     profileIdentifier: testAwsDatazoneEnvironmentProfile.id,
 *     projectIdentifier: testAwsDatazoneProject.id,
 *     domainIdentifier: testAwsDatazoneDomain.id,
 *     userParameters: [
 *         {
 *             name: "consumerGlueDbName",
 *             value: "consumer",
 *         },
 *         {
 *             name: "producerGlueDbName",
 *             value: "producer",
 *         },
 *         {
 *             name: "workgroupName",
 *             value: "workgroup",
 *         },
 *     ],
 * });
 * ```
 *
 * ## Import
 *
 * Using `pulumi import`, import DataZone Environment using the `domain_idntifier,id`. For example:
 *
 * ```sh
 * $ pulumi import aws:datazone/environment:Environment example dzd_d2i7tzk3tnjjf4,5vpywijpwryec0
 * ```
 */
export declare class Environment extends pulumi.CustomResource {
    /**
     * Get an existing Environment resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, state?: EnvironmentState, opts?: pulumi.CustomResourceOptions): Environment;
    /**
     * Returns true if the given object is an instance of Environment.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is Environment;
    /**
     * The ID of the Amazon Web Services account where the environment exists
     */
    readonly accountIdentifier: pulumi.Output<string>;
    /**
     * The Amazon Web Services region where the environment exists.
     */
    readonly accountRegion: pulumi.Output<string>;
    /**
     * The blueprint with which the environment is created.
     */
    readonly blueprintIdentifier: pulumi.Output<string>;
    /**
     * The time the environment was created.
     */
    readonly createdAt: pulumi.Output<string>;
    /**
     * The user who created the environment.
     */
    readonly createdBy: pulumi.Output<string>;
    readonly description: pulumi.Output<string | undefined>;
    /**
     * The ID of the domain where the environment exists.
     */
    readonly domainIdentifier: pulumi.Output<string>;
    /**
     * The business glossary terms that can be used in this environment.
     */
    readonly glossaryTerms: pulumi.Output<string[] | undefined>;
    /**
     * The details of the last deployment of the environment.
     */
    readonly lastDeployments: pulumi.Output<outputs.datazone.EnvironmentLastDeployment[]>;
    /**
     * The name of the environment.
     */
    readonly name: pulumi.Output<string>;
    /**
     * The ID of the profile with which the environment is created.
     */
    readonly profileIdentifier: pulumi.Output<string>;
    /**
     * The ID of the project where the environment exists.
     *
     * The following arguments are optional:
     */
    readonly projectIdentifier: pulumi.Output<string>;
    /**
     * The provider of the environment.
     */
    readonly providerEnvironment: pulumi.Output<string>;
    readonly provisionedResources: pulumi.Output<outputs.datazone.EnvironmentProvisionedResource[]>;
    readonly timeouts: pulumi.Output<outputs.datazone.EnvironmentTimeouts | undefined>;
    /**
     * The user parameters that are used in the environment. See User Parameters for more information.
     */
    readonly userParameters: pulumi.Output<outputs.datazone.EnvironmentUserParameter[] | undefined>;
    /**
     * Create a Environment resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: EnvironmentArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * Input properties used for looking up and filtering Environment resources.
 */
export interface EnvironmentState {
    /**
     * The ID of the Amazon Web Services account where the environment exists
     */
    accountIdentifier?: pulumi.Input<string>;
    /**
     * The Amazon Web Services region where the environment exists.
     */
    accountRegion?: pulumi.Input<string>;
    /**
     * The blueprint with which the environment is created.
     */
    blueprintIdentifier?: pulumi.Input<string>;
    /**
     * The time the environment was created.
     */
    createdAt?: pulumi.Input<string>;
    /**
     * The user who created the environment.
     */
    createdBy?: pulumi.Input<string>;
    description?: pulumi.Input<string>;
    /**
     * The ID of the domain where the environment exists.
     */
    domainIdentifier?: pulumi.Input<string>;
    /**
     * The business glossary terms that can be used in this environment.
     */
    glossaryTerms?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The details of the last deployment of the environment.
     */
    lastDeployments?: pulumi.Input<pulumi.Input<inputs.datazone.EnvironmentLastDeployment>[]>;
    /**
     * The name of the environment.
     */
    name?: pulumi.Input<string>;
    /**
     * The ID of the profile with which the environment is created.
     */
    profileIdentifier?: pulumi.Input<string>;
    /**
     * The ID of the project where the environment exists.
     *
     * The following arguments are optional:
     */
    projectIdentifier?: pulumi.Input<string>;
    /**
     * The provider of the environment.
     */
    providerEnvironment?: pulumi.Input<string>;
    provisionedResources?: pulumi.Input<pulumi.Input<inputs.datazone.EnvironmentProvisionedResource>[]>;
    timeouts?: pulumi.Input<inputs.datazone.EnvironmentTimeouts>;
    /**
     * The user parameters that are used in the environment. See User Parameters for more information.
     */
    userParameters?: pulumi.Input<pulumi.Input<inputs.datazone.EnvironmentUserParameter>[]>;
}
/**
 * The set of arguments for constructing a Environment resource.
 */
export interface EnvironmentArgs {
    /**
     * The ID of the Amazon Web Services account where the environment exists
     */
    accountIdentifier?: pulumi.Input<string>;
    /**
     * The Amazon Web Services region where the environment exists.
     */
    accountRegion?: pulumi.Input<string>;
    /**
     * The blueprint with which the environment is created.
     */
    blueprintIdentifier?: pulumi.Input<string>;
    description?: pulumi.Input<string>;
    /**
     * The ID of the domain where the environment exists.
     */
    domainIdentifier: pulumi.Input<string>;
    /**
     * The business glossary terms that can be used in this environment.
     */
    glossaryTerms?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The name of the environment.
     */
    name?: pulumi.Input<string>;
    /**
     * The ID of the profile with which the environment is created.
     */
    profileIdentifier: pulumi.Input<string>;
    /**
     * The ID of the project where the environment exists.
     *
     * The following arguments are optional:
     */
    projectIdentifier: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.datazone.EnvironmentTimeouts>;
    /**
     * The user parameters that are used in the environment. See User Parameters for more information.
     */
    userParameters?: pulumi.Input<pulumi.Input<inputs.datazone.EnvironmentUserParameter>[]>;
}
