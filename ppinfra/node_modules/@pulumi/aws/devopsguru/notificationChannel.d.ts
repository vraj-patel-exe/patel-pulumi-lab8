import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
/**
 * Resource for managing an AWS DevOps Guru Notification Channel.
 *
 * ## Example Usage
 *
 * ### Basic Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const example = new aws.devopsguru.NotificationChannel("example", {sns: {
 *     topicArn: exampleAwsSnsTopic.arn,
 * }});
 * ```
 *
 * ### Filters
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const example = new aws.devopsguru.NotificationChannel("example", {
 *     sns: {
 *         topicArn: exampleAwsSnsTopic.arn,
 *     },
 *     filters: {
 *         messageTypes: ["NEW_INSIGHT"],
 *         severities: ["HIGH"],
 *     },
 * });
 * ```
 *
 * ## Import
 *
 * Using `pulumi import`, import DevOps Guru Notification Channel using the `id`. For example:
 *
 * ```sh
 * $ pulumi import aws:devopsguru/notificationChannel:NotificationChannel example id-12345678
 * ```
 */
export declare class NotificationChannel extends pulumi.CustomResource {
    /**
     * Get an existing NotificationChannel resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, state?: NotificationChannelState, opts?: pulumi.CustomResourceOptions): NotificationChannel;
    /**
     * Returns true if the given object is an instance of NotificationChannel.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is NotificationChannel;
    /**
     * Filter configurations for the Amazon SNS notification topic. See the `filters` argument reference below.
     */
    readonly filters: pulumi.Output<outputs.devopsguru.NotificationChannelFilters | undefined>;
    /**
     * SNS noficiation channel configurations. See the `sns` argument reference below.
     *
     * The following arguments are optional:
     */
    readonly sns: pulumi.Output<outputs.devopsguru.NotificationChannelSns | undefined>;
    /**
     * Create a NotificationChannel resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: NotificationChannelArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * Input properties used for looking up and filtering NotificationChannel resources.
 */
export interface NotificationChannelState {
    /**
     * Filter configurations for the Amazon SNS notification topic. See the `filters` argument reference below.
     */
    filters?: pulumi.Input<inputs.devopsguru.NotificationChannelFilters>;
    /**
     * SNS noficiation channel configurations. See the `sns` argument reference below.
     *
     * The following arguments are optional:
     */
    sns?: pulumi.Input<inputs.devopsguru.NotificationChannelSns>;
}
/**
 * The set of arguments for constructing a NotificationChannel resource.
 */
export interface NotificationChannelArgs {
    /**
     * Filter configurations for the Amazon SNS notification topic. See the `filters` argument reference below.
     */
    filters?: pulumi.Input<inputs.devopsguru.NotificationChannelFilters>;
    /**
     * SNS noficiation channel configurations. See the `sns` argument reference below.
     *
     * The following arguments are optional:
     */
    sns?: pulumi.Input<inputs.devopsguru.NotificationChannelSns>;
}
