"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.TransitVirtualInterface = exports.PublicVirtualInterface = exports.PrivateVirtualInterface = exports.MacsecKeyAssociation = exports.LinkAggregationGroup = exports.HostedTransitVirtualInterfaceAcceptor = exports.HostedTransitVirtualInterface = exports.HostedPublicVirtualInterfaceAccepter = exports.HostedPublicVirtualInterface = exports.HostedPrivateVirtualInterfaceAccepter = exports.HostedPrivateVirtualInterface = exports.HostedConnection = exports.getRouterConfigurationOutput = exports.getRouterConfiguration = exports.getLocationsOutput = exports.getLocations = exports.getLocationOutput = exports.getLocation = exports.getGatewayOutput = exports.getGateway = exports.getConnectionOutput = exports.getConnection = exports.GatewayAssociationProposal = exports.GatewayAssociation = exports.Gateway = exports.ConnectionConfirmation = exports.ConnectionAssociation = exports.Connection = exports.BgpPeer = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
exports.BgpPeer = null;
utilities.lazyLoad(exports, ["BgpPeer"], () => require("./bgpPeer"));
exports.Connection = null;
utilities.lazyLoad(exports, ["Connection"], () => require("./connection"));
exports.ConnectionAssociation = null;
utilities.lazyLoad(exports, ["ConnectionAssociation"], () => require("./connectionAssociation"));
exports.ConnectionConfirmation = null;
utilities.lazyLoad(exports, ["ConnectionConfirmation"], () => require("./connectionConfirmation"));
exports.Gateway = null;
utilities.lazyLoad(exports, ["Gateway"], () => require("./gateway"));
exports.GatewayAssociation = null;
utilities.lazyLoad(exports, ["GatewayAssociation"], () => require("./gatewayAssociation"));
exports.GatewayAssociationProposal = null;
utilities.lazyLoad(exports, ["GatewayAssociationProposal"], () => require("./gatewayAssociationProposal"));
exports.getConnection = null;
exports.getConnectionOutput = null;
utilities.lazyLoad(exports, ["getConnection", "getConnectionOutput"], () => require("./getConnection"));
exports.getGateway = null;
exports.getGatewayOutput = null;
utilities.lazyLoad(exports, ["getGateway", "getGatewayOutput"], () => require("./getGateway"));
exports.getLocation = null;
exports.getLocationOutput = null;
utilities.lazyLoad(exports, ["getLocation", "getLocationOutput"], () => require("./getLocation"));
exports.getLocations = null;
exports.getLocationsOutput = null;
utilities.lazyLoad(exports, ["getLocations", "getLocationsOutput"], () => require("./getLocations"));
exports.getRouterConfiguration = null;
exports.getRouterConfigurationOutput = null;
utilities.lazyLoad(exports, ["getRouterConfiguration", "getRouterConfigurationOutput"], () => require("./getRouterConfiguration"));
exports.HostedConnection = null;
utilities.lazyLoad(exports, ["HostedConnection"], () => require("./hostedConnection"));
exports.HostedPrivateVirtualInterface = null;
utilities.lazyLoad(exports, ["HostedPrivateVirtualInterface"], () => require("./hostedPrivateVirtualInterface"));
exports.HostedPrivateVirtualInterfaceAccepter = null;
utilities.lazyLoad(exports, ["HostedPrivateVirtualInterfaceAccepter"], () => require("./hostedPrivateVirtualInterfaceAccepter"));
exports.HostedPublicVirtualInterface = null;
utilities.lazyLoad(exports, ["HostedPublicVirtualInterface"], () => require("./hostedPublicVirtualInterface"));
exports.HostedPublicVirtualInterfaceAccepter = null;
utilities.lazyLoad(exports, ["HostedPublicVirtualInterfaceAccepter"], () => require("./hostedPublicVirtualInterfaceAccepter"));
exports.HostedTransitVirtualInterface = null;
utilities.lazyLoad(exports, ["HostedTransitVirtualInterface"], () => require("./hostedTransitVirtualInterface"));
exports.HostedTransitVirtualInterfaceAcceptor = null;
utilities.lazyLoad(exports, ["HostedTransitVirtualInterfaceAcceptor"], () => require("./hostedTransitVirtualInterfaceAcceptor"));
exports.LinkAggregationGroup = null;
utilities.lazyLoad(exports, ["LinkAggregationGroup"], () => require("./linkAggregationGroup"));
exports.MacsecKeyAssociation = null;
utilities.lazyLoad(exports, ["MacsecKeyAssociation"], () => require("./macsecKeyAssociation"));
exports.PrivateVirtualInterface = null;
utilities.lazyLoad(exports, ["PrivateVirtualInterface"], () => require("./privateVirtualInterface"));
exports.PublicVirtualInterface = null;
utilities.lazyLoad(exports, ["PublicVirtualInterface"], () => require("./publicVirtualInterface"));
exports.TransitVirtualInterface = null;
utilities.lazyLoad(exports, ["TransitVirtualInterface"], () => require("./transitVirtualInterface"));
const _module = {
    version: utilities.getVersion(),
    construct: (name, type, urn) => {
        switch (type) {
            case "aws:directconnect/bgpPeer:BgpPeer":
                return new exports.BgpPeer(name, undefined, { urn });
            case "aws:directconnect/connection:Connection":
                return new exports.Connection(name, undefined, { urn });
            case "aws:directconnect/connectionAssociation:ConnectionAssociation":
                return new exports.ConnectionAssociation(name, undefined, { urn });
            case "aws:directconnect/connectionConfirmation:ConnectionConfirmation":
                return new exports.ConnectionConfirmation(name, undefined, { urn });
            case "aws:directconnect/gateway:Gateway":
                return new exports.Gateway(name, undefined, { urn });
            case "aws:directconnect/gatewayAssociation:GatewayAssociation":
                return new exports.GatewayAssociation(name, undefined, { urn });
            case "aws:directconnect/gatewayAssociationProposal:GatewayAssociationProposal":
                return new exports.GatewayAssociationProposal(name, undefined, { urn });
            case "aws:directconnect/hostedConnection:HostedConnection":
                return new exports.HostedConnection(name, undefined, { urn });
            case "aws:directconnect/hostedPrivateVirtualInterface:HostedPrivateVirtualInterface":
                return new exports.HostedPrivateVirtualInterface(name, undefined, { urn });
            case "aws:directconnect/hostedPrivateVirtualInterfaceAccepter:HostedPrivateVirtualInterfaceAccepter":
                return new exports.HostedPrivateVirtualInterfaceAccepter(name, undefined, { urn });
            case "aws:directconnect/hostedPublicVirtualInterface:HostedPublicVirtualInterface":
                return new exports.HostedPublicVirtualInterface(name, undefined, { urn });
            case "aws:directconnect/hostedPublicVirtualInterfaceAccepter:HostedPublicVirtualInterfaceAccepter":
                return new exports.HostedPublicVirtualInterfaceAccepter(name, undefined, { urn });
            case "aws:directconnect/hostedTransitVirtualInterface:HostedTransitVirtualInterface":
                return new exports.HostedTransitVirtualInterface(name, undefined, { urn });
            case "aws:directconnect/hostedTransitVirtualInterfaceAcceptor:HostedTransitVirtualInterfaceAcceptor":
                return new exports.HostedTransitVirtualInterfaceAcceptor(name, undefined, { urn });
            case "aws:directconnect/linkAggregationGroup:LinkAggregationGroup":
                return new exports.LinkAggregationGroup(name, undefined, { urn });
            case "aws:directconnect/macsecKeyAssociation:MacsecKeyAssociation":
                return new exports.MacsecKeyAssociation(name, undefined, { urn });
            case "aws:directconnect/privateVirtualInterface:PrivateVirtualInterface":
                return new exports.PrivateVirtualInterface(name, undefined, { urn });
            case "aws:directconnect/publicVirtualInterface:PublicVirtualInterface":
                return new exports.PublicVirtualInterface(name, undefined, { urn });
            case "aws:directconnect/transitVirtualInterface:TransitVirtualInterface":
                return new exports.TransitVirtualInterface(name, undefined, { urn });
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("aws", "directconnect/bgpPeer", _module);
pulumi.runtime.registerResourceModule("aws", "directconnect/connection", _module);
pulumi.runtime.registerResourceModule("aws", "directconnect/connectionAssociation", _module);
pulumi.runtime.registerResourceModule("aws", "directconnect/connectionConfirmation", _module);
pulumi.runtime.registerResourceModule("aws", "directconnect/gateway", _module);
pulumi.runtime.registerResourceModule("aws", "directconnect/gatewayAssociation", _module);
pulumi.runtime.registerResourceModule("aws", "directconnect/gatewayAssociationProposal", _module);
pulumi.runtime.registerResourceModule("aws", "directconnect/hostedConnection", _module);
pulumi.runtime.registerResourceModule("aws", "directconnect/hostedPrivateVirtualInterface", _module);
pulumi.runtime.registerResourceModule("aws", "directconnect/hostedPrivateVirtualInterfaceAccepter", _module);
pulumi.runtime.registerResourceModule("aws", "directconnect/hostedPublicVirtualInterface", _module);
pulumi.runtime.registerResourceModule("aws", "directconnect/hostedPublicVirtualInterfaceAccepter", _module);
pulumi.runtime.registerResourceModule("aws", "directconnect/hostedTransitVirtualInterface", _module);
pulumi.runtime.registerResourceModule("aws", "directconnect/hostedTransitVirtualInterfaceAcceptor", _module);
pulumi.runtime.registerResourceModule("aws", "directconnect/linkAggregationGroup", _module);
pulumi.runtime.registerResourceModule("aws", "directconnect/macsecKeyAssociation", _module);
pulumi.runtime.registerResourceModule("aws", "directconnect/privateVirtualInterface", _module);
pulumi.runtime.registerResourceModule("aws", "directconnect/publicVirtualInterface", _module);
pulumi.runtime.registerResourceModule("aws", "directconnect/transitVirtualInterface", _module);
//# sourceMappingURL=index.js.map