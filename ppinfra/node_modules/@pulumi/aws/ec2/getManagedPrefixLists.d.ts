import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
/**
 * This resource can be useful for getting back a list of managed prefix list ids to be referenced elsewhere.
 *
 * ## Example Usage
 *
 * The following returns all managed prefix lists filtered by tags
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const testEnv = aws.ec2.getManagedPrefixLists({
 *     tags: {
 *         Env: "test",
 *     },
 * });
 * const testEnvGetManagedPrefixList = .map(__index => (aws.ec2.getManagedPrefixList({
 *     id: _arg0_.ids[__index],
 * })));
 * ```
 */
export declare function getManagedPrefixLists(args?: GetManagedPrefixListsArgs, opts?: pulumi.InvokeOptions): Promise<GetManagedPrefixListsResult>;
/**
 * A collection of arguments for invoking getManagedPrefixLists.
 */
export interface GetManagedPrefixListsArgs {
    /**
     * Custom filter block as described below.
     */
    filters?: inputs.ec2.GetManagedPrefixListsFilter[];
    /**
     * Map of tags, each pair of which must exactly match
     * a pair on the desired .
     *
     * More complex filters can be expressed using one or more `filter` sub-blocks,
     * which take the following arguments:
     */
    tags?: {
        [key: string]: string;
    };
}
/**
 * A collection of values returned by getManagedPrefixLists.
 */
export interface GetManagedPrefixListsResult {
    readonly filters?: outputs.ec2.GetManagedPrefixListsFilter[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * List of all the managed prefix list ids found.
     */
    readonly ids: string[];
    readonly tags: {
        [key: string]: string;
    };
}
/**
 * This resource can be useful for getting back a list of managed prefix list ids to be referenced elsewhere.
 *
 * ## Example Usage
 *
 * The following returns all managed prefix lists filtered by tags
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const testEnv = aws.ec2.getManagedPrefixLists({
 *     tags: {
 *         Env: "test",
 *     },
 * });
 * const testEnvGetManagedPrefixList = .map(__index => (aws.ec2.getManagedPrefixList({
 *     id: _arg0_.ids[__index],
 * })));
 * ```
 */
export declare function getManagedPrefixListsOutput(args?: GetManagedPrefixListsOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetManagedPrefixListsResult>;
/**
 * A collection of arguments for invoking getManagedPrefixLists.
 */
export interface GetManagedPrefixListsOutputArgs {
    /**
     * Custom filter block as described below.
     */
    filters?: pulumi.Input<pulumi.Input<inputs.ec2.GetManagedPrefixListsFilterArgs>[]>;
    /**
     * Map of tags, each pair of which must exactly match
     * a pair on the desired .
     *
     * More complex filters can be expressed using one or more `filter` sub-blocks,
     * which take the following arguments:
     */
    tags?: pulumi.Input<{
        [key: string]: pulumi.Input<string>;
    }>;
}
