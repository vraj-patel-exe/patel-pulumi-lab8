"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.getSecurityGroupsOutput = exports.getSecurityGroups = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
/**
 * Use this data source to get IDs and VPC membership of Security Groups that are created outside this provider.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const test = aws.ec2.getSecurityGroups({
 *     tags: {
 *         Application: "k8s",
 *         Environment: "dev",
 *     },
 * });
 * ```
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const test = aws.ec2.getSecurityGroups({
 *     filters: [
 *         {
 *             name: "group-name",
 *             values: ["*nodes*"],
 *         },
 *         {
 *             name: "vpc-id",
 *             values: [vpcId],
 *         },
 *     ],
 * });
 * ```
 */
function getSecurityGroups(args, opts) {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aws:ec2/getSecurityGroups:getSecurityGroups", {
        "filters": args.filters,
        "tags": args.tags,
    }, opts);
}
exports.getSecurityGroups = getSecurityGroups;
/**
 * Use this data source to get IDs and VPC membership of Security Groups that are created outside this provider.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const test = aws.ec2.getSecurityGroups({
 *     tags: {
 *         Application: "k8s",
 *         Environment: "dev",
 *     },
 * });
 * ```
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const test = aws.ec2.getSecurityGroups({
 *     filters: [
 *         {
 *             name: "group-name",
 *             values: ["*nodes*"],
 *         },
 *         {
 *             name: "vpc-id",
 *             values: [vpcId],
 *         },
 *     ],
 * });
 * ```
 */
function getSecurityGroupsOutput(args, opts) {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("aws:ec2/getSecurityGroups:getSecurityGroups", {
        "filters": args.filters,
        "tags": args.tags,
    }, opts);
}
exports.getSecurityGroupsOutput = getSecurityGroupsOutput;
//# sourceMappingURL=getSecurityGroups.js.map