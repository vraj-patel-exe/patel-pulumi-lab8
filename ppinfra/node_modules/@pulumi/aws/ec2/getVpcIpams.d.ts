import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
/**
 * Data source for managing VPC IPAMs.
 *
 * ## Example Usage
 *
 * ### Basic Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const example = aws.ec2.getVpcIpams({
 *     ipamIds: ["ipam-abcd1234"],
 * });
 * ```
 *
 * ### Filter by `tags`
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const example = aws.ec2.getVpcIpams({
 *     filters: [{
 *         name: "tags.Some",
 *         values: ["Value"],
 *     }],
 * });
 * ```
 *
 * ### Filter by `tier`
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const example = aws.ec2.getVpcIpams({
 *     filters: [{
 *         name: "tier",
 *         values: ["free"],
 *     }],
 * });
 * ```
 */
export declare function getVpcIpams(args?: GetVpcIpamsArgs, opts?: pulumi.InvokeOptions): Promise<GetVpcIpamsResult>;
/**
 * A collection of arguments for invoking getVpcIpams.
 */
export interface GetVpcIpamsArgs {
    /**
     * Custom filter block as described below.
     *
     * More complex filters can be expressed using one or more `filter` sub-blocks,
     * which take the following arguments:
     */
    filters?: inputs.ec2.GetVpcIpamsFilter[];
    /**
     * IDs of the IPAM resources to query for.
     */
    ipamIds?: string[];
}
/**
 * A collection of values returned by getVpcIpams.
 */
export interface GetVpcIpamsResult {
    readonly filters?: outputs.ec2.GetVpcIpamsFilter[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly ipamIds?: string[];
    /**
     * List of IPAM resources matching the provided arguments.
     */
    readonly ipams: outputs.ec2.GetVpcIpamsIpam[];
}
/**
 * Data source for managing VPC IPAMs.
 *
 * ## Example Usage
 *
 * ### Basic Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const example = aws.ec2.getVpcIpams({
 *     ipamIds: ["ipam-abcd1234"],
 * });
 * ```
 *
 * ### Filter by `tags`
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const example = aws.ec2.getVpcIpams({
 *     filters: [{
 *         name: "tags.Some",
 *         values: ["Value"],
 *     }],
 * });
 * ```
 *
 * ### Filter by `tier`
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const example = aws.ec2.getVpcIpams({
 *     filters: [{
 *         name: "tier",
 *         values: ["free"],
 *     }],
 * });
 * ```
 */
export declare function getVpcIpamsOutput(args?: GetVpcIpamsOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetVpcIpamsResult>;
/**
 * A collection of arguments for invoking getVpcIpams.
 */
export interface GetVpcIpamsOutputArgs {
    /**
     * Custom filter block as described below.
     *
     * More complex filters can be expressed using one or more `filter` sub-blocks,
     * which take the following arguments:
     */
    filters?: pulumi.Input<pulumi.Input<inputs.ec2.GetVpcIpamsFilterArgs>[]>;
    /**
     * IDs of the IPAM resources to query for.
     */
    ipamIds?: pulumi.Input<pulumi.Input<string>[]>;
}
