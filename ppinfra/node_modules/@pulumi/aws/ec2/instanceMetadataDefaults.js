"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.InstanceMetadataDefaults = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
/**
 * Manages regional EC2 instance metadata default settings.
 * More information can be found in the [Configure instance metadata options for new instances](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/configuring-IMDS-new-instances.html) user guide.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const enforce_imdsv2 = new aws.ec2.InstanceMetadataDefaults("enforce-imdsv2", {
 *     httpTokens: "required",
 *     httpPutResponseHopLimit: 1,
 * });
 * ```
 *
 * ## Import
 *
 * You cannot import this resource.
 */
class InstanceMetadataDefaults extends pulumi.CustomResource {
    /**
     * Get an existing InstanceMetadataDefaults resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name, id, state, opts) {
        return new InstanceMetadataDefaults(name, state, Object.assign(Object.assign({}, opts), { id: id }));
    }
    /**
     * Returns true if the given object is an instance of InstanceMetadataDefaults.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === InstanceMetadataDefaults.__pulumiType;
    }
    constructor(name, argsOrState, opts) {
        let resourceInputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState;
            resourceInputs["httpEndpoint"] = state ? state.httpEndpoint : undefined;
            resourceInputs["httpPutResponseHopLimit"] = state ? state.httpPutResponseHopLimit : undefined;
            resourceInputs["httpTokens"] = state ? state.httpTokens : undefined;
            resourceInputs["instanceMetadataTags"] = state ? state.instanceMetadataTags : undefined;
        }
        else {
            const args = argsOrState;
            resourceInputs["httpEndpoint"] = args ? args.httpEndpoint : undefined;
            resourceInputs["httpPutResponseHopLimit"] = args ? args.httpPutResponseHopLimit : undefined;
            resourceInputs["httpTokens"] = args ? args.httpTokens : undefined;
            resourceInputs["instanceMetadataTags"] = args ? args.instanceMetadataTags : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(InstanceMetadataDefaults.__pulumiType, name, resourceInputs, opts);
    }
}
exports.InstanceMetadataDefaults = InstanceMetadataDefaults;
/** @internal */
InstanceMetadataDefaults.__pulumiType = 'aws:ec2/instanceMetadataDefaults:InstanceMetadataDefaults';
//# sourceMappingURL=instanceMetadataDefaults.js.map