"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.VpcNetworkPerformanceMetricSubscription = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
/**
 * Provides a resource to manage an Infrastructure Performance subscription.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const example = new aws.ec2.VpcNetworkPerformanceMetricSubscription("example", {
 *     source: "us-east-1",
 *     destination: "us-west-1",
 * });
 * ```
 */
class VpcNetworkPerformanceMetricSubscription extends pulumi.CustomResource {
    /**
     * Get an existing VpcNetworkPerformanceMetricSubscription resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name, id, state, opts) {
        return new VpcNetworkPerformanceMetricSubscription(name, state, Object.assign(Object.assign({}, opts), { id: id }));
    }
    /**
     * Returns true if the given object is an instance of VpcNetworkPerformanceMetricSubscription.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === VpcNetworkPerformanceMetricSubscription.__pulumiType;
    }
    constructor(name, argsOrState, opts) {
        let resourceInputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState;
            resourceInputs["destination"] = state ? state.destination : undefined;
            resourceInputs["metric"] = state ? state.metric : undefined;
            resourceInputs["period"] = state ? state.period : undefined;
            resourceInputs["source"] = state ? state.source : undefined;
            resourceInputs["statistic"] = state ? state.statistic : undefined;
        }
        else {
            const args = argsOrState;
            if ((!args || args.destination === undefined) && !opts.urn) {
                throw new Error("Missing required property 'destination'");
            }
            if ((!args || args.source === undefined) && !opts.urn) {
                throw new Error("Missing required property 'source'");
            }
            resourceInputs["destination"] = args ? args.destination : undefined;
            resourceInputs["metric"] = args ? args.metric : undefined;
            resourceInputs["source"] = args ? args.source : undefined;
            resourceInputs["statistic"] = args ? args.statistic : undefined;
            resourceInputs["period"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(VpcNetworkPerformanceMetricSubscription.__pulumiType, name, resourceInputs, opts);
    }
}
exports.VpcNetworkPerformanceMetricSubscription = VpcNetworkPerformanceMetricSubscription;
/** @internal */
VpcNetworkPerformanceMetricSubscription.__pulumiType = 'aws:ec2/vpcNetworkPerformanceMetricSubscription:VpcNetworkPerformanceMetricSubscription';
//# sourceMappingURL=vpcNetworkPerformanceMetricSubscription.js.map