export { ConnectArgs, ConnectState } from "./connect";
export type Connect = import("./connect").Connect;
export declare const Connect: typeof import("./connect").Connect;
export { ConnectPeerArgs, ConnectPeerState } from "./connectPeer";
export type ConnectPeer = import("./connectPeer").ConnectPeer;
export declare const ConnectPeer: typeof import("./connectPeer").ConnectPeer;
export { DefaultRouteTableAssociationArgs, DefaultRouteTableAssociationState } from "./defaultRouteTableAssociation";
export type DefaultRouteTableAssociation = import("./defaultRouteTableAssociation").DefaultRouteTableAssociation;
export declare const DefaultRouteTableAssociation: typeof import("./defaultRouteTableAssociation").DefaultRouteTableAssociation;
export { DefaultRouteTablePropagationArgs, DefaultRouteTablePropagationState } from "./defaultRouteTablePropagation";
export type DefaultRouteTablePropagation = import("./defaultRouteTablePropagation").DefaultRouteTablePropagation;
export declare const DefaultRouteTablePropagation: typeof import("./defaultRouteTablePropagation").DefaultRouteTablePropagation;
export { GetAttachmentArgs, GetAttachmentResult, GetAttachmentOutputArgs } from "./getAttachment";
export declare const getAttachment: typeof import("./getAttachment").getAttachment;
export declare const getAttachmentOutput: typeof import("./getAttachment").getAttachmentOutput;
export { GetAttachmentsArgs, GetAttachmentsResult, GetAttachmentsOutputArgs } from "./getAttachments";
export declare const getAttachments: typeof import("./getAttachments").getAttachments;
export declare const getAttachmentsOutput: typeof import("./getAttachments").getAttachmentsOutput;
export { GetConnectArgs, GetConnectResult, GetConnectOutputArgs } from "./getConnect";
export declare const getConnect: typeof import("./getConnect").getConnect;
export declare const getConnectOutput: typeof import("./getConnect").getConnectOutput;
export { GetConnectPeerArgs, GetConnectPeerResult, GetConnectPeerOutputArgs } from "./getConnectPeer";
export declare const getConnectPeer: typeof import("./getConnectPeer").getConnectPeer;
export declare const getConnectPeerOutput: typeof import("./getConnectPeer").getConnectPeerOutput;
export { GetDirectConnectGatewayAttachmentArgs, GetDirectConnectGatewayAttachmentResult, GetDirectConnectGatewayAttachmentOutputArgs } from "./getDirectConnectGatewayAttachment";
export declare const getDirectConnectGatewayAttachment: typeof import("./getDirectConnectGatewayAttachment").getDirectConnectGatewayAttachment;
export declare const getDirectConnectGatewayAttachmentOutput: typeof import("./getDirectConnectGatewayAttachment").getDirectConnectGatewayAttachmentOutput;
export { GetMulticastDomainArgs, GetMulticastDomainResult, GetMulticastDomainOutputArgs } from "./getMulticastDomain";
export declare const getMulticastDomain: typeof import("./getMulticastDomain").getMulticastDomain;
export declare const getMulticastDomainOutput: typeof import("./getMulticastDomain").getMulticastDomainOutput;
export { GetPeeringAttachmentArgs, GetPeeringAttachmentResult, GetPeeringAttachmentOutputArgs } from "./getPeeringAttachment";
export declare const getPeeringAttachment: typeof import("./getPeeringAttachment").getPeeringAttachment;
export declare const getPeeringAttachmentOutput: typeof import("./getPeeringAttachment").getPeeringAttachmentOutput;
export { GetPeeringAttachmentsArgs, GetPeeringAttachmentsResult, GetPeeringAttachmentsOutputArgs } from "./getPeeringAttachments";
export declare const getPeeringAttachments: typeof import("./getPeeringAttachments").getPeeringAttachments;
export declare const getPeeringAttachmentsOutput: typeof import("./getPeeringAttachments").getPeeringAttachmentsOutput;
export { GetRouteTableArgs, GetRouteTableResult, GetRouteTableOutputArgs } from "./getRouteTable";
export declare const getRouteTable: typeof import("./getRouteTable").getRouteTable;
export declare const getRouteTableOutput: typeof import("./getRouteTable").getRouteTableOutput;
export { GetRouteTableAssociationsArgs, GetRouteTableAssociationsResult, GetRouteTableAssociationsOutputArgs } from "./getRouteTableAssociations";
export declare const getRouteTableAssociations: typeof import("./getRouteTableAssociations").getRouteTableAssociations;
export declare const getRouteTableAssociationsOutput: typeof import("./getRouteTableAssociations").getRouteTableAssociationsOutput;
export { GetRouteTablePropagationsArgs, GetRouteTablePropagationsResult, GetRouteTablePropagationsOutputArgs } from "./getRouteTablePropagations";
export declare const getRouteTablePropagations: typeof import("./getRouteTablePropagations").getRouteTablePropagations;
export declare const getRouteTablePropagationsOutput: typeof import("./getRouteTablePropagations").getRouteTablePropagationsOutput;
export { GetRouteTableRoutesArgs, GetRouteTableRoutesResult, GetRouteTableRoutesOutputArgs } from "./getRouteTableRoutes";
export declare const getRouteTableRoutes: typeof import("./getRouteTableRoutes").getRouteTableRoutes;
export declare const getRouteTableRoutesOutput: typeof import("./getRouteTableRoutes").getRouteTableRoutesOutput;
export { GetTransitGatewayArgs, GetTransitGatewayResult, GetTransitGatewayOutputArgs } from "./getTransitGateway";
export declare const getTransitGateway: typeof import("./getTransitGateway").getTransitGateway;
export declare const getTransitGatewayOutput: typeof import("./getTransitGateway").getTransitGatewayOutput;
export { GetVpcAttachmentArgs, GetVpcAttachmentResult, GetVpcAttachmentOutputArgs } from "./getVpcAttachment";
export declare const getVpcAttachment: typeof import("./getVpcAttachment").getVpcAttachment;
export declare const getVpcAttachmentOutput: typeof import("./getVpcAttachment").getVpcAttachmentOutput;
export { GetVpcAttachmentsArgs, GetVpcAttachmentsResult, GetVpcAttachmentsOutputArgs } from "./getVpcAttachments";
export declare const getVpcAttachments: typeof import("./getVpcAttachments").getVpcAttachments;
export declare const getVpcAttachmentsOutput: typeof import("./getVpcAttachments").getVpcAttachmentsOutput;
export { GetVpnAttachmentArgs, GetVpnAttachmentResult, GetVpnAttachmentOutputArgs } from "./getVpnAttachment";
export declare const getVpnAttachment: typeof import("./getVpnAttachment").getVpnAttachment;
export declare const getVpnAttachmentOutput: typeof import("./getVpnAttachment").getVpnAttachmentOutput;
export { InstanceConnectEndpointArgs, InstanceConnectEndpointState } from "./instanceConnectEndpoint";
export type InstanceConnectEndpoint = import("./instanceConnectEndpoint").InstanceConnectEndpoint;
export declare const InstanceConnectEndpoint: typeof import("./instanceConnectEndpoint").InstanceConnectEndpoint;
export { InstanceStateArgs, InstanceStateState } from "./instanceState";
export type InstanceState = import("./instanceState").InstanceState;
export declare const InstanceState: typeof import("./instanceState").InstanceState;
export { MulticastDomainArgs, MulticastDomainState } from "./multicastDomain";
export type MulticastDomain = import("./multicastDomain").MulticastDomain;
export declare const MulticastDomain: typeof import("./multicastDomain").MulticastDomain;
export { MulticastDomainAssociationArgs, MulticastDomainAssociationState } from "./multicastDomainAssociation";
export type MulticastDomainAssociation = import("./multicastDomainAssociation").MulticastDomainAssociation;
export declare const MulticastDomainAssociation: typeof import("./multicastDomainAssociation").MulticastDomainAssociation;
export { MulticastGroupMemberArgs, MulticastGroupMemberState } from "./multicastGroupMember";
export type MulticastGroupMember = import("./multicastGroupMember").MulticastGroupMember;
export declare const MulticastGroupMember: typeof import("./multicastGroupMember").MulticastGroupMember;
export { MulticastGroupSourceArgs, MulticastGroupSourceState } from "./multicastGroupSource";
export type MulticastGroupSource = import("./multicastGroupSource").MulticastGroupSource;
export declare const MulticastGroupSource: typeof import("./multicastGroupSource").MulticastGroupSource;
export { PeeringAttachmentArgs, PeeringAttachmentState } from "./peeringAttachment";
export type PeeringAttachment = import("./peeringAttachment").PeeringAttachment;
export declare const PeeringAttachment: typeof import("./peeringAttachment").PeeringAttachment;
export { PeeringAttachmentAccepterArgs, PeeringAttachmentAccepterState } from "./peeringAttachmentAccepter";
export type PeeringAttachmentAccepter = import("./peeringAttachmentAccepter").PeeringAttachmentAccepter;
export declare const PeeringAttachmentAccepter: typeof import("./peeringAttachmentAccepter").PeeringAttachmentAccepter;
export { PolicyTableArgs, PolicyTableState } from "./policyTable";
export type PolicyTable = import("./policyTable").PolicyTable;
export declare const PolicyTable: typeof import("./policyTable").PolicyTable;
export { PolicyTableAssociationArgs, PolicyTableAssociationState } from "./policyTableAssociation";
export type PolicyTableAssociation = import("./policyTableAssociation").PolicyTableAssociation;
export declare const PolicyTableAssociation: typeof import("./policyTableAssociation").PolicyTableAssociation;
export { PrefixListReferenceArgs, PrefixListReferenceState } from "./prefixListReference";
export type PrefixListReference = import("./prefixListReference").PrefixListReference;
export declare const PrefixListReference: typeof import("./prefixListReference").PrefixListReference;
export { RouteArgs, RouteState } from "./route";
export type Route = import("./route").Route;
export declare const Route: typeof import("./route").Route;
export { RouteTableArgs, RouteTableState } from "./routeTable";
export type RouteTable = import("./routeTable").RouteTable;
export declare const RouteTable: typeof import("./routeTable").RouteTable;
export { RouteTableAssociationArgs, RouteTableAssociationState } from "./routeTableAssociation";
export type RouteTableAssociation = import("./routeTableAssociation").RouteTableAssociation;
export declare const RouteTableAssociation: typeof import("./routeTableAssociation").RouteTableAssociation;
export { RouteTablePropagationArgs, RouteTablePropagationState } from "./routeTablePropagation";
export type RouteTablePropagation = import("./routeTablePropagation").RouteTablePropagation;
export declare const RouteTablePropagation: typeof import("./routeTablePropagation").RouteTablePropagation;
export { TransitGatewayArgs, TransitGatewayState } from "./transitGateway";
export type TransitGateway = import("./transitGateway").TransitGateway;
export declare const TransitGateway: typeof import("./transitGateway").TransitGateway;
export { VpcAttachmentArgs, VpcAttachmentState } from "./vpcAttachment";
export type VpcAttachment = import("./vpcAttachment").VpcAttachment;
export declare const VpcAttachment: typeof import("./vpcAttachment").VpcAttachment;
export { VpcAttachmentAccepterArgs, VpcAttachmentAccepterState } from "./vpcAttachmentAccepter";
export type VpcAttachmentAccepter = import("./vpcAttachmentAccepter").VpcAttachmentAccepter;
export declare const VpcAttachmentAccepter: typeof import("./vpcAttachmentAccepter").VpcAttachmentAccepter;
