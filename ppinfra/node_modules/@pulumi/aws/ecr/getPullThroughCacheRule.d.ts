import * as pulumi from "@pulumi/pulumi";
/**
 * The ECR Pull Through Cache Rule data source allows the upstream registry URL and registry ID to be retrieved for a Pull Through Cache Rule.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const ecrPublic = aws.ecr.getPullThroughCacheRule({
 *     ecrRepositoryPrefix: "ecr-public",
 * });
 * ```
 */
export declare function getPullThroughCacheRule(args: GetPullThroughCacheRuleArgs, opts?: pulumi.InvokeOptions): Promise<GetPullThroughCacheRuleResult>;
/**
 * A collection of arguments for invoking getPullThroughCacheRule.
 */
export interface GetPullThroughCacheRuleArgs {
    /**
     * The repository name prefix to use when caching images from the source registry.
     */
    ecrRepositoryPrefix: string;
}
/**
 * A collection of values returned by getPullThroughCacheRule.
 */
export interface GetPullThroughCacheRuleResult {
    /**
     * ARN of the Secret which will be used to authenticate against the registry.
     */
    readonly credentialArn: string;
    readonly ecrRepositoryPrefix: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * The registry ID where the repository was created.
     */
    readonly registryId: string;
    /**
     * The registry URL of the upstream public registry to use as the source.
     */
    readonly upstreamRegistryUrl: string;
}
/**
 * The ECR Pull Through Cache Rule data source allows the upstream registry URL and registry ID to be retrieved for a Pull Through Cache Rule.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const ecrPublic = aws.ecr.getPullThroughCacheRule({
 *     ecrRepositoryPrefix: "ecr-public",
 * });
 * ```
 */
export declare function getPullThroughCacheRuleOutput(args: GetPullThroughCacheRuleOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetPullThroughCacheRuleResult>;
/**
 * A collection of arguments for invoking getPullThroughCacheRule.
 */
export interface GetPullThroughCacheRuleOutputArgs {
    /**
     * The repository name prefix to use when caching images from the source registry.
     */
    ecrRepositoryPrefix: pulumi.Input<string>;
}
