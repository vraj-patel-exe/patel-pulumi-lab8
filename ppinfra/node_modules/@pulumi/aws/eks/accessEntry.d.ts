import * as pulumi from "@pulumi/pulumi";
/**
 * Access Entry Configurations for an EKS Cluster.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const example = new aws.eks.AccessEntry("example", {
 *     clusterName: exampleAwsEksCluster.name,
 *     principalArn: exampleAwsIamRole.arn,
 *     kubernetesGroups: [
 *         "group-1",
 *         "group-2",
 *     ],
 *     type: "STANDARD",
 * });
 * ```
 *
 * ## Import
 *
 * Using `pulumi import`, import EKS access entry using the `cluster_name` and `principal_arn` separated by a colon (`:`). For example:
 *
 * ```sh
 * $ pulumi import aws:eks/accessEntry:AccessEntry my_eks_access_entry my_cluster_name:my_principal_arn
 * ```
 */
export declare class AccessEntry extends pulumi.CustomResource {
    /**
     * Get an existing AccessEntry resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, state?: AccessEntryState, opts?: pulumi.CustomResourceOptions): AccessEntry;
    /**
     * Returns true if the given object is an instance of AccessEntry.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is AccessEntry;
    /**
     * Amazon Resource Name (ARN) of the Access Entry.
     */
    readonly accessEntryArn: pulumi.Output<string>;
    /**
     * Name of the EKS Cluster.
     */
    readonly clusterName: pulumi.Output<string>;
    /**
     * Date and time in [RFC3339 format](https://tools.ietf.org/html/rfc3339#section-5.8) that the EKS add-on was created.
     */
    readonly createdAt: pulumi.Output<string>;
    /**
     * List of string which can optionally specify the Kubernetes groups the user would belong to when creating an access entry.
     */
    readonly kubernetesGroups: pulumi.Output<string[]>;
    /**
     * Date and time in [RFC3339 format](https://tools.ietf.org/html/rfc3339#section-5.8) that the EKS add-on was updated.
     */
    readonly modifiedAt: pulumi.Output<string>;
    /**
     * The IAM Principal ARN which requires Authentication access to the EKS cluster.
     *
     * The following arguments are optional:
     */
    readonly principalArn: pulumi.Output<string>;
    /**
     * Key-value map of resource tags. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     */
    readonly tags: pulumi.Output<{
        [key: string]: string;
    } | undefined>;
    /**
     * (Optional) Key-value map of resource tags, including those inherited from the provider `defaultTags` configuration block.
     *
     * @deprecated Please use `tags` instead.
     */
    readonly tagsAll: pulumi.Output<{
        [key: string]: string;
    }>;
    /**
     * Defaults to STANDARD which provides the standard workflow. EC2_LINUX, EC2_WINDOWS, FARGATE_LINUX types disallow users to input a username or groups, and prevent associations.
     */
    readonly type: pulumi.Output<string | undefined>;
    /**
     * Defaults to principal ARN if user is principal else defaults to assume-role/session-name is role is used.
     */
    readonly userName: pulumi.Output<string>;
    /**
     * Create a AccessEntry resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: AccessEntryArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * Input properties used for looking up and filtering AccessEntry resources.
 */
export interface AccessEntryState {
    /**
     * Amazon Resource Name (ARN) of the Access Entry.
     */
    accessEntryArn?: pulumi.Input<string>;
    /**
     * Name of the EKS Cluster.
     */
    clusterName?: pulumi.Input<string>;
    /**
     * Date and time in [RFC3339 format](https://tools.ietf.org/html/rfc3339#section-5.8) that the EKS add-on was created.
     */
    createdAt?: pulumi.Input<string>;
    /**
     * List of string which can optionally specify the Kubernetes groups the user would belong to when creating an access entry.
     */
    kubernetesGroups?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Date and time in [RFC3339 format](https://tools.ietf.org/html/rfc3339#section-5.8) that the EKS add-on was updated.
     */
    modifiedAt?: pulumi.Input<string>;
    /**
     * The IAM Principal ARN which requires Authentication access to the EKS cluster.
     *
     * The following arguments are optional:
     */
    principalArn?: pulumi.Input<string>;
    /**
     * Key-value map of resource tags. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     */
    tags?: pulumi.Input<{
        [key: string]: pulumi.Input<string>;
    }>;
    /**
     * (Optional) Key-value map of resource tags, including those inherited from the provider `defaultTags` configuration block.
     *
     * @deprecated Please use `tags` instead.
     */
    tagsAll?: pulumi.Input<{
        [key: string]: pulumi.Input<string>;
    }>;
    /**
     * Defaults to STANDARD which provides the standard workflow. EC2_LINUX, EC2_WINDOWS, FARGATE_LINUX types disallow users to input a username or groups, and prevent associations.
     */
    type?: pulumi.Input<string>;
    /**
     * Defaults to principal ARN if user is principal else defaults to assume-role/session-name is role is used.
     */
    userName?: pulumi.Input<string>;
}
/**
 * The set of arguments for constructing a AccessEntry resource.
 */
export interface AccessEntryArgs {
    /**
     * Name of the EKS Cluster.
     */
    clusterName: pulumi.Input<string>;
    /**
     * List of string which can optionally specify the Kubernetes groups the user would belong to when creating an access entry.
     */
    kubernetesGroups?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The IAM Principal ARN which requires Authentication access to the EKS cluster.
     *
     * The following arguments are optional:
     */
    principalArn: pulumi.Input<string>;
    /**
     * Key-value map of resource tags. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     */
    tags?: pulumi.Input<{
        [key: string]: pulumi.Input<string>;
    }>;
    /**
     * Defaults to STANDARD which provides the standard workflow. EC2_LINUX, EC2_WINDOWS, FARGATE_LINUX types disallow users to input a username or groups, and prevent associations.
     */
    type?: pulumi.Input<string>;
    /**
     * Defaults to principal ARN if user is principal else defaults to assume-role/session-name is role is used.
     */
    userName?: pulumi.Input<string>;
}
