"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.getNodeGroupsOutput = exports.getNodeGroups = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
/**
 * Retrieve the EKS Node Groups associated with a named EKS cluster. This will allow you to pass a list of Node Group names to other resources.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const example = aws.eks.getNodeGroups({
 *     clusterName: "example",
 * });
 * const exampleGetNodeGroup = example.then(example => .reduce((__obj, [__key, __value]) => ({ ...__obj, [__key]: aws.eks.getNodeGroup({
 *     clusterName: "example",
 *     nodeGroupName: __value,
 * }) })));
 * ```
 */
function getNodeGroups(args, opts) {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aws:eks/getNodeGroups:getNodeGroups", {
        "clusterName": args.clusterName,
    }, opts);
}
exports.getNodeGroups = getNodeGroups;
/**
 * Retrieve the EKS Node Groups associated with a named EKS cluster. This will allow you to pass a list of Node Group names to other resources.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const example = aws.eks.getNodeGroups({
 *     clusterName: "example",
 * });
 * const exampleGetNodeGroup = example.then(example => .reduce((__obj, [__key, __value]) => ({ ...__obj, [__key]: aws.eks.getNodeGroup({
 *     clusterName: "example",
 *     nodeGroupName: __value,
 * }) })));
 * ```
 */
function getNodeGroupsOutput(args, opts) {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("aws:eks/getNodeGroups:getNodeGroups", {
        "clusterName": args.clusterName,
    }, opts);
}
exports.getNodeGroupsOutput = getNodeGroupsOutput;
//# sourceMappingURL=getNodeGroups.js.map