"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.PodIdentityAssociation = exports.NodeGroup = exports.IdentityProviderConfig = exports.getNodeGroupsOutput = exports.getNodeGroups = exports.getNodeGroupOutput = exports.getNodeGroup = exports.getClustersOutput = exports.getClusters = exports.getClusterAuthOutput = exports.getClusterAuth = exports.getClusterOutput = exports.getCluster = exports.getAddonVersionOutput = exports.getAddonVersion = exports.getAddonOutput = exports.getAddon = exports.getAccessEntryOutput = exports.getAccessEntry = exports.FargateProfile = exports.Cluster = exports.Addon = exports.AccessPolicyAssociation = exports.AccessEntry = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
exports.AccessEntry = null;
utilities.lazyLoad(exports, ["AccessEntry"], () => require("./accessEntry"));
exports.AccessPolicyAssociation = null;
utilities.lazyLoad(exports, ["AccessPolicyAssociation"], () => require("./accessPolicyAssociation"));
exports.Addon = null;
utilities.lazyLoad(exports, ["Addon"], () => require("./addon"));
exports.Cluster = null;
utilities.lazyLoad(exports, ["Cluster"], () => require("./cluster"));
exports.FargateProfile = null;
utilities.lazyLoad(exports, ["FargateProfile"], () => require("./fargateProfile"));
exports.getAccessEntry = null;
exports.getAccessEntryOutput = null;
utilities.lazyLoad(exports, ["getAccessEntry", "getAccessEntryOutput"], () => require("./getAccessEntry"));
exports.getAddon = null;
exports.getAddonOutput = null;
utilities.lazyLoad(exports, ["getAddon", "getAddonOutput"], () => require("./getAddon"));
exports.getAddonVersion = null;
exports.getAddonVersionOutput = null;
utilities.lazyLoad(exports, ["getAddonVersion", "getAddonVersionOutput"], () => require("./getAddonVersion"));
exports.getCluster = null;
exports.getClusterOutput = null;
utilities.lazyLoad(exports, ["getCluster", "getClusterOutput"], () => require("./getCluster"));
exports.getClusterAuth = null;
exports.getClusterAuthOutput = null;
utilities.lazyLoad(exports, ["getClusterAuth", "getClusterAuthOutput"], () => require("./getClusterAuth"));
exports.getClusters = null;
exports.getClustersOutput = null;
utilities.lazyLoad(exports, ["getClusters", "getClustersOutput"], () => require("./getClusters"));
exports.getNodeGroup = null;
exports.getNodeGroupOutput = null;
utilities.lazyLoad(exports, ["getNodeGroup", "getNodeGroupOutput"], () => require("./getNodeGroup"));
exports.getNodeGroups = null;
exports.getNodeGroupsOutput = null;
utilities.lazyLoad(exports, ["getNodeGroups", "getNodeGroupsOutput"], () => require("./getNodeGroups"));
exports.IdentityProviderConfig = null;
utilities.lazyLoad(exports, ["IdentityProviderConfig"], () => require("./identityProviderConfig"));
exports.NodeGroup = null;
utilities.lazyLoad(exports, ["NodeGroup"], () => require("./nodeGroup"));
exports.PodIdentityAssociation = null;
utilities.lazyLoad(exports, ["PodIdentityAssociation"], () => require("./podIdentityAssociation"));
const _module = {
    version: utilities.getVersion(),
    construct: (name, type, urn) => {
        switch (type) {
            case "aws:eks/accessEntry:AccessEntry":
                return new exports.AccessEntry(name, undefined, { urn });
            case "aws:eks/accessPolicyAssociation:AccessPolicyAssociation":
                return new exports.AccessPolicyAssociation(name, undefined, { urn });
            case "aws:eks/addon:Addon":
                return new exports.Addon(name, undefined, { urn });
            case "aws:eks/cluster:Cluster":
                return new exports.Cluster(name, undefined, { urn });
            case "aws:eks/fargateProfile:FargateProfile":
                return new exports.FargateProfile(name, undefined, { urn });
            case "aws:eks/identityProviderConfig:IdentityProviderConfig":
                return new exports.IdentityProviderConfig(name, undefined, { urn });
            case "aws:eks/nodeGroup:NodeGroup":
                return new exports.NodeGroup(name, undefined, { urn });
            case "aws:eks/podIdentityAssociation:PodIdentityAssociation":
                return new exports.PodIdentityAssociation(name, undefined, { urn });
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("aws", "eks/accessEntry", _module);
pulumi.runtime.registerResourceModule("aws", "eks/accessPolicyAssociation", _module);
pulumi.runtime.registerResourceModule("aws", "eks/addon", _module);
pulumi.runtime.registerResourceModule("aws", "eks/cluster", _module);
pulumi.runtime.registerResourceModule("aws", "eks/fargateProfile", _module);
pulumi.runtime.registerResourceModule("aws", "eks/identityProviderConfig", _module);
pulumi.runtime.registerResourceModule("aws", "eks/nodeGroup", _module);
pulumi.runtime.registerResourceModule("aws", "eks/podIdentityAssociation", _module);
//# sourceMappingURL=index.js.map