"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.getSolutionStackOutput = exports.getSolutionStack = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
/**
 * Use this data source to get the name of a elastic beanstalk solution stack.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const multiDocker = aws.elasticbeanstalk.getSolutionStack({
 *     mostRecent: true,
 *     nameRegex: "^64bit Amazon Linux (.*) Multi-container Docker (.*)$",
 * });
 * ```
 */
function getSolutionStack(args, opts) {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aws:elasticbeanstalk/getSolutionStack:getSolutionStack", {
        "mostRecent": args.mostRecent,
        "nameRegex": args.nameRegex,
    }, opts);
}
exports.getSolutionStack = getSolutionStack;
/**
 * Use this data source to get the name of a elastic beanstalk solution stack.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const multiDocker = aws.elasticbeanstalk.getSolutionStack({
 *     mostRecent: true,
 *     nameRegex: "^64bit Amazon Linux (.*) Multi-container Docker (.*)$",
 * });
 * ```
 */
function getSolutionStackOutput(args, opts) {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("aws:elasticbeanstalk/getSolutionStack:getSolutionStack", {
        "mostRecent": args.mostRecent,
        "nameRegex": args.nameRegex,
    }, opts);
}
exports.getSolutionStackOutput = getSolutionStackOutput;
//# sourceMappingURL=getSolutionStack.js.map