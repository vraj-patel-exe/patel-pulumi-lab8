"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.getSupportedInstanceTypesOutput = exports.getSupportedInstanceTypes = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
/**
 * Data source for managing AWS EMR Supported Instance Types.
 *
 * ## Example Usage
 *
 * ### Basic Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const example = aws.emr.getSupportedInstanceTypes({
 *     releaseLabel: "ebs-6.15.0",
 * });
 * ```
 *
 * ### With a Lifecycle Pre-Condition
 *
 * This data source can be used with a lifecycle precondition to ensure a given instance type is supported by EMR.
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const instanceType = "r7g.large";
 * const releaseLabel = "emr-6.15.0";
 * const test = aws.emr.getSupportedInstanceTypes({
 *     releaseLabel: releaseLabel,
 * });
 * const testCluster = new aws.emr.Cluster("test", {
 *     releaseLabel: releaseLabel,
 *     masterInstanceGroup: {
 *         instanceType: instanceType,
 *     },
 * });
 * ```
 */
function getSupportedInstanceTypes(args, opts) {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aws:emr/getSupportedInstanceTypes:getSupportedInstanceTypes", {
        "releaseLabel": args.releaseLabel,
        "supportedInstanceTypes": args.supportedInstanceTypes,
    }, opts);
}
exports.getSupportedInstanceTypes = getSupportedInstanceTypes;
/**
 * Data source for managing AWS EMR Supported Instance Types.
 *
 * ## Example Usage
 *
 * ### Basic Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const example = aws.emr.getSupportedInstanceTypes({
 *     releaseLabel: "ebs-6.15.0",
 * });
 * ```
 *
 * ### With a Lifecycle Pre-Condition
 *
 * This data source can be used with a lifecycle precondition to ensure a given instance type is supported by EMR.
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const instanceType = "r7g.large";
 * const releaseLabel = "emr-6.15.0";
 * const test = aws.emr.getSupportedInstanceTypes({
 *     releaseLabel: releaseLabel,
 * });
 * const testCluster = new aws.emr.Cluster("test", {
 *     releaseLabel: releaseLabel,
 *     masterInstanceGroup: {
 *         instanceType: instanceType,
 *     },
 * });
 * ```
 */
function getSupportedInstanceTypesOutput(args, opts) {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("aws:emr/getSupportedInstanceTypes:getSupportedInstanceTypes", {
        "releaseLabel": args.releaseLabel,
        "supportedInstanceTypes": args.supportedInstanceTypes,
    }, opts);
}
exports.getSupportedInstanceTypesOutput = getSupportedInstanceTypesOutput;
//# sourceMappingURL=getSupportedInstanceTypes.js.map