"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.KxVolume = exports.KxUser = exports.KxScalingGroup = exports.KxEnvironment = exports.KxDataview = exports.KxDatabase = exports.KxCluster = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
exports.KxCluster = null;
utilities.lazyLoad(exports, ["KxCluster"], () => require("./kxCluster"));
exports.KxDatabase = null;
utilities.lazyLoad(exports, ["KxDatabase"], () => require("./kxDatabase"));
exports.KxDataview = null;
utilities.lazyLoad(exports, ["KxDataview"], () => require("./kxDataview"));
exports.KxEnvironment = null;
utilities.lazyLoad(exports, ["KxEnvironment"], () => require("./kxEnvironment"));
exports.KxScalingGroup = null;
utilities.lazyLoad(exports, ["KxScalingGroup"], () => require("./kxScalingGroup"));
exports.KxUser = null;
utilities.lazyLoad(exports, ["KxUser"], () => require("./kxUser"));
exports.KxVolume = null;
utilities.lazyLoad(exports, ["KxVolume"], () => require("./kxVolume"));
const _module = {
    version: utilities.getVersion(),
    construct: (name, type, urn) => {
        switch (type) {
            case "aws:finspace/kxCluster:KxCluster":
                return new exports.KxCluster(name, undefined, { urn });
            case "aws:finspace/kxDatabase:KxDatabase":
                return new exports.KxDatabase(name, undefined, { urn });
            case "aws:finspace/kxDataview:KxDataview":
                return new exports.KxDataview(name, undefined, { urn });
            case "aws:finspace/kxEnvironment:KxEnvironment":
                return new exports.KxEnvironment(name, undefined, { urn });
            case "aws:finspace/kxScalingGroup:KxScalingGroup":
                return new exports.KxScalingGroup(name, undefined, { urn });
            case "aws:finspace/kxUser:KxUser":
                return new exports.KxUser(name, undefined, { urn });
            case "aws:finspace/kxVolume:KxVolume":
                return new exports.KxVolume(name, undefined, { urn });
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("aws", "finspace/kxCluster", _module);
pulumi.runtime.registerResourceModule("aws", "finspace/kxDatabase", _module);
pulumi.runtime.registerResourceModule("aws", "finspace/kxDataview", _module);
pulumi.runtime.registerResourceModule("aws", "finspace/kxEnvironment", _module);
pulumi.runtime.registerResourceModule("aws", "finspace/kxScalingGroup", _module);
pulumi.runtime.registerResourceModule("aws", "finspace/kxUser", _module);
pulumi.runtime.registerResourceModule("aws", "finspace/kxVolume", _module);
//# sourceMappingURL=index.js.map