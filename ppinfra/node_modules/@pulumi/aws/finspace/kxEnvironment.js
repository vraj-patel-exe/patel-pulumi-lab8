"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.KxEnvironment = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
/**
 * Resource for managing an AWS FinSpace Kx Environment.
 *
 * ## Example Usage
 *
 * ### Basic Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const example = new aws.kms.Key("example", {
 *     description: "Sample KMS Key",
 *     deletionWindowInDays: 7,
 * });
 * const exampleKxEnvironment = new aws.finspace.KxEnvironment("example", {
 *     name: "my-tf-kx-environment",
 *     kmsKeyId: example.arn,
 * });
 * ```
 *
 * ### With Transit Gateway Configuration
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const example = new aws.kms.Key("example", {
 *     description: "Sample KMS Key",
 *     deletionWindowInDays: 7,
 * });
 * const exampleTransitGateway = new aws.ec2transitgateway.TransitGateway("example", {description: "example"});
 * const exampleEnv = new aws.finspace.KxEnvironment("example_env", {
 *     name: "my-tf-kx-environment",
 *     description: "Environment description",
 *     kmsKeyId: example.arn,
 *     transitGatewayConfiguration: {
 *         transitGatewayId: exampleTransitGateway.id,
 *         routableCidrSpace: "100.64.0.0/26",
 *     },
 *     customDnsConfigurations: [{
 *         customDnsServerName: "example.finspace.amazonaws.com",
 *         customDnsServerIp: "10.0.0.76",
 *     }],
 * });
 * ```
 *
 * ### With Transit Gateway Attachment Network ACL Configuration
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const example = new aws.kms.Key("example", {
 *     description: "Sample KMS Key",
 *     deletionWindowInDays: 7,
 * });
 * const exampleTransitGateway = new aws.ec2transitgateway.TransitGateway("example", {description: "example"});
 * const exampleEnv = new aws.finspace.KxEnvironment("example_env", {
 *     name: "my-tf-kx-environment",
 *     description: "Environment description",
 *     kmsKeyId: example.arn,
 *     transitGatewayConfiguration: {
 *         transitGatewayId: exampleTransitGateway.id,
 *         routableCidrSpace: "100.64.0.0/26",
 *         attachmentNetworkAclConfigurations: [{
 *             ruleNumber: 1,
 *             protocol: "6",
 *             ruleAction: "allow",
 *             cidrBlock: "0.0.0.0/0",
 *             portRange: {
 *                 from: 53,
 *                 to: 53,
 *             },
 *             icmpTypeCode: {
 *                 type: -1,
 *                 code: -1,
 *             },
 *         }],
 *     },
 *     customDnsConfigurations: [{
 *         customDnsServerName: "example.finspace.amazonaws.com",
 *         customDnsServerIp: "10.0.0.76",
 *     }],
 * });
 * ```
 *
 * ## Import
 *
 * Using `pulumi import`, import an AWS FinSpace Kx Environment using the `id`. For example:
 *
 * ```sh
 * $ pulumi import aws:finspace/kxEnvironment:KxEnvironment example n3ceo7wqxoxcti5tujqwzs
 * ```
 */
class KxEnvironment extends pulumi.CustomResource {
    /**
     * Get an existing KxEnvironment resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name, id, state, opts) {
        return new KxEnvironment(name, state, Object.assign(Object.assign({}, opts), { id: id }));
    }
    /**
     * Returns true if the given object is an instance of KxEnvironment.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === KxEnvironment.__pulumiType;
    }
    constructor(name, argsOrState, opts) {
        let resourceInputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState;
            resourceInputs["arn"] = state ? state.arn : undefined;
            resourceInputs["availabilityZones"] = state ? state.availabilityZones : undefined;
            resourceInputs["createdTimestamp"] = state ? state.createdTimestamp : undefined;
            resourceInputs["customDnsConfigurations"] = state ? state.customDnsConfigurations : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["infrastructureAccountId"] = state ? state.infrastructureAccountId : undefined;
            resourceInputs["kmsKeyId"] = state ? state.kmsKeyId : undefined;
            resourceInputs["lastModifiedTimestamp"] = state ? state.lastModifiedTimestamp : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["status"] = state ? state.status : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
            resourceInputs["tagsAll"] = state ? state.tagsAll : undefined;
            resourceInputs["transitGatewayConfiguration"] = state ? state.transitGatewayConfiguration : undefined;
        }
        else {
            const args = argsOrState;
            if ((!args || args.kmsKeyId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'kmsKeyId'");
            }
            resourceInputs["customDnsConfigurations"] = args ? args.customDnsConfigurations : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["kmsKeyId"] = args ? args.kmsKeyId : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["transitGatewayConfiguration"] = args ? args.transitGatewayConfiguration : undefined;
            resourceInputs["arn"] = undefined /*out*/;
            resourceInputs["availabilityZones"] = undefined /*out*/;
            resourceInputs["createdTimestamp"] = undefined /*out*/;
            resourceInputs["infrastructureAccountId"] = undefined /*out*/;
            resourceInputs["lastModifiedTimestamp"] = undefined /*out*/;
            resourceInputs["status"] = undefined /*out*/;
            resourceInputs["tagsAll"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(KxEnvironment.__pulumiType, name, resourceInputs, opts);
    }
}
exports.KxEnvironment = KxEnvironment;
/** @internal */
KxEnvironment.__pulumiType = 'aws:finspace/kxEnvironment:KxEnvironment';
//# sourceMappingURL=kxEnvironment.js.map