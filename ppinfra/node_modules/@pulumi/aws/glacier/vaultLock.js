"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.VaultLock = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
/**
 * ## Example Usage
 *
 * ### Testing Glacier Vault Lock Policy
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const exampleVault = new aws.glacier.Vault("example", {name: "example"});
 * const example = aws.iam.getPolicyDocumentOutput({
 *     statements: [{
 *         actions: ["glacier:DeleteArchive"],
 *         effect: "Deny",
 *         resources: [exampleVault.arn],
 *         conditions: [{
 *             test: "NumericLessThanEquals",
 *             variable: "glacier:ArchiveAgeinDays",
 *             values: ["365"],
 *         }],
 *     }],
 * });
 * const exampleVaultLock = new aws.glacier.VaultLock("example", {
 *     completeLock: false,
 *     policy: example.apply(example => example.json),
 *     vaultName: exampleVault.name,
 * });
 * ```
 *
 * ### Permanently Applying Glacier Vault Lock Policy
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const example = new aws.glacier.VaultLock("example", {
 *     completeLock: true,
 *     policy: exampleAwsIamPolicyDocument.json,
 *     vaultName: exampleAwsGlacierVault.name,
 * });
 * ```
 *
 * ## Import
 *
 * Using `pulumi import`, import Glacier Vault Locks using the Glacier Vault name. For example:
 *
 * ```sh
 * $ pulumi import aws:glacier/vaultLock:VaultLock example example-vault
 * ```
 */
class VaultLock extends pulumi.CustomResource {
    /**
     * Get an existing VaultLock resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name, id, state, opts) {
        return new VaultLock(name, state, Object.assign(Object.assign({}, opts), { id: id }));
    }
    /**
     * Returns true if the given object is an instance of VaultLock.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === VaultLock.__pulumiType;
    }
    constructor(name, argsOrState, opts) {
        let resourceInputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState;
            resourceInputs["completeLock"] = state ? state.completeLock : undefined;
            resourceInputs["ignoreDeletionError"] = state ? state.ignoreDeletionError : undefined;
            resourceInputs["policy"] = state ? state.policy : undefined;
            resourceInputs["vaultName"] = state ? state.vaultName : undefined;
        }
        else {
            const args = argsOrState;
            if ((!args || args.completeLock === undefined) && !opts.urn) {
                throw new Error("Missing required property 'completeLock'");
            }
            if ((!args || args.policy === undefined) && !opts.urn) {
                throw new Error("Missing required property 'policy'");
            }
            if ((!args || args.vaultName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'vaultName'");
            }
            resourceInputs["completeLock"] = args ? args.completeLock : undefined;
            resourceInputs["ignoreDeletionError"] = args ? args.ignoreDeletionError : undefined;
            resourceInputs["policy"] = args ? args.policy : undefined;
            resourceInputs["vaultName"] = args ? args.vaultName : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(VaultLock.__pulumiType, name, resourceInputs, opts);
    }
}
exports.VaultLock = VaultLock;
/** @internal */
VaultLock.__pulumiType = 'aws:glacier/vaultLock:VaultLock';
//# sourceMappingURL=vaultLock.js.map