"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.CustomRoutingListener = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
/**
 * Provides a Global Accelerator custom routing listener.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const example = new aws.globalaccelerator.CustomRoutingAccelerator("example", {
 *     name: "Example",
 *     ipAddressType: "IPV4",
 *     enabled: true,
 *     attributes: {
 *         flowLogsEnabled: true,
 *         flowLogsS3Bucket: "example-bucket",
 *         flowLogsS3Prefix: "flow-logs/",
 *     },
 * });
 * const exampleCustomRoutingListener = new aws.globalaccelerator.CustomRoutingListener("example", {
 *     acceleratorArn: example.arn,
 *     portRanges: [{
 *         fromPort: 80,
 *         toPort: 80,
 *     }],
 * });
 * ```
 *
 * ## Import
 *
 * Using `pulumi import`, import Global Accelerator custom routing listeners using the `id`. For example:
 *
 * ```sh
 * $ pulumi import aws:globalaccelerator/customRoutingListener:CustomRoutingListener example arn:aws:globalaccelerator::111111111111:accelerator/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx/listener/xxxxxxxx
 * ```
 */
class CustomRoutingListener extends pulumi.CustomResource {
    /**
     * Get an existing CustomRoutingListener resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name, id, state, opts) {
        return new CustomRoutingListener(name, state, Object.assign(Object.assign({}, opts), { id: id }));
    }
    /**
     * Returns true if the given object is an instance of CustomRoutingListener.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === CustomRoutingListener.__pulumiType;
    }
    constructor(name, argsOrState, opts) {
        let resourceInputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState;
            resourceInputs["acceleratorArn"] = state ? state.acceleratorArn : undefined;
            resourceInputs["arn"] = state ? state.arn : undefined;
            resourceInputs["portRanges"] = state ? state.portRanges : undefined;
        }
        else {
            const args = argsOrState;
            if ((!args || args.acceleratorArn === undefined) && !opts.urn) {
                throw new Error("Missing required property 'acceleratorArn'");
            }
            if ((!args || args.portRanges === undefined) && !opts.urn) {
                throw new Error("Missing required property 'portRanges'");
            }
            resourceInputs["acceleratorArn"] = args ? args.acceleratorArn : undefined;
            resourceInputs["portRanges"] = args ? args.portRanges : undefined;
            resourceInputs["arn"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(CustomRoutingListener.__pulumiType, name, resourceInputs, opts);
    }
}
exports.CustomRoutingListener = CustomRoutingListener;
/** @internal */
CustomRoutingListener.__pulumiType = 'aws:globalaccelerator/customRoutingListener:CustomRoutingListener';
//# sourceMappingURL=customRoutingListener.js.map