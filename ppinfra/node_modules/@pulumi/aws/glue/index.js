"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.Workflow = exports.UserDefinedFunction = exports.Trigger = exports.SecurityConfiguration = exports.Schema = exports.ResourcePolicy = exports.Registry = exports.PartitionIndex = exports.Partition = exports.MLTransform = exports.Job = exports.getScriptOutput = exports.getScript = exports.getRegistryOutput = exports.getRegistry = exports.getDataCatalogEncryptionSettingsOutput = exports.getDataCatalogEncryptionSettings = exports.getConnectionOutput = exports.getConnection = exports.getCatalogTableOutput = exports.getCatalogTable = exports.DevEndpoint = exports.DataQualityRuleset = exports.DataCatalogEncryptionSettings = exports.Crawler = exports.Connection = exports.Classifier = exports.CatalogTableOptimizer = exports.CatalogTable = exports.CatalogDatabase = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
exports.CatalogDatabase = null;
utilities.lazyLoad(exports, ["CatalogDatabase"], () => require("./catalogDatabase"));
exports.CatalogTable = null;
utilities.lazyLoad(exports, ["CatalogTable"], () => require("./catalogTable"));
exports.CatalogTableOptimizer = null;
utilities.lazyLoad(exports, ["CatalogTableOptimizer"], () => require("./catalogTableOptimizer"));
exports.Classifier = null;
utilities.lazyLoad(exports, ["Classifier"], () => require("./classifier"));
exports.Connection = null;
utilities.lazyLoad(exports, ["Connection"], () => require("./connection"));
exports.Crawler = null;
utilities.lazyLoad(exports, ["Crawler"], () => require("./crawler"));
exports.DataCatalogEncryptionSettings = null;
utilities.lazyLoad(exports, ["DataCatalogEncryptionSettings"], () => require("./dataCatalogEncryptionSettings"));
exports.DataQualityRuleset = null;
utilities.lazyLoad(exports, ["DataQualityRuleset"], () => require("./dataQualityRuleset"));
exports.DevEndpoint = null;
utilities.lazyLoad(exports, ["DevEndpoint"], () => require("./devEndpoint"));
exports.getCatalogTable = null;
exports.getCatalogTableOutput = null;
utilities.lazyLoad(exports, ["getCatalogTable", "getCatalogTableOutput"], () => require("./getCatalogTable"));
exports.getConnection = null;
exports.getConnectionOutput = null;
utilities.lazyLoad(exports, ["getConnection", "getConnectionOutput"], () => require("./getConnection"));
exports.getDataCatalogEncryptionSettings = null;
exports.getDataCatalogEncryptionSettingsOutput = null;
utilities.lazyLoad(exports, ["getDataCatalogEncryptionSettings", "getDataCatalogEncryptionSettingsOutput"], () => require("./getDataCatalogEncryptionSettings"));
exports.getRegistry = null;
exports.getRegistryOutput = null;
utilities.lazyLoad(exports, ["getRegistry", "getRegistryOutput"], () => require("./getRegistry"));
exports.getScript = null;
exports.getScriptOutput = null;
utilities.lazyLoad(exports, ["getScript", "getScriptOutput"], () => require("./getScript"));
exports.Job = null;
utilities.lazyLoad(exports, ["Job"], () => require("./job"));
exports.MLTransform = null;
utilities.lazyLoad(exports, ["MLTransform"], () => require("./mltransform"));
exports.Partition = null;
utilities.lazyLoad(exports, ["Partition"], () => require("./partition"));
exports.PartitionIndex = null;
utilities.lazyLoad(exports, ["PartitionIndex"], () => require("./partitionIndex"));
exports.Registry = null;
utilities.lazyLoad(exports, ["Registry"], () => require("./registry"));
exports.ResourcePolicy = null;
utilities.lazyLoad(exports, ["ResourcePolicy"], () => require("./resourcePolicy"));
exports.Schema = null;
utilities.lazyLoad(exports, ["Schema"], () => require("./schema"));
exports.SecurityConfiguration = null;
utilities.lazyLoad(exports, ["SecurityConfiguration"], () => require("./securityConfiguration"));
exports.Trigger = null;
utilities.lazyLoad(exports, ["Trigger"], () => require("./trigger"));
exports.UserDefinedFunction = null;
utilities.lazyLoad(exports, ["UserDefinedFunction"], () => require("./userDefinedFunction"));
exports.Workflow = null;
utilities.lazyLoad(exports, ["Workflow"], () => require("./workflow"));
const _module = {
    version: utilities.getVersion(),
    construct: (name, type, urn) => {
        switch (type) {
            case "aws:glue/catalogDatabase:CatalogDatabase":
                return new exports.CatalogDatabase(name, undefined, { urn });
            case "aws:glue/catalogTable:CatalogTable":
                return new exports.CatalogTable(name, undefined, { urn });
            case "aws:glue/catalogTableOptimizer:CatalogTableOptimizer":
                return new exports.CatalogTableOptimizer(name, undefined, { urn });
            case "aws:glue/classifier:Classifier":
                return new exports.Classifier(name, undefined, { urn });
            case "aws:glue/connection:Connection":
                return new exports.Connection(name, undefined, { urn });
            case "aws:glue/crawler:Crawler":
                return new exports.Crawler(name, undefined, { urn });
            case "aws:glue/dataCatalogEncryptionSettings:DataCatalogEncryptionSettings":
                return new exports.DataCatalogEncryptionSettings(name, undefined, { urn });
            case "aws:glue/dataQualityRuleset:DataQualityRuleset":
                return new exports.DataQualityRuleset(name, undefined, { urn });
            case "aws:glue/devEndpoint:DevEndpoint":
                return new exports.DevEndpoint(name, undefined, { urn });
            case "aws:glue/job:Job":
                return new exports.Job(name, undefined, { urn });
            case "aws:glue/mLTransform:MLTransform":
                return new exports.MLTransform(name, undefined, { urn });
            case "aws:glue/partition:Partition":
                return new exports.Partition(name, undefined, { urn });
            case "aws:glue/partitionIndex:PartitionIndex":
                return new exports.PartitionIndex(name, undefined, { urn });
            case "aws:glue/registry:Registry":
                return new exports.Registry(name, undefined, { urn });
            case "aws:glue/resourcePolicy:ResourcePolicy":
                return new exports.ResourcePolicy(name, undefined, { urn });
            case "aws:glue/schema:Schema":
                return new exports.Schema(name, undefined, { urn });
            case "aws:glue/securityConfiguration:SecurityConfiguration":
                return new exports.SecurityConfiguration(name, undefined, { urn });
            case "aws:glue/trigger:Trigger":
                return new exports.Trigger(name, undefined, { urn });
            case "aws:glue/userDefinedFunction:UserDefinedFunction":
                return new exports.UserDefinedFunction(name, undefined, { urn });
            case "aws:glue/workflow:Workflow":
                return new exports.Workflow(name, undefined, { urn });
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("aws", "glue/catalogDatabase", _module);
pulumi.runtime.registerResourceModule("aws", "glue/catalogTable", _module);
pulumi.runtime.registerResourceModule("aws", "glue/catalogTableOptimizer", _module);
pulumi.runtime.registerResourceModule("aws", "glue/classifier", _module);
pulumi.runtime.registerResourceModule("aws", "glue/connection", _module);
pulumi.runtime.registerResourceModule("aws", "glue/crawler", _module);
pulumi.runtime.registerResourceModule("aws", "glue/dataCatalogEncryptionSettings", _module);
pulumi.runtime.registerResourceModule("aws", "glue/dataQualityRuleset", _module);
pulumi.runtime.registerResourceModule("aws", "glue/devEndpoint", _module);
pulumi.runtime.registerResourceModule("aws", "glue/job", _module);
pulumi.runtime.registerResourceModule("aws", "glue/mLTransform", _module);
pulumi.runtime.registerResourceModule("aws", "glue/partition", _module);
pulumi.runtime.registerResourceModule("aws", "glue/partitionIndex", _module);
pulumi.runtime.registerResourceModule("aws", "glue/registry", _module);
pulumi.runtime.registerResourceModule("aws", "glue/resourcePolicy", _module);
pulumi.runtime.registerResourceModule("aws", "glue/schema", _module);
pulumi.runtime.registerResourceModule("aws", "glue/securityConfiguration", _module);
pulumi.runtime.registerResourceModule("aws", "glue/trigger", _module);
pulumi.runtime.registerResourceModule("aws", "glue/userDefinedFunction", _module);
pulumi.runtime.registerResourceModule("aws", "glue/workflow", _module);
//# sourceMappingURL=index.js.map