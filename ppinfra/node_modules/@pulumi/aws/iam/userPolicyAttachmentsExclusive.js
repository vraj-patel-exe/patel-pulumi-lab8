"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.UserPolicyAttachmentsExclusive = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
/**
 * ## Import
 *
 * Using `pulumi import`, import exclusive management of managed IAM policy assignments using the `user_name`. For example:
 *
 * ```sh
 * $ pulumi import aws:iam/userPolicyAttachmentsExclusive:UserPolicyAttachmentsExclusive example MyUser
 * ```
 */
class UserPolicyAttachmentsExclusive extends pulumi.CustomResource {
    /**
     * Get an existing UserPolicyAttachmentsExclusive resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name, id, state, opts) {
        return new UserPolicyAttachmentsExclusive(name, state, Object.assign(Object.assign({}, opts), { id: id }));
    }
    /**
     * Returns true if the given object is an instance of UserPolicyAttachmentsExclusive.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === UserPolicyAttachmentsExclusive.__pulumiType;
    }
    constructor(name, argsOrState, opts) {
        let resourceInputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState;
            resourceInputs["policyArns"] = state ? state.policyArns : undefined;
            resourceInputs["userName"] = state ? state.userName : undefined;
        }
        else {
            const args = argsOrState;
            if ((!args || args.policyArns === undefined) && !opts.urn) {
                throw new Error("Missing required property 'policyArns'");
            }
            if ((!args || args.userName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'userName'");
            }
            resourceInputs["policyArns"] = args ? args.policyArns : undefined;
            resourceInputs["userName"] = args ? args.userName : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(UserPolicyAttachmentsExclusive.__pulumiType, name, resourceInputs, opts);
    }
}
exports.UserPolicyAttachmentsExclusive = UserPolicyAttachmentsExclusive;
/** @internal */
UserPolicyAttachmentsExclusive.__pulumiType = 'aws:iam/userPolicyAttachmentsExclusive:UserPolicyAttachmentsExclusive';
//# sourceMappingURL=userPolicyAttachmentsExclusive.js.map