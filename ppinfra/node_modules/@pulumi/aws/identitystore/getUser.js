"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.getUserOutput = exports.getUser = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
/**
 * Use this data source to get an Identity Store User.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const example = aws.ssoadmin.getInstances({});
 * const exampleGetUser = example.then(example => aws.identitystore.getUser({
 *     identityStoreId: example.identityStoreIds?.[0],
 *     alternateIdentifier: {
 *         uniqueAttribute: {
 *             attributePath: "UserName",
 *             attributeValue: "ExampleUser",
 *         },
 *     },
 * }));
 * export const userId = exampleGetUser.then(exampleGetUser => exampleGetUser.userId);
 * ```
 */
function getUser(args, opts) {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aws:identitystore/getUser:getUser", {
        "alternateIdentifier": args.alternateIdentifier,
        "filter": args.filter,
        "identityStoreId": args.identityStoreId,
        "userId": args.userId,
    }, opts);
}
exports.getUser = getUser;
/**
 * Use this data source to get an Identity Store User.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const example = aws.ssoadmin.getInstances({});
 * const exampleGetUser = example.then(example => aws.identitystore.getUser({
 *     identityStoreId: example.identityStoreIds?.[0],
 *     alternateIdentifier: {
 *         uniqueAttribute: {
 *             attributePath: "UserName",
 *             attributeValue: "ExampleUser",
 *         },
 *     },
 * }));
 * export const userId = exampleGetUser.then(exampleGetUser => exampleGetUser.userId);
 * ```
 */
function getUserOutput(args, opts) {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("aws:identitystore/getUser:getUser", {
        "alternateIdentifier": args.alternateIdentifier,
        "filter": args.filter,
        "identityStoreId": args.identityStoreId,
        "userId": args.userId,
    }, opts);
}
exports.getUserOutput = getUserOutput;
//# sourceMappingURL=getUser.js.map