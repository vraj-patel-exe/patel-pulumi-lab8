import * as pulumi from "@pulumi/pulumi";
/**
 * Resource for enabling Amazon Inspector resource scans.
 *
 * This resource must be created in the Organization's Administrator Account.
 *
 * ## Example Usage
 *
 * ### Basic Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const example = new aws.inspector2.Enabler("example", {
 *     accountIds: ["123456789012"],
 *     resourceTypes: ["EC2"],
 * });
 * ```
 *
 * ### For the Calling Account
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const current = aws.getCallerIdentity({});
 * const test = new aws.inspector2.Enabler("test", {
 *     accountIds: [current.then(current => current.accountId)],
 *     resourceTypes: [
 *         "ECR",
 *         "EC2",
 *     ],
 * });
 * ```
 */
export declare class Enabler extends pulumi.CustomResource {
    /**
     * Get an existing Enabler resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, state?: EnablerState, opts?: pulumi.CustomResourceOptions): Enabler;
    /**
     * Returns true if the given object is an instance of Enabler.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is Enabler;
    /**
     * Set of account IDs.
     * Can contain one of: the Organization's Administrator Account, or one or more Member Accounts.
     */
    readonly accountIds: pulumi.Output<string[]>;
    /**
     * Type of resources to scan.
     * Valid values are `EC2`, `ECR`, `LAMBDA` and `LAMBDA_CODE`.
     * At least one item is required.
     */
    readonly resourceTypes: pulumi.Output<string[]>;
    /**
     * Create a Enabler resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: EnablerArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * Input properties used for looking up and filtering Enabler resources.
 */
export interface EnablerState {
    /**
     * Set of account IDs.
     * Can contain one of: the Organization's Administrator Account, or one or more Member Accounts.
     */
    accountIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Type of resources to scan.
     * Valid values are `EC2`, `ECR`, `LAMBDA` and `LAMBDA_CODE`.
     * At least one item is required.
     */
    resourceTypes?: pulumi.Input<pulumi.Input<string>[]>;
}
/**
 * The set of arguments for constructing a Enabler resource.
 */
export interface EnablerArgs {
    /**
     * Set of account IDs.
     * Can contain one of: the Organization's Administrator Account, or one or more Member Accounts.
     */
    accountIds: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Type of resources to scan.
     * Valid values are `EC2`, `ECR`, `LAMBDA` and `LAMBDA_CODE`.
     * At least one item is required.
     */
    resourceTypes: pulumi.Input<pulumi.Input<string>[]>;
}
