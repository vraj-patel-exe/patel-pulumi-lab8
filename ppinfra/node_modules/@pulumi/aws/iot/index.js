"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.TopicRuleDestination = exports.TopicRule = exports.ThingType = exports.ThingPrincipalAttachment = exports.ThingGroupMembership = exports.ThingGroup = exports.Thing = exports.RoleAlias = exports.ProvisioningTemplate = exports.PolicyAttachment = exports.Policy = exports.LoggingOptions = exports.IndexingConfiguration = exports.getRegistrationCodeOutput = exports.getRegistrationCode = exports.getEndpointOutput = exports.getEndpoint = exports.EventConfigurations = exports.DomainConfiguration = exports.Certificate = exports.CaCertificate = exports.BillingGroup = exports.Authorizer = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
exports.Authorizer = null;
utilities.lazyLoad(exports, ["Authorizer"], () => require("./authorizer"));
exports.BillingGroup = null;
utilities.lazyLoad(exports, ["BillingGroup"], () => require("./billingGroup"));
exports.CaCertificate = null;
utilities.lazyLoad(exports, ["CaCertificate"], () => require("./caCertificate"));
exports.Certificate = null;
utilities.lazyLoad(exports, ["Certificate"], () => require("./certificate"));
exports.DomainConfiguration = null;
utilities.lazyLoad(exports, ["DomainConfiguration"], () => require("./domainConfiguration"));
exports.EventConfigurations = null;
utilities.lazyLoad(exports, ["EventConfigurations"], () => require("./eventConfigurations"));
exports.getEndpoint = null;
exports.getEndpointOutput = null;
utilities.lazyLoad(exports, ["getEndpoint", "getEndpointOutput"], () => require("./getEndpoint"));
exports.getRegistrationCode = null;
exports.getRegistrationCodeOutput = null;
utilities.lazyLoad(exports, ["getRegistrationCode", "getRegistrationCodeOutput"], () => require("./getRegistrationCode"));
exports.IndexingConfiguration = null;
utilities.lazyLoad(exports, ["IndexingConfiguration"], () => require("./indexingConfiguration"));
exports.LoggingOptions = null;
utilities.lazyLoad(exports, ["LoggingOptions"], () => require("./loggingOptions"));
exports.Policy = null;
utilities.lazyLoad(exports, ["Policy"], () => require("./policy"));
exports.PolicyAttachment = null;
utilities.lazyLoad(exports, ["PolicyAttachment"], () => require("./policyAttachment"));
exports.ProvisioningTemplate = null;
utilities.lazyLoad(exports, ["ProvisioningTemplate"], () => require("./provisioningTemplate"));
exports.RoleAlias = null;
utilities.lazyLoad(exports, ["RoleAlias"], () => require("./roleAlias"));
exports.Thing = null;
utilities.lazyLoad(exports, ["Thing"], () => require("./thing"));
exports.ThingGroup = null;
utilities.lazyLoad(exports, ["ThingGroup"], () => require("./thingGroup"));
exports.ThingGroupMembership = null;
utilities.lazyLoad(exports, ["ThingGroupMembership"], () => require("./thingGroupMembership"));
exports.ThingPrincipalAttachment = null;
utilities.lazyLoad(exports, ["ThingPrincipalAttachment"], () => require("./thingPrincipalAttachment"));
exports.ThingType = null;
utilities.lazyLoad(exports, ["ThingType"], () => require("./thingType"));
exports.TopicRule = null;
utilities.lazyLoad(exports, ["TopicRule"], () => require("./topicRule"));
exports.TopicRuleDestination = null;
utilities.lazyLoad(exports, ["TopicRuleDestination"], () => require("./topicRuleDestination"));
const _module = {
    version: utilities.getVersion(),
    construct: (name, type, urn) => {
        switch (type) {
            case "aws:iot/authorizer:Authorizer":
                return new exports.Authorizer(name, undefined, { urn });
            case "aws:iot/billingGroup:BillingGroup":
                return new exports.BillingGroup(name, undefined, { urn });
            case "aws:iot/caCertificate:CaCertificate":
                return new exports.CaCertificate(name, undefined, { urn });
            case "aws:iot/certificate:Certificate":
                return new exports.Certificate(name, undefined, { urn });
            case "aws:iot/domainConfiguration:DomainConfiguration":
                return new exports.DomainConfiguration(name, undefined, { urn });
            case "aws:iot/eventConfigurations:EventConfigurations":
                return new exports.EventConfigurations(name, undefined, { urn });
            case "aws:iot/indexingConfiguration:IndexingConfiguration":
                return new exports.IndexingConfiguration(name, undefined, { urn });
            case "aws:iot/loggingOptions:LoggingOptions":
                return new exports.LoggingOptions(name, undefined, { urn });
            case "aws:iot/policy:Policy":
                return new exports.Policy(name, undefined, { urn });
            case "aws:iot/policyAttachment:PolicyAttachment":
                return new exports.PolicyAttachment(name, undefined, { urn });
            case "aws:iot/provisioningTemplate:ProvisioningTemplate":
                return new exports.ProvisioningTemplate(name, undefined, { urn });
            case "aws:iot/roleAlias:RoleAlias":
                return new exports.RoleAlias(name, undefined, { urn });
            case "aws:iot/thing:Thing":
                return new exports.Thing(name, undefined, { urn });
            case "aws:iot/thingGroup:ThingGroup":
                return new exports.ThingGroup(name, undefined, { urn });
            case "aws:iot/thingGroupMembership:ThingGroupMembership":
                return new exports.ThingGroupMembership(name, undefined, { urn });
            case "aws:iot/thingPrincipalAttachment:ThingPrincipalAttachment":
                return new exports.ThingPrincipalAttachment(name, undefined, { urn });
            case "aws:iot/thingType:ThingType":
                return new exports.ThingType(name, undefined, { urn });
            case "aws:iot/topicRule:TopicRule":
                return new exports.TopicRule(name, undefined, { urn });
            case "aws:iot/topicRuleDestination:TopicRuleDestination":
                return new exports.TopicRuleDestination(name, undefined, { urn });
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("aws", "iot/authorizer", _module);
pulumi.runtime.registerResourceModule("aws", "iot/billingGroup", _module);
pulumi.runtime.registerResourceModule("aws", "iot/caCertificate", _module);
pulumi.runtime.registerResourceModule("aws", "iot/certificate", _module);
pulumi.runtime.registerResourceModule("aws", "iot/domainConfiguration", _module);
pulumi.runtime.registerResourceModule("aws", "iot/eventConfigurations", _module);
pulumi.runtime.registerResourceModule("aws", "iot/indexingConfiguration", _module);
pulumi.runtime.registerResourceModule("aws", "iot/loggingOptions", _module);
pulumi.runtime.registerResourceModule("aws", "iot/policy", _module);
pulumi.runtime.registerResourceModule("aws", "iot/policyAttachment", _module);
pulumi.runtime.registerResourceModule("aws", "iot/provisioningTemplate", _module);
pulumi.runtime.registerResourceModule("aws", "iot/roleAlias", _module);
pulumi.runtime.registerResourceModule("aws", "iot/thing", _module);
pulumi.runtime.registerResourceModule("aws", "iot/thingGroup", _module);
pulumi.runtime.registerResourceModule("aws", "iot/thingGroupMembership", _module);
pulumi.runtime.registerResourceModule("aws", "iot/thingPrincipalAttachment", _module);
pulumi.runtime.registerResourceModule("aws", "iot/thingType", _module);
pulumi.runtime.registerResourceModule("aws", "iot/topicRule", _module);
pulumi.runtime.registerResourceModule("aws", "iot/topicRuleDestination", _module);
//# sourceMappingURL=index.js.map