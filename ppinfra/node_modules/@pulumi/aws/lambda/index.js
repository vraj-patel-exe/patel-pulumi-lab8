"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.RuntimeManagementConfig = exports.ProvisionedConcurrencyConfig = exports.Permission = exports.LayerVersionPermission = exports.LayerVersion = exports.Invocation = exports.getLayerVersionOutput = exports.getLayerVersion = exports.getInvocationOutput = exports.getInvocation = exports.getFunctionsOutput = exports.getFunctions = exports.getFunctionUrlOutput = exports.getFunctionUrl = exports.getFunctionOutput = exports.getFunction = exports.getCodeSigningConfigOutput = exports.getCodeSigningConfig = exports.getAliasOutput = exports.getAlias = exports.FunctionUrl = exports.FunctionRecursionConfig = exports.FunctionEventInvokeConfig = exports.Function = exports.EventSourceMapping = exports.CodeSigningConfig = exports.Alias = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
exports.Alias = null;
utilities.lazyLoad(exports, ["Alias"], () => require("./alias"));
exports.CodeSigningConfig = null;
utilities.lazyLoad(exports, ["CodeSigningConfig"], () => require("./codeSigningConfig"));
exports.EventSourceMapping = null;
utilities.lazyLoad(exports, ["EventSourceMapping"], () => require("./eventSourceMapping"));
exports.Function = null;
utilities.lazyLoad(exports, ["Function"], () => require("./function"));
exports.FunctionEventInvokeConfig = null;
utilities.lazyLoad(exports, ["FunctionEventInvokeConfig"], () => require("./functionEventInvokeConfig"));
exports.FunctionRecursionConfig = null;
utilities.lazyLoad(exports, ["FunctionRecursionConfig"], () => require("./functionRecursionConfig"));
exports.FunctionUrl = null;
utilities.lazyLoad(exports, ["FunctionUrl"], () => require("./functionUrl"));
exports.getAlias = null;
exports.getAliasOutput = null;
utilities.lazyLoad(exports, ["getAlias", "getAliasOutput"], () => require("./getAlias"));
exports.getCodeSigningConfig = null;
exports.getCodeSigningConfigOutput = null;
utilities.lazyLoad(exports, ["getCodeSigningConfig", "getCodeSigningConfigOutput"], () => require("./getCodeSigningConfig"));
exports.getFunction = null;
exports.getFunctionOutput = null;
utilities.lazyLoad(exports, ["getFunction", "getFunctionOutput"], () => require("./getFunction"));
exports.getFunctionUrl = null;
exports.getFunctionUrlOutput = null;
utilities.lazyLoad(exports, ["getFunctionUrl", "getFunctionUrlOutput"], () => require("./getFunctionUrl"));
exports.getFunctions = null;
exports.getFunctionsOutput = null;
utilities.lazyLoad(exports, ["getFunctions", "getFunctionsOutput"], () => require("./getFunctions"));
exports.getInvocation = null;
exports.getInvocationOutput = null;
utilities.lazyLoad(exports, ["getInvocation", "getInvocationOutput"], () => require("./getInvocation"));
exports.getLayerVersion = null;
exports.getLayerVersionOutput = null;
utilities.lazyLoad(exports, ["getLayerVersion", "getLayerVersionOutput"], () => require("./getLayerVersion"));
exports.Invocation = null;
utilities.lazyLoad(exports, ["Invocation"], () => require("./invocation"));
__exportStar(require("./lambdaMixins"), exports);
exports.LayerVersion = null;
utilities.lazyLoad(exports, ["LayerVersion"], () => require("./layerVersion"));
exports.LayerVersionPermission = null;
utilities.lazyLoad(exports, ["LayerVersionPermission"], () => require("./layerVersionPermission"));
exports.Permission = null;
utilities.lazyLoad(exports, ["Permission"], () => require("./permission"));
exports.ProvisionedConcurrencyConfig = null;
utilities.lazyLoad(exports, ["ProvisionedConcurrencyConfig"], () => require("./provisionedConcurrencyConfig"));
exports.RuntimeManagementConfig = null;
utilities.lazyLoad(exports, ["RuntimeManagementConfig"], () => require("./runtimeManagementConfig"));
__exportStar(require("./runtimes"), exports);
// Export enums:
__exportStar(require("../types/enums/lambda"), exports);
const _module = {
    version: utilities.getVersion(),
    construct: (name, type, urn) => {
        switch (type) {
            case "aws:lambda/alias:Alias":
                return new exports.Alias(name, undefined, { urn });
            case "aws:lambda/codeSigningConfig:CodeSigningConfig":
                return new exports.CodeSigningConfig(name, undefined, { urn });
            case "aws:lambda/eventSourceMapping:EventSourceMapping":
                return new exports.EventSourceMapping(name, undefined, { urn });
            case "aws:lambda/function:Function":
                return new exports.Function(name, undefined, { urn });
            case "aws:lambda/functionEventInvokeConfig:FunctionEventInvokeConfig":
                return new exports.FunctionEventInvokeConfig(name, undefined, { urn });
            case "aws:lambda/functionRecursionConfig:FunctionRecursionConfig":
                return new exports.FunctionRecursionConfig(name, undefined, { urn });
            case "aws:lambda/functionUrl:FunctionUrl":
                return new exports.FunctionUrl(name, undefined, { urn });
            case "aws:lambda/invocation:Invocation":
                return new exports.Invocation(name, undefined, { urn });
            case "aws:lambda/layerVersion:LayerVersion":
                return new exports.LayerVersion(name, undefined, { urn });
            case "aws:lambda/layerVersionPermission:LayerVersionPermission":
                return new exports.LayerVersionPermission(name, undefined, { urn });
            case "aws:lambda/permission:Permission":
                return new exports.Permission(name, undefined, { urn });
            case "aws:lambda/provisionedConcurrencyConfig:ProvisionedConcurrencyConfig":
                return new exports.ProvisionedConcurrencyConfig(name, undefined, { urn });
            case "aws:lambda/runtimeManagementConfig:RuntimeManagementConfig":
                return new exports.RuntimeManagementConfig(name, undefined, { urn });
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("aws", "lambda/alias", _module);
pulumi.runtime.registerResourceModule("aws", "lambda/codeSigningConfig", _module);
pulumi.runtime.registerResourceModule("aws", "lambda/eventSourceMapping", _module);
pulumi.runtime.registerResourceModule("aws", "lambda/function", _module);
pulumi.runtime.registerResourceModule("aws", "lambda/functionEventInvokeConfig", _module);
pulumi.runtime.registerResourceModule("aws", "lambda/functionRecursionConfig", _module);
pulumi.runtime.registerResourceModule("aws", "lambda/functionUrl", _module);
pulumi.runtime.registerResourceModule("aws", "lambda/invocation", _module);
pulumi.runtime.registerResourceModule("aws", "lambda/layerVersion", _module);
pulumi.runtime.registerResourceModule("aws", "lambda/layerVersionPermission", _module);
pulumi.runtime.registerResourceModule("aws", "lambda/permission", _module);
pulumi.runtime.registerResourceModule("aws", "lambda/provisionedConcurrencyConfig", _module);
pulumi.runtime.registerResourceModule("aws", "lambda/runtimeManagementConfig", _module);
//# sourceMappingURL=index.js.map