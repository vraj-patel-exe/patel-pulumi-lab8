"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.V2modelsIntent = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
/**
 * ## Import
 *
 * Using `pulumi import`, import Lex V2 Models Intent using the `intent_id:bot_id:bot_version:locale_id`. For example:
 *
 * ```sh
 * $ pulumi import aws:lex/v2modelsIntent:V2modelsIntent example intent-42874:bot-11376:DRAFT:en_US
 * ```
 */
class V2modelsIntent extends pulumi.CustomResource {
    /**
     * Get an existing V2modelsIntent resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name, id, state, opts) {
        return new V2modelsIntent(name, state, Object.assign(Object.assign({}, opts), { id: id }));
    }
    /**
     * Returns true if the given object is an instance of V2modelsIntent.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === V2modelsIntent.__pulumiType;
    }
    constructor(name, argsOrState, opts) {
        let resourceInputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState;
            resourceInputs["botId"] = state ? state.botId : undefined;
            resourceInputs["botVersion"] = state ? state.botVersion : undefined;
            resourceInputs["closingSetting"] = state ? state.closingSetting : undefined;
            resourceInputs["confirmationSetting"] = state ? state.confirmationSetting : undefined;
            resourceInputs["creationDateTime"] = state ? state.creationDateTime : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["dialogCodeHook"] = state ? state.dialogCodeHook : undefined;
            resourceInputs["fulfillmentCodeHook"] = state ? state.fulfillmentCodeHook : undefined;
            resourceInputs["initialResponseSetting"] = state ? state.initialResponseSetting : undefined;
            resourceInputs["inputContexts"] = state ? state.inputContexts : undefined;
            resourceInputs["intentId"] = state ? state.intentId : undefined;
            resourceInputs["kendraConfiguration"] = state ? state.kendraConfiguration : undefined;
            resourceInputs["lastUpdatedDateTime"] = state ? state.lastUpdatedDateTime : undefined;
            resourceInputs["localeId"] = state ? state.localeId : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["outputContexts"] = state ? state.outputContexts : undefined;
            resourceInputs["parentIntentSignature"] = state ? state.parentIntentSignature : undefined;
            resourceInputs["sampleUtterances"] = state ? state.sampleUtterances : undefined;
            resourceInputs["slotPriorities"] = state ? state.slotPriorities : undefined;
            resourceInputs["timeouts"] = state ? state.timeouts : undefined;
        }
        else {
            const args = argsOrState;
            if ((!args || args.botId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'botId'");
            }
            if ((!args || args.botVersion === undefined) && !opts.urn) {
                throw new Error("Missing required property 'botVersion'");
            }
            if ((!args || args.localeId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'localeId'");
            }
            resourceInputs["botId"] = args ? args.botId : undefined;
            resourceInputs["botVersion"] = args ? args.botVersion : undefined;
            resourceInputs["closingSetting"] = args ? args.closingSetting : undefined;
            resourceInputs["confirmationSetting"] = args ? args.confirmationSetting : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["dialogCodeHook"] = args ? args.dialogCodeHook : undefined;
            resourceInputs["fulfillmentCodeHook"] = args ? args.fulfillmentCodeHook : undefined;
            resourceInputs["initialResponseSetting"] = args ? args.initialResponseSetting : undefined;
            resourceInputs["inputContexts"] = args ? args.inputContexts : undefined;
            resourceInputs["kendraConfiguration"] = args ? args.kendraConfiguration : undefined;
            resourceInputs["localeId"] = args ? args.localeId : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["outputContexts"] = args ? args.outputContexts : undefined;
            resourceInputs["parentIntentSignature"] = args ? args.parentIntentSignature : undefined;
            resourceInputs["sampleUtterances"] = args ? args.sampleUtterances : undefined;
            resourceInputs["slotPriorities"] = args ? args.slotPriorities : undefined;
            resourceInputs["timeouts"] = args ? args.timeouts : undefined;
            resourceInputs["creationDateTime"] = undefined /*out*/;
            resourceInputs["intentId"] = undefined /*out*/;
            resourceInputs["lastUpdatedDateTime"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(V2modelsIntent.__pulumiType, name, resourceInputs, opts);
    }
}
exports.V2modelsIntent = V2modelsIntent;
/** @internal */
V2modelsIntent.__pulumiType = 'aws:lex/v2modelsIntent:V2modelsIntent';
//# sourceMappingURL=v2modelsIntent.js.map