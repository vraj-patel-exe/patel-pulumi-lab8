import * as pulumi from "@pulumi/pulumi";
/**
 * Provides a lightsail bucket access key. This is a set of credentials that allow API requests to be made to the lightsail bucket.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const test = new aws.lightsail.Bucket("test", {
 *     name: "mytestbucket",
 *     bundleId: "small_1_0",
 * });
 * const testLightsailBucketAccessKeyAccessKey = new aws.index.LightsailBucketAccessKeyAccessKey("test", {bucketName: testAwsLightsailBucketAccessKey.id});
 * ```
 *
 * ## Import
 *
 * Using `pulumi import`, import `aws_lightsail_bucket_access_key` using the `id` attribute. For example:
 *
 * ```sh
 * $ pulumi import aws:lightsail/bucketAccessKey:BucketAccessKey test example-bucket,AKIAIOSFODNN7EXAMPLE
 * ```
 */
export declare class BucketAccessKey extends pulumi.CustomResource {
    /**
     * Get an existing BucketAccessKey resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, state?: BucketAccessKeyState, opts?: pulumi.CustomResourceOptions): BucketAccessKey;
    /**
     * Returns true if the given object is an instance of BucketAccessKey.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is BucketAccessKey;
    /**
     * The ID of the access key.
     */
    readonly accessKeyId: pulumi.Output<string>;
    /**
     * The name of the bucket that the new access key will belong to, and grant access to.
     */
    readonly bucketName: pulumi.Output<string>;
    /**
     * The timestamp when the access key was created.
     */
    readonly createdAt: pulumi.Output<string>;
    /**
     * The secret access key used to sign requests. This attribute is not available for imported resources. Note that this will be written to the state file.
     */
    readonly secretAccessKey: pulumi.Output<string>;
    /**
     * The status of the access key.
     */
    readonly status: pulumi.Output<string>;
    /**
     * Create a BucketAccessKey resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: BucketAccessKeyArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * Input properties used for looking up and filtering BucketAccessKey resources.
 */
export interface BucketAccessKeyState {
    /**
     * The ID of the access key.
     */
    accessKeyId?: pulumi.Input<string>;
    /**
     * The name of the bucket that the new access key will belong to, and grant access to.
     */
    bucketName?: pulumi.Input<string>;
    /**
     * The timestamp when the access key was created.
     */
    createdAt?: pulumi.Input<string>;
    /**
     * The secret access key used to sign requests. This attribute is not available for imported resources. Note that this will be written to the state file.
     */
    secretAccessKey?: pulumi.Input<string>;
    /**
     * The status of the access key.
     */
    status?: pulumi.Input<string>;
}
/**
 * The set of arguments for constructing a BucketAccessKey resource.
 */
export interface BucketAccessKeyArgs {
    /**
     * The name of the bucket that the new access key will belong to, and grant access to.
     */
    bucketName: pulumi.Input<string>;
}
