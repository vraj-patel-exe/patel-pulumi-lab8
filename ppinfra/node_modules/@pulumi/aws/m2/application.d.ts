import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
/**
 * Resource for managing an [AWS Mainframe Modernization Application](https://docs.aws.amazon.com/m2/latest/userguide/applications-m2.html).
 *
 * ## Example Usage
 *
 * ### Basic Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const example = new aws.m2.Application("example", {
 *     name: "Example",
 *     engineType: "bluage",
 *     definition: {
 *         content: `{
 *   "definition": {
 *     "listeners": [
 *       {
 *         "port": 8196,
 *         "type": "http"
 *       }
 *     ],
 *     "ba-application": {
 *       "app-location": "${s3_source}/PlanetsDemo-v1.zip"
 *     }
 *   },
 *   "source-locations": [
 *     {
 *       "source-id": "s3-source",
 *       "source-type": "s3",
 *       "properties": {
 *         "s3-bucket": "example-bucket",
 *         "s3-key-prefix": "v1"
 *       }
 *     }
 *   ],
 *   "template-version": "2.0"
 * }
 *
 * `,
 *     },
 * });
 * ```
 *
 * ## Import
 *
 * Using `pulumi import`, import Mainframe Modernization Application using the `01234567890abcdef012345678`. For example:
 *
 * ```sh
 * $ pulumi import aws:m2/application:Application example 01234567890abcdef012345678
 * ```
 */
export declare class Application extends pulumi.CustomResource {
    /**
     * Get an existing Application resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ApplicationState, opts?: pulumi.CustomResourceOptions): Application;
    /**
     * Returns true if the given object is an instance of Application.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is Application;
    /**
     * Id of the Application.
     */
    readonly applicationId: pulumi.Output<string>;
    /**
     * ARN of the Application.
     */
    readonly arn: pulumi.Output<string>;
    /**
     * Current version of the application deployed.
     */
    readonly currentVersion: pulumi.Output<number>;
    /**
     * The application definition for this application. You can specify either inline JSON or an S3 bucket location.
     */
    readonly definition: pulumi.Output<outputs.m2.ApplicationDefinition | undefined>;
    /**
     * Description of the application.
     */
    readonly description: pulumi.Output<string | undefined>;
    /**
     * Engine type must be `microfocus | bluage`.
     */
    readonly engineType: pulumi.Output<string>;
    /**
     * KMS Key to use for the Application.
     */
    readonly kmsKeyId: pulumi.Output<string | undefined>;
    /**
     * Unique identifier of the application.
     *
     * The following arguments are optional:
     */
    readonly name: pulumi.Output<string>;
    /**
     * ARN of role for application to use to access AWS resources.
     */
    readonly roleArn: pulumi.Output<string | undefined>;
    /**
     * Map of tags assigned to the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     */
    readonly tags: pulumi.Output<{
        [key: string]: string;
    } | undefined>;
    /**
     * A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
     *
     * @deprecated Please use `tags` instead.
     */
    readonly tagsAll: pulumi.Output<{
        [key: string]: string;
    }>;
    readonly timeouts: pulumi.Output<outputs.m2.ApplicationTimeouts | undefined>;
    /**
     * Create a Application resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ApplicationArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * Input properties used for looking up and filtering Application resources.
 */
export interface ApplicationState {
    /**
     * Id of the Application.
     */
    applicationId?: pulumi.Input<string>;
    /**
     * ARN of the Application.
     */
    arn?: pulumi.Input<string>;
    /**
     * Current version of the application deployed.
     */
    currentVersion?: pulumi.Input<number>;
    /**
     * The application definition for this application. You can specify either inline JSON or an S3 bucket location.
     */
    definition?: pulumi.Input<inputs.m2.ApplicationDefinition>;
    /**
     * Description of the application.
     */
    description?: pulumi.Input<string>;
    /**
     * Engine type must be `microfocus | bluage`.
     */
    engineType?: pulumi.Input<string>;
    /**
     * KMS Key to use for the Application.
     */
    kmsKeyId?: pulumi.Input<string>;
    /**
     * Unique identifier of the application.
     *
     * The following arguments are optional:
     */
    name?: pulumi.Input<string>;
    /**
     * ARN of role for application to use to access AWS resources.
     */
    roleArn?: pulumi.Input<string>;
    /**
     * Map of tags assigned to the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     */
    tags?: pulumi.Input<{
        [key: string]: pulumi.Input<string>;
    }>;
    /**
     * A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
     *
     * @deprecated Please use `tags` instead.
     */
    tagsAll?: pulumi.Input<{
        [key: string]: pulumi.Input<string>;
    }>;
    timeouts?: pulumi.Input<inputs.m2.ApplicationTimeouts>;
}
/**
 * The set of arguments for constructing a Application resource.
 */
export interface ApplicationArgs {
    /**
     * The application definition for this application. You can specify either inline JSON or an S3 bucket location.
     */
    definition?: pulumi.Input<inputs.m2.ApplicationDefinition>;
    /**
     * Description of the application.
     */
    description?: pulumi.Input<string>;
    /**
     * Engine type must be `microfocus | bluage`.
     */
    engineType: pulumi.Input<string>;
    /**
     * KMS Key to use for the Application.
     */
    kmsKeyId?: pulumi.Input<string>;
    /**
     * Unique identifier of the application.
     *
     * The following arguments are optional:
     */
    name?: pulumi.Input<string>;
    /**
     * ARN of role for application to use to access AWS resources.
     */
    roleArn?: pulumi.Input<string>;
    /**
     * Map of tags assigned to the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     */
    tags?: pulumi.Input<{
        [key: string]: pulumi.Input<string>;
    }>;
    timeouts?: pulumi.Input<inputs.m2.ApplicationTimeouts>;
}
