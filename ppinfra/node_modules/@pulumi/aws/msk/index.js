"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.VpcConnection = exports.SingleScramSecretAssociation = exports.ServerlessCluster = exports.ScramSecretAssociation = exports.Replicator = exports.getVpcConnectionOutput = exports.getVpcConnection = exports.getKafkaVersionOutput = exports.getKafkaVersion = exports.getConfigurationOutput = exports.getConfiguration = exports.getClusterOutput = exports.getCluster = exports.getBrokerNodesOutput = exports.getBrokerNodes = exports.getBootstrapBrokersOutput = exports.getBootstrapBrokers = exports.Configuration = exports.ClusterPolicy = exports.Cluster = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
exports.Cluster = null;
utilities.lazyLoad(exports, ["Cluster"], () => require("./cluster"));
exports.ClusterPolicy = null;
utilities.lazyLoad(exports, ["ClusterPolicy"], () => require("./clusterPolicy"));
exports.Configuration = null;
utilities.lazyLoad(exports, ["Configuration"], () => require("./configuration"));
exports.getBootstrapBrokers = null;
exports.getBootstrapBrokersOutput = null;
utilities.lazyLoad(exports, ["getBootstrapBrokers", "getBootstrapBrokersOutput"], () => require("./getBootstrapBrokers"));
exports.getBrokerNodes = null;
exports.getBrokerNodesOutput = null;
utilities.lazyLoad(exports, ["getBrokerNodes", "getBrokerNodesOutput"], () => require("./getBrokerNodes"));
exports.getCluster = null;
exports.getClusterOutput = null;
utilities.lazyLoad(exports, ["getCluster", "getClusterOutput"], () => require("./getCluster"));
exports.getConfiguration = null;
exports.getConfigurationOutput = null;
utilities.lazyLoad(exports, ["getConfiguration", "getConfigurationOutput"], () => require("./getConfiguration"));
exports.getKafkaVersion = null;
exports.getKafkaVersionOutput = null;
utilities.lazyLoad(exports, ["getKafkaVersion", "getKafkaVersionOutput"], () => require("./getKafkaVersion"));
exports.getVpcConnection = null;
exports.getVpcConnectionOutput = null;
utilities.lazyLoad(exports, ["getVpcConnection", "getVpcConnectionOutput"], () => require("./getVpcConnection"));
exports.Replicator = null;
utilities.lazyLoad(exports, ["Replicator"], () => require("./replicator"));
exports.ScramSecretAssociation = null;
utilities.lazyLoad(exports, ["ScramSecretAssociation"], () => require("./scramSecretAssociation"));
exports.ServerlessCluster = null;
utilities.lazyLoad(exports, ["ServerlessCluster"], () => require("./serverlessCluster"));
exports.SingleScramSecretAssociation = null;
utilities.lazyLoad(exports, ["SingleScramSecretAssociation"], () => require("./singleScramSecretAssociation"));
exports.VpcConnection = null;
utilities.lazyLoad(exports, ["VpcConnection"], () => require("./vpcConnection"));
const _module = {
    version: utilities.getVersion(),
    construct: (name, type, urn) => {
        switch (type) {
            case "aws:msk/cluster:Cluster":
                return new exports.Cluster(name, undefined, { urn });
            case "aws:msk/clusterPolicy:ClusterPolicy":
                return new exports.ClusterPolicy(name, undefined, { urn });
            case "aws:msk/configuration:Configuration":
                return new exports.Configuration(name, undefined, { urn });
            case "aws:msk/replicator:Replicator":
                return new exports.Replicator(name, undefined, { urn });
            case "aws:msk/scramSecretAssociation:ScramSecretAssociation":
                return new exports.ScramSecretAssociation(name, undefined, { urn });
            case "aws:msk/serverlessCluster:ServerlessCluster":
                return new exports.ServerlessCluster(name, undefined, { urn });
            case "aws:msk/singleScramSecretAssociation:SingleScramSecretAssociation":
                return new exports.SingleScramSecretAssociation(name, undefined, { urn });
            case "aws:msk/vpcConnection:VpcConnection":
                return new exports.VpcConnection(name, undefined, { urn });
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("aws", "msk/cluster", _module);
pulumi.runtime.registerResourceModule("aws", "msk/clusterPolicy", _module);
pulumi.runtime.registerResourceModule("aws", "msk/configuration", _module);
pulumi.runtime.registerResourceModule("aws", "msk/replicator", _module);
pulumi.runtime.registerResourceModule("aws", "msk/scramSecretAssociation", _module);
pulumi.runtime.registerResourceModule("aws", "msk/serverlessCluster", _module);
pulumi.runtime.registerResourceModule("aws", "msk/singleScramSecretAssociation", _module);
pulumi.runtime.registerResourceModule("aws", "msk/vpcConnection", _module);
//# sourceMappingURL=index.js.map