"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.SingleScramSecretAssociation = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
/**
 * Associates a single SCRAM secret with a Managed Streaming for Kafka (MSK) cluster.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const example = new aws.msk.SingleScramSecretAssociation("example", {
 *     clusterArn: exampleAwsMskCluster.arn,
 *     secretArn: exampleAwsSecretsmanagerSecret.arn,
 * });
 * ```
 *
 * ## Import
 *
 * Using `pulumi import`, import an MSK SCRAM Secret Association using the `cluster_arn` and `secret_arn`. For example:
 *
 * ```sh
 * $ pulumi import aws:msk/singleScramSecretAssociation:SingleScramSecretAssociation example arn:aws:kafka:us-west-2:123456789012:cluster/example/279c0212-d057-4dba-9aa9-1c4e5a25bfc7-3,arn:aws:secretsmanager:us-east-1:123456789012:secret:example-123456
 * ```
 */
class SingleScramSecretAssociation extends pulumi.CustomResource {
    /**
     * Get an existing SingleScramSecretAssociation resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name, id, state, opts) {
        return new SingleScramSecretAssociation(name, state, Object.assign(Object.assign({}, opts), { id: id }));
    }
    /**
     * Returns true if the given object is an instance of SingleScramSecretAssociation.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === SingleScramSecretAssociation.__pulumiType;
    }
    constructor(name, argsOrState, opts) {
        let resourceInputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState;
            resourceInputs["clusterArn"] = state ? state.clusterArn : undefined;
            resourceInputs["secretArn"] = state ? state.secretArn : undefined;
        }
        else {
            const args = argsOrState;
            if ((!args || args.clusterArn === undefined) && !opts.urn) {
                throw new Error("Missing required property 'clusterArn'");
            }
            if ((!args || args.secretArn === undefined) && !opts.urn) {
                throw new Error("Missing required property 'secretArn'");
            }
            resourceInputs["clusterArn"] = args ? args.clusterArn : undefined;
            resourceInputs["secretArn"] = args ? args.secretArn : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(SingleScramSecretAssociation.__pulumiType, name, resourceInputs, opts);
    }
}
exports.SingleScramSecretAssociation = SingleScramSecretAssociation;
/** @internal */
SingleScramSecretAssociation.__pulumiType = 'aws:msk/singleScramSecretAssociation:SingleScramSecretAssociation';
//# sourceMappingURL=singleScramSecretAssociation.js.map