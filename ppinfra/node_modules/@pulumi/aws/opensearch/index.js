"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.VpcEndpoint = exports.ServerlessVpcEndpoint = exports.ServerlessSecurityPolicy = exports.ServerlessSecurityConfig = exports.ServerlessLifecyclePolicy = exports.ServerlessCollection = exports.ServerlessAccessPolicy = exports.PackageAssociation = exports.Package = exports.OutboundConnection = exports.InboundConnectionAccepter = exports.getServerlessVpcEndpointOutput = exports.getServerlessVpcEndpoint = exports.getServerlessSecurityPolicyOutput = exports.getServerlessSecurityPolicy = exports.getServerlessSecurityConfigOutput = exports.getServerlessSecurityConfig = exports.getServerlessLifecyclePolicyOutput = exports.getServerlessLifecyclePolicy = exports.getServerlessCollectionOutput = exports.getServerlessCollection = exports.getServerlessAccessPolicyOutput = exports.getServerlessAccessPolicy = exports.getDomainOutput = exports.getDomain = exports.DomainSamlOptions = exports.DomainPolicy = exports.Domain = exports.AuthorizeVpcEndpointAccess = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
exports.AuthorizeVpcEndpointAccess = null;
utilities.lazyLoad(exports, ["AuthorizeVpcEndpointAccess"], () => require("./authorizeVpcEndpointAccess"));
exports.Domain = null;
utilities.lazyLoad(exports, ["Domain"], () => require("./domain"));
exports.DomainPolicy = null;
utilities.lazyLoad(exports, ["DomainPolicy"], () => require("./domainPolicy"));
exports.DomainSamlOptions = null;
utilities.lazyLoad(exports, ["DomainSamlOptions"], () => require("./domainSamlOptions"));
exports.getDomain = null;
exports.getDomainOutput = null;
utilities.lazyLoad(exports, ["getDomain", "getDomainOutput"], () => require("./getDomain"));
exports.getServerlessAccessPolicy = null;
exports.getServerlessAccessPolicyOutput = null;
utilities.lazyLoad(exports, ["getServerlessAccessPolicy", "getServerlessAccessPolicyOutput"], () => require("./getServerlessAccessPolicy"));
exports.getServerlessCollection = null;
exports.getServerlessCollectionOutput = null;
utilities.lazyLoad(exports, ["getServerlessCollection", "getServerlessCollectionOutput"], () => require("./getServerlessCollection"));
exports.getServerlessLifecyclePolicy = null;
exports.getServerlessLifecyclePolicyOutput = null;
utilities.lazyLoad(exports, ["getServerlessLifecyclePolicy", "getServerlessLifecyclePolicyOutput"], () => require("./getServerlessLifecyclePolicy"));
exports.getServerlessSecurityConfig = null;
exports.getServerlessSecurityConfigOutput = null;
utilities.lazyLoad(exports, ["getServerlessSecurityConfig", "getServerlessSecurityConfigOutput"], () => require("./getServerlessSecurityConfig"));
exports.getServerlessSecurityPolicy = null;
exports.getServerlessSecurityPolicyOutput = null;
utilities.lazyLoad(exports, ["getServerlessSecurityPolicy", "getServerlessSecurityPolicyOutput"], () => require("./getServerlessSecurityPolicy"));
exports.getServerlessVpcEndpoint = null;
exports.getServerlessVpcEndpointOutput = null;
utilities.lazyLoad(exports, ["getServerlessVpcEndpoint", "getServerlessVpcEndpointOutput"], () => require("./getServerlessVpcEndpoint"));
exports.InboundConnectionAccepter = null;
utilities.lazyLoad(exports, ["InboundConnectionAccepter"], () => require("./inboundConnectionAccepter"));
exports.OutboundConnection = null;
utilities.lazyLoad(exports, ["OutboundConnection"], () => require("./outboundConnection"));
exports.Package = null;
utilities.lazyLoad(exports, ["Package"], () => require("./package"));
exports.PackageAssociation = null;
utilities.lazyLoad(exports, ["PackageAssociation"], () => require("./packageAssociation"));
exports.ServerlessAccessPolicy = null;
utilities.lazyLoad(exports, ["ServerlessAccessPolicy"], () => require("./serverlessAccessPolicy"));
exports.ServerlessCollection = null;
utilities.lazyLoad(exports, ["ServerlessCollection"], () => require("./serverlessCollection"));
exports.ServerlessLifecyclePolicy = null;
utilities.lazyLoad(exports, ["ServerlessLifecyclePolicy"], () => require("./serverlessLifecyclePolicy"));
exports.ServerlessSecurityConfig = null;
utilities.lazyLoad(exports, ["ServerlessSecurityConfig"], () => require("./serverlessSecurityConfig"));
exports.ServerlessSecurityPolicy = null;
utilities.lazyLoad(exports, ["ServerlessSecurityPolicy"], () => require("./serverlessSecurityPolicy"));
exports.ServerlessVpcEndpoint = null;
utilities.lazyLoad(exports, ["ServerlessVpcEndpoint"], () => require("./serverlessVpcEndpoint"));
exports.VpcEndpoint = null;
utilities.lazyLoad(exports, ["VpcEndpoint"], () => require("./vpcEndpoint"));
const _module = {
    version: utilities.getVersion(),
    construct: (name, type, urn) => {
        switch (type) {
            case "aws:opensearch/authorizeVpcEndpointAccess:AuthorizeVpcEndpointAccess":
                return new exports.AuthorizeVpcEndpointAccess(name, undefined, { urn });
            case "aws:opensearch/domain:Domain":
                return new exports.Domain(name, undefined, { urn });
            case "aws:opensearch/domainPolicy:DomainPolicy":
                return new exports.DomainPolicy(name, undefined, { urn });
            case "aws:opensearch/domainSamlOptions:DomainSamlOptions":
                return new exports.DomainSamlOptions(name, undefined, { urn });
            case "aws:opensearch/inboundConnectionAccepter:InboundConnectionAccepter":
                return new exports.InboundConnectionAccepter(name, undefined, { urn });
            case "aws:opensearch/outboundConnection:OutboundConnection":
                return new exports.OutboundConnection(name, undefined, { urn });
            case "aws:opensearch/package:Package":
                return new exports.Package(name, undefined, { urn });
            case "aws:opensearch/packageAssociation:PackageAssociation":
                return new exports.PackageAssociation(name, undefined, { urn });
            case "aws:opensearch/serverlessAccessPolicy:ServerlessAccessPolicy":
                return new exports.ServerlessAccessPolicy(name, undefined, { urn });
            case "aws:opensearch/serverlessCollection:ServerlessCollection":
                return new exports.ServerlessCollection(name, undefined, { urn });
            case "aws:opensearch/serverlessLifecyclePolicy:ServerlessLifecyclePolicy":
                return new exports.ServerlessLifecyclePolicy(name, undefined, { urn });
            case "aws:opensearch/serverlessSecurityConfig:ServerlessSecurityConfig":
                return new exports.ServerlessSecurityConfig(name, undefined, { urn });
            case "aws:opensearch/serverlessSecurityPolicy:ServerlessSecurityPolicy":
                return new exports.ServerlessSecurityPolicy(name, undefined, { urn });
            case "aws:opensearch/serverlessVpcEndpoint:ServerlessVpcEndpoint":
                return new exports.ServerlessVpcEndpoint(name, undefined, { urn });
            case "aws:opensearch/vpcEndpoint:VpcEndpoint":
                return new exports.VpcEndpoint(name, undefined, { urn });
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("aws", "opensearch/authorizeVpcEndpointAccess", _module);
pulumi.runtime.registerResourceModule("aws", "opensearch/domain", _module);
pulumi.runtime.registerResourceModule("aws", "opensearch/domainPolicy", _module);
pulumi.runtime.registerResourceModule("aws", "opensearch/domainSamlOptions", _module);
pulumi.runtime.registerResourceModule("aws", "opensearch/inboundConnectionAccepter", _module);
pulumi.runtime.registerResourceModule("aws", "opensearch/outboundConnection", _module);
pulumi.runtime.registerResourceModule("aws", "opensearch/package", _module);
pulumi.runtime.registerResourceModule("aws", "opensearch/packageAssociation", _module);
pulumi.runtime.registerResourceModule("aws", "opensearch/serverlessAccessPolicy", _module);
pulumi.runtime.registerResourceModule("aws", "opensearch/serverlessCollection", _module);
pulumi.runtime.registerResourceModule("aws", "opensearch/serverlessLifecyclePolicy", _module);
pulumi.runtime.registerResourceModule("aws", "opensearch/serverlessSecurityConfig", _module);
pulumi.runtime.registerResourceModule("aws", "opensearch/serverlessSecurityPolicy", _module);
pulumi.runtime.registerResourceModule("aws", "opensearch/serverlessVpcEndpoint", _module);
pulumi.runtime.registerResourceModule("aws", "opensearch/vpcEndpoint", _module);
//# sourceMappingURL=index.js.map