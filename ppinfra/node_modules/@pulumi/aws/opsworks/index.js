"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.UserProfile = exports.StaticWebLayer = exports.Stack = exports.RdsDbInstance = exports.RailsAppLayer = exports.PhpAppLayer = exports.Permission = exports.NodejsAppLayer = exports.MysqlLayer = exports.MemcachedLayer = exports.JavaAppLayer = exports.Instance = exports.HaproxyLayer = exports.GangliaLayer = exports.EcsClusterLayer = exports.CustomLayer = exports.Application = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
exports.Application = null;
utilities.lazyLoad(exports, ["Application"], () => require("./application"));
exports.CustomLayer = null;
utilities.lazyLoad(exports, ["CustomLayer"], () => require("./customLayer"));
exports.EcsClusterLayer = null;
utilities.lazyLoad(exports, ["EcsClusterLayer"], () => require("./ecsClusterLayer"));
exports.GangliaLayer = null;
utilities.lazyLoad(exports, ["GangliaLayer"], () => require("./gangliaLayer"));
exports.HaproxyLayer = null;
utilities.lazyLoad(exports, ["HaproxyLayer"], () => require("./haproxyLayer"));
exports.Instance = null;
utilities.lazyLoad(exports, ["Instance"], () => require("./instance"));
exports.JavaAppLayer = null;
utilities.lazyLoad(exports, ["JavaAppLayer"], () => require("./javaAppLayer"));
exports.MemcachedLayer = null;
utilities.lazyLoad(exports, ["MemcachedLayer"], () => require("./memcachedLayer"));
exports.MysqlLayer = null;
utilities.lazyLoad(exports, ["MysqlLayer"], () => require("./mysqlLayer"));
exports.NodejsAppLayer = null;
utilities.lazyLoad(exports, ["NodejsAppLayer"], () => require("./nodejsAppLayer"));
exports.Permission = null;
utilities.lazyLoad(exports, ["Permission"], () => require("./permission"));
exports.PhpAppLayer = null;
utilities.lazyLoad(exports, ["PhpAppLayer"], () => require("./phpAppLayer"));
exports.RailsAppLayer = null;
utilities.lazyLoad(exports, ["RailsAppLayer"], () => require("./railsAppLayer"));
exports.RdsDbInstance = null;
utilities.lazyLoad(exports, ["RdsDbInstance"], () => require("./rdsDbInstance"));
exports.Stack = null;
utilities.lazyLoad(exports, ["Stack"], () => require("./stack"));
exports.StaticWebLayer = null;
utilities.lazyLoad(exports, ["StaticWebLayer"], () => require("./staticWebLayer"));
exports.UserProfile = null;
utilities.lazyLoad(exports, ["UserProfile"], () => require("./userProfile"));
const _module = {
    version: utilities.getVersion(),
    construct: (name, type, urn) => {
        switch (type) {
            case "aws:opsworks/application:Application":
                return new exports.Application(name, undefined, { urn });
            case "aws:opsworks/customLayer:CustomLayer":
                return new exports.CustomLayer(name, undefined, { urn });
            case "aws:opsworks/ecsClusterLayer:EcsClusterLayer":
                return new exports.EcsClusterLayer(name, undefined, { urn });
            case "aws:opsworks/gangliaLayer:GangliaLayer":
                return new exports.GangliaLayer(name, undefined, { urn });
            case "aws:opsworks/haproxyLayer:HaproxyLayer":
                return new exports.HaproxyLayer(name, undefined, { urn });
            case "aws:opsworks/instance:Instance":
                return new exports.Instance(name, undefined, { urn });
            case "aws:opsworks/javaAppLayer:JavaAppLayer":
                return new exports.JavaAppLayer(name, undefined, { urn });
            case "aws:opsworks/memcachedLayer:MemcachedLayer":
                return new exports.MemcachedLayer(name, undefined, { urn });
            case "aws:opsworks/mysqlLayer:MysqlLayer":
                return new exports.MysqlLayer(name, undefined, { urn });
            case "aws:opsworks/nodejsAppLayer:NodejsAppLayer":
                return new exports.NodejsAppLayer(name, undefined, { urn });
            case "aws:opsworks/permission:Permission":
                return new exports.Permission(name, undefined, { urn });
            case "aws:opsworks/phpAppLayer:PhpAppLayer":
                return new exports.PhpAppLayer(name, undefined, { urn });
            case "aws:opsworks/railsAppLayer:RailsAppLayer":
                return new exports.RailsAppLayer(name, undefined, { urn });
            case "aws:opsworks/rdsDbInstance:RdsDbInstance":
                return new exports.RdsDbInstance(name, undefined, { urn });
            case "aws:opsworks/stack:Stack":
                return new exports.Stack(name, undefined, { urn });
            case "aws:opsworks/staticWebLayer:StaticWebLayer":
                return new exports.StaticWebLayer(name, undefined, { urn });
            case "aws:opsworks/userProfile:UserProfile":
                return new exports.UserProfile(name, undefined, { urn });
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("aws", "opsworks/application", _module);
pulumi.runtime.registerResourceModule("aws", "opsworks/customLayer", _module);
pulumi.runtime.registerResourceModule("aws", "opsworks/ecsClusterLayer", _module);
pulumi.runtime.registerResourceModule("aws", "opsworks/gangliaLayer", _module);
pulumi.runtime.registerResourceModule("aws", "opsworks/haproxyLayer", _module);
pulumi.runtime.registerResourceModule("aws", "opsworks/instance", _module);
pulumi.runtime.registerResourceModule("aws", "opsworks/javaAppLayer", _module);
pulumi.runtime.registerResourceModule("aws", "opsworks/memcachedLayer", _module);
pulumi.runtime.registerResourceModule("aws", "opsworks/mysqlLayer", _module);
pulumi.runtime.registerResourceModule("aws", "opsworks/nodejsAppLayer", _module);
pulumi.runtime.registerResourceModule("aws", "opsworks/permission", _module);
pulumi.runtime.registerResourceModule("aws", "opsworks/phpAppLayer", _module);
pulumi.runtime.registerResourceModule("aws", "opsworks/railsAppLayer", _module);
pulumi.runtime.registerResourceModule("aws", "opsworks/rdsDbInstance", _module);
pulumi.runtime.registerResourceModule("aws", "opsworks/stack", _module);
pulumi.runtime.registerResourceModule("aws", "opsworks/staticWebLayer", _module);
pulumi.runtime.registerResourceModule("aws", "opsworks/userProfile", _module);
//# sourceMappingURL=index.js.map