"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.ApnsVoipSandboxChannel = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
/**
 * Provides a Pinpoint APNs VoIP Sandbox Channel resource.
 *
 * > **Note:** All arguments, including certificates and tokens, will be stored in the raw state as plain-text.
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 * import * as std from "@pulumi/std";
 *
 * const app = new aws.pinpoint.App("app", {});
 * const apnsVoipSandbox = new aws.pinpoint.ApnsVoipSandboxChannel("apns_voip_sandbox", {
 *     applicationId: app.applicationId,
 *     certificate: std.file({
 *         input: "./certificate.pem",
 *     }).then(invoke => invoke.result),
 *     privateKey: std.file({
 *         input: "./private_key.key",
 *     }).then(invoke => invoke.result),
 * });
 * ```
 *
 * ## Import
 *
 * Using `pulumi import`, import Pinpoint APNs VoIP Sandbox Channel using the `application-id`. For example:
 *
 * ```sh
 * $ pulumi import aws:pinpoint/apnsVoipSandboxChannel:ApnsVoipSandboxChannel apns_voip_sandbox application-id
 * ```
 */
class ApnsVoipSandboxChannel extends pulumi.CustomResource {
    /**
     * Get an existing ApnsVoipSandboxChannel resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name, id, state, opts) {
        return new ApnsVoipSandboxChannel(name, state, Object.assign(Object.assign({}, opts), { id: id }));
    }
    /**
     * Returns true if the given object is an instance of ApnsVoipSandboxChannel.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ApnsVoipSandboxChannel.__pulumiType;
    }
    constructor(name, argsOrState, opts) {
        let resourceInputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState;
            resourceInputs["applicationId"] = state ? state.applicationId : undefined;
            resourceInputs["bundleId"] = state ? state.bundleId : undefined;
            resourceInputs["certificate"] = state ? state.certificate : undefined;
            resourceInputs["defaultAuthenticationMethod"] = state ? state.defaultAuthenticationMethod : undefined;
            resourceInputs["enabled"] = state ? state.enabled : undefined;
            resourceInputs["privateKey"] = state ? state.privateKey : undefined;
            resourceInputs["teamId"] = state ? state.teamId : undefined;
            resourceInputs["tokenKey"] = state ? state.tokenKey : undefined;
            resourceInputs["tokenKeyId"] = state ? state.tokenKeyId : undefined;
        }
        else {
            const args = argsOrState;
            if ((!args || args.applicationId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'applicationId'");
            }
            resourceInputs["applicationId"] = args ? args.applicationId : undefined;
            resourceInputs["bundleId"] = (args === null || args === void 0 ? void 0 : args.bundleId) ? pulumi.secret(args.bundleId) : undefined;
            resourceInputs["certificate"] = (args === null || args === void 0 ? void 0 : args.certificate) ? pulumi.secret(args.certificate) : undefined;
            resourceInputs["defaultAuthenticationMethod"] = args ? args.defaultAuthenticationMethod : undefined;
            resourceInputs["enabled"] = args ? args.enabled : undefined;
            resourceInputs["privateKey"] = (args === null || args === void 0 ? void 0 : args.privateKey) ? pulumi.secret(args.privateKey) : undefined;
            resourceInputs["teamId"] = (args === null || args === void 0 ? void 0 : args.teamId) ? pulumi.secret(args.teamId) : undefined;
            resourceInputs["tokenKey"] = (args === null || args === void 0 ? void 0 : args.tokenKey) ? pulumi.secret(args.tokenKey) : undefined;
            resourceInputs["tokenKeyId"] = (args === null || args === void 0 ? void 0 : args.tokenKeyId) ? pulumi.secret(args.tokenKeyId) : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const secretOpts = { additionalSecretOutputs: ["bundleId", "certificate", "privateKey", "teamId", "tokenKey", "tokenKeyId"] };
        opts = pulumi.mergeOptions(opts, secretOpts);
        super(ApnsVoipSandboxChannel.__pulumiType, name, resourceInputs, opts);
    }
}
exports.ApnsVoipSandboxChannel = ApnsVoipSandboxChannel;
/** @internal */
ApnsVoipSandboxChannel.__pulumiType = 'aws:pinpoint/apnsVoipSandboxChannel:ApnsVoipSandboxChannel';
//# sourceMappingURL=apnsVoipSandboxChannel.js.map