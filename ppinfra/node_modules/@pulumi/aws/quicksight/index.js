"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.VpcConnection = exports.User = exports.Theme = exports.TemplateAlias = exports.Template = exports.RoleMembership = exports.RefreshSchedule = exports.Namespace = exports.Ingestion = exports.IamPolicyAssignment = exports.GroupMembership = exports.Group = exports.getThemeOutput = exports.getTheme = exports.getQuicksightUserOutput = exports.getQuicksightUser = exports.getQuicksightGroupOutput = exports.getQuicksightGroup = exports.getQuicksightAnalysisOutput = exports.getQuicksightAnalysis = exports.getDataSetOutput = exports.getDataSet = exports.getAnalysisOutput = exports.getAnalysis = exports.FolderMembership = exports.Folder = exports.DataSource = exports.DataSet = exports.Dashboard = exports.Analysis = exports.AccountSubscription = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
exports.AccountSubscription = null;
utilities.lazyLoad(exports, ["AccountSubscription"], () => require("./accountSubscription"));
exports.Analysis = null;
utilities.lazyLoad(exports, ["Analysis"], () => require("./analysis"));
exports.Dashboard = null;
utilities.lazyLoad(exports, ["Dashboard"], () => require("./dashboard"));
exports.DataSet = null;
utilities.lazyLoad(exports, ["DataSet"], () => require("./dataSet"));
exports.DataSource = null;
utilities.lazyLoad(exports, ["DataSource"], () => require("./dataSource"));
exports.Folder = null;
utilities.lazyLoad(exports, ["Folder"], () => require("./folder"));
exports.FolderMembership = null;
utilities.lazyLoad(exports, ["FolderMembership"], () => require("./folderMembership"));
exports.getAnalysis = null;
exports.getAnalysisOutput = null;
utilities.lazyLoad(exports, ["getAnalysis", "getAnalysisOutput"], () => require("./getAnalysis"));
exports.getDataSet = null;
exports.getDataSetOutput = null;
utilities.lazyLoad(exports, ["getDataSet", "getDataSetOutput"], () => require("./getDataSet"));
exports.getQuicksightAnalysis = null;
exports.getQuicksightAnalysisOutput = null;
utilities.lazyLoad(exports, ["getQuicksightAnalysis", "getQuicksightAnalysisOutput"], () => require("./getQuicksightAnalysis"));
exports.getQuicksightGroup = null;
exports.getQuicksightGroupOutput = null;
utilities.lazyLoad(exports, ["getQuicksightGroup", "getQuicksightGroupOutput"], () => require("./getQuicksightGroup"));
exports.getQuicksightUser = null;
exports.getQuicksightUserOutput = null;
utilities.lazyLoad(exports, ["getQuicksightUser", "getQuicksightUserOutput"], () => require("./getQuicksightUser"));
exports.getTheme = null;
exports.getThemeOutput = null;
utilities.lazyLoad(exports, ["getTheme", "getThemeOutput"], () => require("./getTheme"));
exports.Group = null;
utilities.lazyLoad(exports, ["Group"], () => require("./group"));
exports.GroupMembership = null;
utilities.lazyLoad(exports, ["GroupMembership"], () => require("./groupMembership"));
exports.IamPolicyAssignment = null;
utilities.lazyLoad(exports, ["IamPolicyAssignment"], () => require("./iamPolicyAssignment"));
exports.Ingestion = null;
utilities.lazyLoad(exports, ["Ingestion"], () => require("./ingestion"));
exports.Namespace = null;
utilities.lazyLoad(exports, ["Namespace"], () => require("./namespace"));
exports.RefreshSchedule = null;
utilities.lazyLoad(exports, ["RefreshSchedule"], () => require("./refreshSchedule"));
exports.RoleMembership = null;
utilities.lazyLoad(exports, ["RoleMembership"], () => require("./roleMembership"));
exports.Template = null;
utilities.lazyLoad(exports, ["Template"], () => require("./template"));
exports.TemplateAlias = null;
utilities.lazyLoad(exports, ["TemplateAlias"], () => require("./templateAlias"));
exports.Theme = null;
utilities.lazyLoad(exports, ["Theme"], () => require("./theme"));
exports.User = null;
utilities.lazyLoad(exports, ["User"], () => require("./user"));
exports.VpcConnection = null;
utilities.lazyLoad(exports, ["VpcConnection"], () => require("./vpcConnection"));
const _module = {
    version: utilities.getVersion(),
    construct: (name, type, urn) => {
        switch (type) {
            case "aws:quicksight/accountSubscription:AccountSubscription":
                return new exports.AccountSubscription(name, undefined, { urn });
            case "aws:quicksight/analysis:Analysis":
                return new exports.Analysis(name, undefined, { urn });
            case "aws:quicksight/dashboard:Dashboard":
                return new exports.Dashboard(name, undefined, { urn });
            case "aws:quicksight/dataSet:DataSet":
                return new exports.DataSet(name, undefined, { urn });
            case "aws:quicksight/dataSource:DataSource":
                return new exports.DataSource(name, undefined, { urn });
            case "aws:quicksight/folder:Folder":
                return new exports.Folder(name, undefined, { urn });
            case "aws:quicksight/folderMembership:FolderMembership":
                return new exports.FolderMembership(name, undefined, { urn });
            case "aws:quicksight/group:Group":
                return new exports.Group(name, undefined, { urn });
            case "aws:quicksight/groupMembership:GroupMembership":
                return new exports.GroupMembership(name, undefined, { urn });
            case "aws:quicksight/iamPolicyAssignment:IamPolicyAssignment":
                return new exports.IamPolicyAssignment(name, undefined, { urn });
            case "aws:quicksight/ingestion:Ingestion":
                return new exports.Ingestion(name, undefined, { urn });
            case "aws:quicksight/namespace:Namespace":
                return new exports.Namespace(name, undefined, { urn });
            case "aws:quicksight/refreshSchedule:RefreshSchedule":
                return new exports.RefreshSchedule(name, undefined, { urn });
            case "aws:quicksight/roleMembership:RoleMembership":
                return new exports.RoleMembership(name, undefined, { urn });
            case "aws:quicksight/template:Template":
                return new exports.Template(name, undefined, { urn });
            case "aws:quicksight/templateAlias:TemplateAlias":
                return new exports.TemplateAlias(name, undefined, { urn });
            case "aws:quicksight/theme:Theme":
                return new exports.Theme(name, undefined, { urn });
            case "aws:quicksight/user:User":
                return new exports.User(name, undefined, { urn });
            case "aws:quicksight/vpcConnection:VpcConnection":
                return new exports.VpcConnection(name, undefined, { urn });
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("aws", "quicksight/accountSubscription", _module);
pulumi.runtime.registerResourceModule("aws", "quicksight/analysis", _module);
pulumi.runtime.registerResourceModule("aws", "quicksight/dashboard", _module);
pulumi.runtime.registerResourceModule("aws", "quicksight/dataSet", _module);
pulumi.runtime.registerResourceModule("aws", "quicksight/dataSource", _module);
pulumi.runtime.registerResourceModule("aws", "quicksight/folder", _module);
pulumi.runtime.registerResourceModule("aws", "quicksight/folderMembership", _module);
pulumi.runtime.registerResourceModule("aws", "quicksight/group", _module);
pulumi.runtime.registerResourceModule("aws", "quicksight/groupMembership", _module);
pulumi.runtime.registerResourceModule("aws", "quicksight/iamPolicyAssignment", _module);
pulumi.runtime.registerResourceModule("aws", "quicksight/ingestion", _module);
pulumi.runtime.registerResourceModule("aws", "quicksight/namespace", _module);
pulumi.runtime.registerResourceModule("aws", "quicksight/refreshSchedule", _module);
pulumi.runtime.registerResourceModule("aws", "quicksight/roleMembership", _module);
pulumi.runtime.registerResourceModule("aws", "quicksight/template", _module);
pulumi.runtime.registerResourceModule("aws", "quicksight/templateAlias", _module);
pulumi.runtime.registerResourceModule("aws", "quicksight/theme", _module);
pulumi.runtime.registerResourceModule("aws", "quicksight/user", _module);
pulumi.runtime.registerResourceModule("aws", "quicksight/vpcConnection", _module);
//# sourceMappingURL=index.js.map