"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.getOrderableDbInstanceOutput = exports.getOrderableDbInstance = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
/**
 * Information about RDS orderable DB instances and valid parameter combinations.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const test = aws.rds.getOrderableDbInstance({
 *     engine: "mysql",
 *     engineVersion: "5.7.22",
 *     licenseModel: "general-public-license",
 *     storageType: "standard",
 *     preferredInstanceClasses: [
 *         "db.r6.xlarge",
 *         "db.m4.large",
 *         "db.t3.small",
 *     ],
 * });
 * ```
 *
 * Valid parameter combinations can also be found with `preferredEngineVersions` and/or `preferredInstanceClasses`.
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const test = aws.rds.getOrderableDbInstance({
 *     engine: "mysql",
 *     licenseModel: "general-public-license",
 *     preferredEngineVersions: [
 *         "5.6.35",
 *         "5.6.41",
 *         "5.6.44",
 *     ],
 *     preferredInstanceClasses: [
 *         "db.t2.small",
 *         "db.t3.medium",
 *         "db.t3.large",
 *     ],
 * });
 * ```
 */
function getOrderableDbInstance(args, opts) {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aws:rds/getOrderableDbInstance:getOrderableDbInstance", {
        "availabilityZoneGroup": args.availabilityZoneGroup,
        "engine": args.engine,
        "engineLatestVersion": args.engineLatestVersion,
        "engineVersion": args.engineVersion,
        "instanceClass": args.instanceClass,
        "licenseModel": args.licenseModel,
        "preferredEngineVersions": args.preferredEngineVersions,
        "preferredInstanceClasses": args.preferredInstanceClasses,
        "readReplicaCapable": args.readReplicaCapable,
        "storageType": args.storageType,
        "supportedEngineModes": args.supportedEngineModes,
        "supportedNetworkTypes": args.supportedNetworkTypes,
        "supportsClusters": args.supportsClusters,
        "supportsEnhancedMonitoring": args.supportsEnhancedMonitoring,
        "supportsGlobalDatabases": args.supportsGlobalDatabases,
        "supportsIamDatabaseAuthentication": args.supportsIamDatabaseAuthentication,
        "supportsIops": args.supportsIops,
        "supportsKerberosAuthentication": args.supportsKerberosAuthentication,
        "supportsMultiAz": args.supportsMultiAz,
        "supportsPerformanceInsights": args.supportsPerformanceInsights,
        "supportsStorageAutoscaling": args.supportsStorageAutoscaling,
        "supportsStorageEncryption": args.supportsStorageEncryption,
        "vpc": args.vpc,
    }, opts);
}
exports.getOrderableDbInstance = getOrderableDbInstance;
/**
 * Information about RDS orderable DB instances and valid parameter combinations.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const test = aws.rds.getOrderableDbInstance({
 *     engine: "mysql",
 *     engineVersion: "5.7.22",
 *     licenseModel: "general-public-license",
 *     storageType: "standard",
 *     preferredInstanceClasses: [
 *         "db.r6.xlarge",
 *         "db.m4.large",
 *         "db.t3.small",
 *     ],
 * });
 * ```
 *
 * Valid parameter combinations can also be found with `preferredEngineVersions` and/or `preferredInstanceClasses`.
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const test = aws.rds.getOrderableDbInstance({
 *     engine: "mysql",
 *     licenseModel: "general-public-license",
 *     preferredEngineVersions: [
 *         "5.6.35",
 *         "5.6.41",
 *         "5.6.44",
 *     ],
 *     preferredInstanceClasses: [
 *         "db.t2.small",
 *         "db.t3.medium",
 *         "db.t3.large",
 *     ],
 * });
 * ```
 */
function getOrderableDbInstanceOutput(args, opts) {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("aws:rds/getOrderableDbInstance:getOrderableDbInstance", {
        "availabilityZoneGroup": args.availabilityZoneGroup,
        "engine": args.engine,
        "engineLatestVersion": args.engineLatestVersion,
        "engineVersion": args.engineVersion,
        "instanceClass": args.instanceClass,
        "licenseModel": args.licenseModel,
        "preferredEngineVersions": args.preferredEngineVersions,
        "preferredInstanceClasses": args.preferredInstanceClasses,
        "readReplicaCapable": args.readReplicaCapable,
        "storageType": args.storageType,
        "supportedEngineModes": args.supportedEngineModes,
        "supportedNetworkTypes": args.supportedNetworkTypes,
        "supportsClusters": args.supportsClusters,
        "supportsEnhancedMonitoring": args.supportsEnhancedMonitoring,
        "supportsGlobalDatabases": args.supportsGlobalDatabases,
        "supportsIamDatabaseAuthentication": args.supportsIamDatabaseAuthentication,
        "supportsIops": args.supportsIops,
        "supportsKerberosAuthentication": args.supportsKerberosAuthentication,
        "supportsMultiAz": args.supportsMultiAz,
        "supportsPerformanceInsights": args.supportsPerformanceInsights,
        "supportsStorageAutoscaling": args.supportsStorageAutoscaling,
        "supportsStorageEncryption": args.supportsStorageEncryption,
        "vpc": args.vpc,
    }, opts);
}
exports.getOrderableDbInstanceOutput = getOrderableDbInstanceOutput;
//# sourceMappingURL=getOrderableDbInstance.js.map