"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.getSnapshotOutput = exports.getSnapshot = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
/**
 * Use this data source to get information about a DB Snapshot for use when provisioning DB instances
 *
 * > **NOTE:** This data source does not apply to snapshots created on Aurora DB clusters.
 * See the `aws.rds.ClusterSnapshot` data source for DB Cluster snapshots.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const prod = new aws.rds.Instance("prod", {
 *     allocatedStorage: 10,
 *     engine: "mysql",
 *     engineVersion: "5.6.17",
 *     instanceClass: aws.rds.InstanceType.T2_Micro,
 *     dbName: "mydb",
 *     username: "foo",
 *     password: "bar",
 *     dbSubnetGroupName: "my_database_subnet_group",
 *     parameterGroupName: "default.mysql5.6",
 * });
 * const latestProdSnapshot = aws.rds.getSnapshotOutput({
 *     dbInstanceIdentifier: prod.identifier,
 *     mostRecent: true,
 * });
 * // Use the latest production snapshot to create a dev instance.
 * const dev = new aws.rds.Instance("dev", {
 *     instanceClass: aws.rds.InstanceType.T2_Micro,
 *     dbName: "mydbdev",
 *     snapshotIdentifier: latestProdSnapshot.apply(latestProdSnapshot => latestProdSnapshot.id),
 * });
 * ```
 */
function getSnapshot(args, opts) {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aws:rds/getSnapshot:getSnapshot", {
        "dbInstanceIdentifier": args.dbInstanceIdentifier,
        "dbSnapshotIdentifier": args.dbSnapshotIdentifier,
        "includePublic": args.includePublic,
        "includeShared": args.includeShared,
        "mostRecent": args.mostRecent,
        "snapshotType": args.snapshotType,
        "tags": args.tags,
    }, opts);
}
exports.getSnapshot = getSnapshot;
/**
 * Use this data source to get information about a DB Snapshot for use when provisioning DB instances
 *
 * > **NOTE:** This data source does not apply to snapshots created on Aurora DB clusters.
 * See the `aws.rds.ClusterSnapshot` data source for DB Cluster snapshots.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const prod = new aws.rds.Instance("prod", {
 *     allocatedStorage: 10,
 *     engine: "mysql",
 *     engineVersion: "5.6.17",
 *     instanceClass: aws.rds.InstanceType.T2_Micro,
 *     dbName: "mydb",
 *     username: "foo",
 *     password: "bar",
 *     dbSubnetGroupName: "my_database_subnet_group",
 *     parameterGroupName: "default.mysql5.6",
 * });
 * const latestProdSnapshot = aws.rds.getSnapshotOutput({
 *     dbInstanceIdentifier: prod.identifier,
 *     mostRecent: true,
 * });
 * // Use the latest production snapshot to create a dev instance.
 * const dev = new aws.rds.Instance("dev", {
 *     instanceClass: aws.rds.InstanceType.T2_Micro,
 *     dbName: "mydbdev",
 *     snapshotIdentifier: latestProdSnapshot.apply(latestProdSnapshot => latestProdSnapshot.id),
 * });
 * ```
 */
function getSnapshotOutput(args, opts) {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("aws:rds/getSnapshot:getSnapshot", {
        "dbInstanceIdentifier": args.dbInstanceIdentifier,
        "dbSnapshotIdentifier": args.dbSnapshotIdentifier,
        "includePublic": args.includePublic,
        "includeShared": args.includeShared,
        "mostRecent": args.mostRecent,
        "snapshotType": args.snapshotType,
        "tags": args.tags,
    }, opts);
}
exports.getSnapshotOutput = getSnapshotOutput;
//# sourceMappingURL=getSnapshot.js.map