"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.DataShareConsumerAssociation = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
/**
 * Resource for managing an AWS Redshift Data Share Consumer Association.
 *
 * ## Example Usage
 *
 * ### Basic Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const example = new aws.redshift.DataShareConsumerAssociation("example", {
 *     dataShareArn: "arn:aws:redshift:us-west-2:123456789012:datashare:b3bfde75-73fd-408b-9086-d6fccfd6d588/example",
 *     associateEntireAccount: true,
 * });
 * ```
 *
 * ### Consumer Region
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const example = new aws.redshift.DataShareConsumerAssociation("example", {
 *     dataShareArn: "arn:aws:redshift:us-west-2:123456789012:datashare:b3bfde75-73fd-408b-9086-d6fccfd6d588/example",
 *     consumerRegion: "us-west-2",
 * });
 * ```
 *
 * ## Import
 *
 * Using `pulumi import`, import Redshift Data Share Consumer Association using the `id`. For example:
 *
 * ```sh
 * $ pulumi import aws:redshift/dataShareConsumerAssociation:DataShareConsumerAssociation example arn:aws:redshift:us-west-2:123456789012:datashare:b3bfde75-73fd-408b-9086-d6fccfd6d588/example,,,us-west-2
 * ```
 */
class DataShareConsumerAssociation extends pulumi.CustomResource {
    /**
     * Get an existing DataShareConsumerAssociation resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name, id, state, opts) {
        return new DataShareConsumerAssociation(name, state, Object.assign(Object.assign({}, opts), { id: id }));
    }
    /**
     * Returns true if the given object is an instance of DataShareConsumerAssociation.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === DataShareConsumerAssociation.__pulumiType;
    }
    constructor(name, argsOrState, opts) {
        let resourceInputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState;
            resourceInputs["allowWrites"] = state ? state.allowWrites : undefined;
            resourceInputs["associateEntireAccount"] = state ? state.associateEntireAccount : undefined;
            resourceInputs["consumerArn"] = state ? state.consumerArn : undefined;
            resourceInputs["consumerRegion"] = state ? state.consumerRegion : undefined;
            resourceInputs["dataShareArn"] = state ? state.dataShareArn : undefined;
            resourceInputs["managedBy"] = state ? state.managedBy : undefined;
            resourceInputs["producerArn"] = state ? state.producerArn : undefined;
        }
        else {
            const args = argsOrState;
            if ((!args || args.dataShareArn === undefined) && !opts.urn) {
                throw new Error("Missing required property 'dataShareArn'");
            }
            resourceInputs["allowWrites"] = args ? args.allowWrites : undefined;
            resourceInputs["associateEntireAccount"] = args ? args.associateEntireAccount : undefined;
            resourceInputs["consumerArn"] = args ? args.consumerArn : undefined;
            resourceInputs["consumerRegion"] = args ? args.consumerRegion : undefined;
            resourceInputs["dataShareArn"] = args ? args.dataShareArn : undefined;
            resourceInputs["managedBy"] = undefined /*out*/;
            resourceInputs["producerArn"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(DataShareConsumerAssociation.__pulumiType, name, resourceInputs, opts);
    }
}
exports.DataShareConsumerAssociation = DataShareConsumerAssociation;
/** @internal */
DataShareConsumerAssociation.__pulumiType = 'aws:redshift/dataShareConsumerAssociation:DataShareConsumerAssociation';
//# sourceMappingURL=dataShareConsumerAssociation.js.map