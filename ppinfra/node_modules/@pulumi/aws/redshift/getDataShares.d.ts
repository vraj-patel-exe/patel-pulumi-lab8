import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
/**
 * Data source for managing AWS Redshift Data Shares.
 *
 * ## Example Usage
 *
 * ### Basic Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const example = aws.redshift.getDataShares({});
 * ```
 */
export declare function getDataShares(args?: GetDataSharesArgs, opts?: pulumi.InvokeOptions): Promise<GetDataSharesResult>;
/**
 * A collection of arguments for invoking getDataShares.
 */
export interface GetDataSharesArgs {
    /**
     * An array of all data shares in the current region. See `dataShares` below.
     */
    dataShares?: inputs.redshift.GetDataSharesDataShare[];
}
/**
 * A collection of values returned by getDataShares.
 */
export interface GetDataSharesResult {
    /**
     * An array of all data shares in the current region. See `dataShares` below.
     */
    readonly dataShares?: outputs.redshift.GetDataSharesDataShare[];
    /**
     * AWS region.
     */
    readonly id: string;
}
/**
 * Data source for managing AWS Redshift Data Shares.
 *
 * ## Example Usage
 *
 * ### Basic Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const example = aws.redshift.getDataShares({});
 * ```
 */
export declare function getDataSharesOutput(args?: GetDataSharesOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetDataSharesResult>;
/**
 * A collection of arguments for invoking getDataShares.
 */
export interface GetDataSharesOutputArgs {
    /**
     * An array of all data shares in the current region. See `dataShares` below.
     */
    dataShares?: pulumi.Input<pulumi.Input<inputs.redshift.GetDataSharesDataShareArgs>[]>;
}
