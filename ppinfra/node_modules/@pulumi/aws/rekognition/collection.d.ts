import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
/**
 * Resource for managing an AWS Rekognition Collection.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const example = new aws.rekognition.Collection("example", {
 *     collectionId: "my-collection",
 *     tags: {
 *         example: "1",
 *     },
 * });
 * ```
 *
 * ## Import
 *
 * Using `pulumi import`, import Rekognition Collection using the `example_id_arg`. For example:
 *
 * ```sh
 * $ pulumi import aws:rekognition/collection:Collection example collection-id-12345678
 * ```
 */
export declare class Collection extends pulumi.CustomResource {
    /**
     * Get an existing Collection resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, state?: CollectionState, opts?: pulumi.CustomResourceOptions): Collection;
    /**
     * Returns true if the given object is an instance of Collection.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is Collection;
    /**
     * ARN of the Collection.
     */
    readonly arn: pulumi.Output<string>;
    /**
     * The name of the collection
     *
     * The following arguments are optional:
     */
    readonly collectionId: pulumi.Output<string>;
    /**
     * The Face Model Version that the collection was initialized with
     */
    readonly faceModelVersion: pulumi.Output<string>;
    /**
     * Map of tags assigned to the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     */
    readonly tags: pulumi.Output<{
        [key: string]: string;
    } | undefined>;
    /**
     * A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
     *
     * @deprecated Please use `tags` instead.
     */
    readonly tagsAll: pulumi.Output<{
        [key: string]: string;
    }>;
    readonly timeouts: pulumi.Output<outputs.rekognition.CollectionTimeouts | undefined>;
    /**
     * Create a Collection resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: CollectionArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * Input properties used for looking up and filtering Collection resources.
 */
export interface CollectionState {
    /**
     * ARN of the Collection.
     */
    arn?: pulumi.Input<string>;
    /**
     * The name of the collection
     *
     * The following arguments are optional:
     */
    collectionId?: pulumi.Input<string>;
    /**
     * The Face Model Version that the collection was initialized with
     */
    faceModelVersion?: pulumi.Input<string>;
    /**
     * Map of tags assigned to the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     */
    tags?: pulumi.Input<{
        [key: string]: pulumi.Input<string>;
    }>;
    /**
     * A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
     *
     * @deprecated Please use `tags` instead.
     */
    tagsAll?: pulumi.Input<{
        [key: string]: pulumi.Input<string>;
    }>;
    timeouts?: pulumi.Input<inputs.rekognition.CollectionTimeouts>;
}
/**
 * The set of arguments for constructing a Collection resource.
 */
export interface CollectionArgs {
    /**
     * The name of the collection
     *
     * The following arguments are optional:
     */
    collectionId: pulumi.Input<string>;
    /**
     * Map of tags assigned to the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     */
    tags?: pulumi.Input<{
        [key: string]: pulumi.Input<string>;
    }>;
    timeouts?: pulumi.Input<inputs.rekognition.CollectionTimeouts>;
}
