"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.DataQualityJobDefinition = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
/**
 * Provides a SageMaker AI data quality job definition resource.
 *
 * ## Example Usage
 *
 * Basic usage:
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const test = new aws.sagemaker.DataQualityJobDefinition("test", {
 *     name: "my-data-quality-job-definition",
 *     dataQualityAppSpecification: {
 *         imageUri: monitor.registryPath,
 *     },
 *     dataQualityJobInput: {
 *         endpointInput: {
 *             endpointName: myEndpoint.name,
 *         },
 *     },
 *     dataQualityJobOutputConfig: {
 *         monitoringOutputs: {
 *             s3Output: {
 *                 s3Uri: `https://${myBucket.bucketRegionalDomainName}/output`,
 *             },
 *         },
 *     },
 *     jobResources: {
 *         clusterConfig: {
 *             instanceCount: 1,
 *             instanceType: "ml.t3.medium",
 *             volumeSizeInGb: 20,
 *         },
 *     },
 *     roleArn: myRole.arn,
 * });
 * ```
 *
 * ## Import
 *
 * Using `pulumi import`, import data quality job definitions using the `name`. For example:
 *
 * ```sh
 * $ pulumi import aws:sagemaker/dataQualityJobDefinition:DataQualityJobDefinition test_data_quality_job_definition data-quality-job-definition-foo
 * ```
 */
class DataQualityJobDefinition extends pulumi.CustomResource {
    /**
     * Get an existing DataQualityJobDefinition resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name, id, state, opts) {
        return new DataQualityJobDefinition(name, state, Object.assign(Object.assign({}, opts), { id: id }));
    }
    /**
     * Returns true if the given object is an instance of DataQualityJobDefinition.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === DataQualityJobDefinition.__pulumiType;
    }
    constructor(name, argsOrState, opts) {
        let resourceInputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState;
            resourceInputs["arn"] = state ? state.arn : undefined;
            resourceInputs["dataQualityAppSpecification"] = state ? state.dataQualityAppSpecification : undefined;
            resourceInputs["dataQualityBaselineConfig"] = state ? state.dataQualityBaselineConfig : undefined;
            resourceInputs["dataQualityJobInput"] = state ? state.dataQualityJobInput : undefined;
            resourceInputs["dataQualityJobOutputConfig"] = state ? state.dataQualityJobOutputConfig : undefined;
            resourceInputs["jobResources"] = state ? state.jobResources : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["networkConfig"] = state ? state.networkConfig : undefined;
            resourceInputs["roleArn"] = state ? state.roleArn : undefined;
            resourceInputs["stoppingCondition"] = state ? state.stoppingCondition : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
            resourceInputs["tagsAll"] = state ? state.tagsAll : undefined;
        }
        else {
            const args = argsOrState;
            if ((!args || args.dataQualityAppSpecification === undefined) && !opts.urn) {
                throw new Error("Missing required property 'dataQualityAppSpecification'");
            }
            if ((!args || args.dataQualityJobInput === undefined) && !opts.urn) {
                throw new Error("Missing required property 'dataQualityJobInput'");
            }
            if ((!args || args.dataQualityJobOutputConfig === undefined) && !opts.urn) {
                throw new Error("Missing required property 'dataQualityJobOutputConfig'");
            }
            if ((!args || args.jobResources === undefined) && !opts.urn) {
                throw new Error("Missing required property 'jobResources'");
            }
            if ((!args || args.roleArn === undefined) && !opts.urn) {
                throw new Error("Missing required property 'roleArn'");
            }
            resourceInputs["dataQualityAppSpecification"] = args ? args.dataQualityAppSpecification : undefined;
            resourceInputs["dataQualityBaselineConfig"] = args ? args.dataQualityBaselineConfig : undefined;
            resourceInputs["dataQualityJobInput"] = args ? args.dataQualityJobInput : undefined;
            resourceInputs["dataQualityJobOutputConfig"] = args ? args.dataQualityJobOutputConfig : undefined;
            resourceInputs["jobResources"] = args ? args.jobResources : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["networkConfig"] = args ? args.networkConfig : undefined;
            resourceInputs["roleArn"] = args ? args.roleArn : undefined;
            resourceInputs["stoppingCondition"] = args ? args.stoppingCondition : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["arn"] = undefined /*out*/;
            resourceInputs["tagsAll"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(DataQualityJobDefinition.__pulumiType, name, resourceInputs, opts);
    }
}
exports.DataQualityJobDefinition = DataQualityJobDefinition;
/** @internal */
DataQualityJobDefinition.__pulumiType = 'aws:sagemaker/dataQualityJobDefinition:DataQualityJobDefinition';
//# sourceMappingURL=dataQualityJobDefinition.js.map