"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.Workteam = exports.Workforce = exports.UserProfile = exports.StudioLifecycleConfig = exports.Space = exports.ServicecatalogPortfolioStatus = exports.Project = exports.Pipeline = exports.NotebookInstanceLifecycleConfiguration = exports.NotebookInstance = exports.MonitoringSchedule = exports.ModelPackageGroupPolicy = exports.ModelPackageGroup = exports.Model = exports.MlflowTrackingServer = exports.ImageVersion = exports.Image = exports.HumanTaskUI = exports.Hub = exports.getPrebuiltEcrImageOutput = exports.getPrebuiltEcrImage = exports.FlowDefinition = exports.FeatureGroup = exports.EndpointConfiguration = exports.Endpoint = exports.Domain = exports.DeviceFleet = exports.Device = exports.DataQualityJobDefinition = exports.CodeRepository = exports.AppImageConfig = exports.App = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
exports.App = null;
utilities.lazyLoad(exports, ["App"], () => require("./app"));
exports.AppImageConfig = null;
utilities.lazyLoad(exports, ["AppImageConfig"], () => require("./appImageConfig"));
exports.CodeRepository = null;
utilities.lazyLoad(exports, ["CodeRepository"], () => require("./codeRepository"));
exports.DataQualityJobDefinition = null;
utilities.lazyLoad(exports, ["DataQualityJobDefinition"], () => require("./dataQualityJobDefinition"));
exports.Device = null;
utilities.lazyLoad(exports, ["Device"], () => require("./device"));
exports.DeviceFleet = null;
utilities.lazyLoad(exports, ["DeviceFleet"], () => require("./deviceFleet"));
exports.Domain = null;
utilities.lazyLoad(exports, ["Domain"], () => require("./domain"));
exports.Endpoint = null;
utilities.lazyLoad(exports, ["Endpoint"], () => require("./endpoint"));
exports.EndpointConfiguration = null;
utilities.lazyLoad(exports, ["EndpointConfiguration"], () => require("./endpointConfiguration"));
exports.FeatureGroup = null;
utilities.lazyLoad(exports, ["FeatureGroup"], () => require("./featureGroup"));
exports.FlowDefinition = null;
utilities.lazyLoad(exports, ["FlowDefinition"], () => require("./flowDefinition"));
exports.getPrebuiltEcrImage = null;
exports.getPrebuiltEcrImageOutput = null;
utilities.lazyLoad(exports, ["getPrebuiltEcrImage", "getPrebuiltEcrImageOutput"], () => require("./getPrebuiltEcrImage"));
exports.Hub = null;
utilities.lazyLoad(exports, ["Hub"], () => require("./hub"));
exports.HumanTaskUI = null;
utilities.lazyLoad(exports, ["HumanTaskUI"], () => require("./humanTaskUI"));
exports.Image = null;
utilities.lazyLoad(exports, ["Image"], () => require("./image"));
exports.ImageVersion = null;
utilities.lazyLoad(exports, ["ImageVersion"], () => require("./imageVersion"));
exports.MlflowTrackingServer = null;
utilities.lazyLoad(exports, ["MlflowTrackingServer"], () => require("./mlflowTrackingServer"));
exports.Model = null;
utilities.lazyLoad(exports, ["Model"], () => require("./model"));
exports.ModelPackageGroup = null;
utilities.lazyLoad(exports, ["ModelPackageGroup"], () => require("./modelPackageGroup"));
exports.ModelPackageGroupPolicy = null;
utilities.lazyLoad(exports, ["ModelPackageGroupPolicy"], () => require("./modelPackageGroupPolicy"));
exports.MonitoringSchedule = null;
utilities.lazyLoad(exports, ["MonitoringSchedule"], () => require("./monitoringSchedule"));
exports.NotebookInstance = null;
utilities.lazyLoad(exports, ["NotebookInstance"], () => require("./notebookInstance"));
exports.NotebookInstanceLifecycleConfiguration = null;
utilities.lazyLoad(exports, ["NotebookInstanceLifecycleConfiguration"], () => require("./notebookInstanceLifecycleConfiguration"));
exports.Pipeline = null;
utilities.lazyLoad(exports, ["Pipeline"], () => require("./pipeline"));
exports.Project = null;
utilities.lazyLoad(exports, ["Project"], () => require("./project"));
exports.ServicecatalogPortfolioStatus = null;
utilities.lazyLoad(exports, ["ServicecatalogPortfolioStatus"], () => require("./servicecatalogPortfolioStatus"));
exports.Space = null;
utilities.lazyLoad(exports, ["Space"], () => require("./space"));
exports.StudioLifecycleConfig = null;
utilities.lazyLoad(exports, ["StudioLifecycleConfig"], () => require("./studioLifecycleConfig"));
exports.UserProfile = null;
utilities.lazyLoad(exports, ["UserProfile"], () => require("./userProfile"));
exports.Workforce = null;
utilities.lazyLoad(exports, ["Workforce"], () => require("./workforce"));
exports.Workteam = null;
utilities.lazyLoad(exports, ["Workteam"], () => require("./workteam"));
const _module = {
    version: utilities.getVersion(),
    construct: (name, type, urn) => {
        switch (type) {
            case "aws:sagemaker/app:App":
                return new exports.App(name, undefined, { urn });
            case "aws:sagemaker/appImageConfig:AppImageConfig":
                return new exports.AppImageConfig(name, undefined, { urn });
            case "aws:sagemaker/codeRepository:CodeRepository":
                return new exports.CodeRepository(name, undefined, { urn });
            case "aws:sagemaker/dataQualityJobDefinition:DataQualityJobDefinition":
                return new exports.DataQualityJobDefinition(name, undefined, { urn });
            case "aws:sagemaker/device:Device":
                return new exports.Device(name, undefined, { urn });
            case "aws:sagemaker/deviceFleet:DeviceFleet":
                return new exports.DeviceFleet(name, undefined, { urn });
            case "aws:sagemaker/domain:Domain":
                return new exports.Domain(name, undefined, { urn });
            case "aws:sagemaker/endpoint:Endpoint":
                return new exports.Endpoint(name, undefined, { urn });
            case "aws:sagemaker/endpointConfiguration:EndpointConfiguration":
                return new exports.EndpointConfiguration(name, undefined, { urn });
            case "aws:sagemaker/featureGroup:FeatureGroup":
                return new exports.FeatureGroup(name, undefined, { urn });
            case "aws:sagemaker/flowDefinition:FlowDefinition":
                return new exports.FlowDefinition(name, undefined, { urn });
            case "aws:sagemaker/hub:Hub":
                return new exports.Hub(name, undefined, { urn });
            case "aws:sagemaker/humanTaskUI:HumanTaskUI":
                return new exports.HumanTaskUI(name, undefined, { urn });
            case "aws:sagemaker/image:Image":
                return new exports.Image(name, undefined, { urn });
            case "aws:sagemaker/imageVersion:ImageVersion":
                return new exports.ImageVersion(name, undefined, { urn });
            case "aws:sagemaker/mlflowTrackingServer:MlflowTrackingServer":
                return new exports.MlflowTrackingServer(name, undefined, { urn });
            case "aws:sagemaker/model:Model":
                return new exports.Model(name, undefined, { urn });
            case "aws:sagemaker/modelPackageGroup:ModelPackageGroup":
                return new exports.ModelPackageGroup(name, undefined, { urn });
            case "aws:sagemaker/modelPackageGroupPolicy:ModelPackageGroupPolicy":
                return new exports.ModelPackageGroupPolicy(name, undefined, { urn });
            case "aws:sagemaker/monitoringSchedule:MonitoringSchedule":
                return new exports.MonitoringSchedule(name, undefined, { urn });
            case "aws:sagemaker/notebookInstance:NotebookInstance":
                return new exports.NotebookInstance(name, undefined, { urn });
            case "aws:sagemaker/notebookInstanceLifecycleConfiguration:NotebookInstanceLifecycleConfiguration":
                return new exports.NotebookInstanceLifecycleConfiguration(name, undefined, { urn });
            case "aws:sagemaker/pipeline:Pipeline":
                return new exports.Pipeline(name, undefined, { urn });
            case "aws:sagemaker/project:Project":
                return new exports.Project(name, undefined, { urn });
            case "aws:sagemaker/servicecatalogPortfolioStatus:ServicecatalogPortfolioStatus":
                return new exports.ServicecatalogPortfolioStatus(name, undefined, { urn });
            case "aws:sagemaker/space:Space":
                return new exports.Space(name, undefined, { urn });
            case "aws:sagemaker/studioLifecycleConfig:StudioLifecycleConfig":
                return new exports.StudioLifecycleConfig(name, undefined, { urn });
            case "aws:sagemaker/userProfile:UserProfile":
                return new exports.UserProfile(name, undefined, { urn });
            case "aws:sagemaker/workforce:Workforce":
                return new exports.Workforce(name, undefined, { urn });
            case "aws:sagemaker/workteam:Workteam":
                return new exports.Workteam(name, undefined, { urn });
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("aws", "sagemaker/app", _module);
pulumi.runtime.registerResourceModule("aws", "sagemaker/appImageConfig", _module);
pulumi.runtime.registerResourceModule("aws", "sagemaker/codeRepository", _module);
pulumi.runtime.registerResourceModule("aws", "sagemaker/dataQualityJobDefinition", _module);
pulumi.runtime.registerResourceModule("aws", "sagemaker/device", _module);
pulumi.runtime.registerResourceModule("aws", "sagemaker/deviceFleet", _module);
pulumi.runtime.registerResourceModule("aws", "sagemaker/domain", _module);
pulumi.runtime.registerResourceModule("aws", "sagemaker/endpoint", _module);
pulumi.runtime.registerResourceModule("aws", "sagemaker/endpointConfiguration", _module);
pulumi.runtime.registerResourceModule("aws", "sagemaker/featureGroup", _module);
pulumi.runtime.registerResourceModule("aws", "sagemaker/flowDefinition", _module);
pulumi.runtime.registerResourceModule("aws", "sagemaker/hub", _module);
pulumi.runtime.registerResourceModule("aws", "sagemaker/humanTaskUI", _module);
pulumi.runtime.registerResourceModule("aws", "sagemaker/image", _module);
pulumi.runtime.registerResourceModule("aws", "sagemaker/imageVersion", _module);
pulumi.runtime.registerResourceModule("aws", "sagemaker/mlflowTrackingServer", _module);
pulumi.runtime.registerResourceModule("aws", "sagemaker/model", _module);
pulumi.runtime.registerResourceModule("aws", "sagemaker/modelPackageGroup", _module);
pulumi.runtime.registerResourceModule("aws", "sagemaker/modelPackageGroupPolicy", _module);
pulumi.runtime.registerResourceModule("aws", "sagemaker/monitoringSchedule", _module);
pulumi.runtime.registerResourceModule("aws", "sagemaker/notebookInstance", _module);
pulumi.runtime.registerResourceModule("aws", "sagemaker/notebookInstanceLifecycleConfiguration", _module);
pulumi.runtime.registerResourceModule("aws", "sagemaker/pipeline", _module);
pulumi.runtime.registerResourceModule("aws", "sagemaker/project", _module);
pulumi.runtime.registerResourceModule("aws", "sagemaker/servicecatalogPortfolioStatus", _module);
pulumi.runtime.registerResourceModule("aws", "sagemaker/space", _module);
pulumi.runtime.registerResourceModule("aws", "sagemaker/studioLifecycleConfig", _module);
pulumi.runtime.registerResourceModule("aws", "sagemaker/userProfile", _module);
pulumi.runtime.registerResourceModule("aws", "sagemaker/workforce", _module);
pulumi.runtime.registerResourceModule("aws", "sagemaker/workteam", _module);
//# sourceMappingURL=index.js.map