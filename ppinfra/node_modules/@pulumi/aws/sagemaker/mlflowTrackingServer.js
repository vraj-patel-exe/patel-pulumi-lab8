"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.MlflowTrackingServer = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
/**
 * Provides a SageMaker AI MLFlow Tracking Server resource.
 *
 * ## Example Usage
 *
 * ### Cognito Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const example = new aws.sagemaker.MlflowTrackingServer("example", {
 *     trackingServerName: "example",
 *     roleArn: exampleAwsIamRole.arn,
 *     artifactStoreUri: `s3://${exampleAwsS3Bucket.bucket}/path`,
 * });
 * ```
 *
 * ## Import
 *
 * Using `pulumi import`, import SageMaker AI MLFlow Tracking Servers using the `workteam_name`. For example:
 *
 * ```sh
 * $ pulumi import aws:sagemaker/mlflowTrackingServer:MlflowTrackingServer example example
 * ```
 */
class MlflowTrackingServer extends pulumi.CustomResource {
    /**
     * Get an existing MlflowTrackingServer resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name, id, state, opts) {
        return new MlflowTrackingServer(name, state, Object.assign(Object.assign({}, opts), { id: id }));
    }
    /**
     * Returns true if the given object is an instance of MlflowTrackingServer.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === MlflowTrackingServer.__pulumiType;
    }
    constructor(name, argsOrState, opts) {
        let resourceInputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState;
            resourceInputs["arn"] = state ? state.arn : undefined;
            resourceInputs["artifactStoreUri"] = state ? state.artifactStoreUri : undefined;
            resourceInputs["automaticModelRegistration"] = state ? state.automaticModelRegistration : undefined;
            resourceInputs["mlflowVersion"] = state ? state.mlflowVersion : undefined;
            resourceInputs["roleArn"] = state ? state.roleArn : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
            resourceInputs["tagsAll"] = state ? state.tagsAll : undefined;
            resourceInputs["trackingServerName"] = state ? state.trackingServerName : undefined;
            resourceInputs["trackingServerSize"] = state ? state.trackingServerSize : undefined;
            resourceInputs["trackingServerUrl"] = state ? state.trackingServerUrl : undefined;
            resourceInputs["weeklyMaintenanceWindowStart"] = state ? state.weeklyMaintenanceWindowStart : undefined;
        }
        else {
            const args = argsOrState;
            if ((!args || args.artifactStoreUri === undefined) && !opts.urn) {
                throw new Error("Missing required property 'artifactStoreUri'");
            }
            if ((!args || args.roleArn === undefined) && !opts.urn) {
                throw new Error("Missing required property 'roleArn'");
            }
            if ((!args || args.trackingServerName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'trackingServerName'");
            }
            resourceInputs["artifactStoreUri"] = args ? args.artifactStoreUri : undefined;
            resourceInputs["automaticModelRegistration"] = args ? args.automaticModelRegistration : undefined;
            resourceInputs["mlflowVersion"] = args ? args.mlflowVersion : undefined;
            resourceInputs["roleArn"] = args ? args.roleArn : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["trackingServerName"] = args ? args.trackingServerName : undefined;
            resourceInputs["trackingServerSize"] = args ? args.trackingServerSize : undefined;
            resourceInputs["weeklyMaintenanceWindowStart"] = args ? args.weeklyMaintenanceWindowStart : undefined;
            resourceInputs["arn"] = undefined /*out*/;
            resourceInputs["tagsAll"] = undefined /*out*/;
            resourceInputs["trackingServerUrl"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(MlflowTrackingServer.__pulumiType, name, resourceInputs, opts);
    }
}
exports.MlflowTrackingServer = MlflowTrackingServer;
/** @internal */
MlflowTrackingServer.__pulumiType = 'aws:sagemaker/mlflowTrackingServer:MlflowTrackingServer';
//# sourceMappingURL=mlflowTrackingServer.js.map