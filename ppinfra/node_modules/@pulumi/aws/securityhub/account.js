"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.Account = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
/**
 * Enables Security Hub for this AWS account.
 *
 * > **NOTE:** Destroying this resource will disable Security Hub for this AWS account.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const example = new aws.securityhub.Account("example", {});
 * ```
 *
 * ## Import
 *
 * Using `pulumi import`, import an existing Security Hub enabled account using the AWS account ID. For example:
 *
 * ```sh
 * $ pulumi import aws:securityhub/account:Account example 123456789012
 * ```
 */
class Account extends pulumi.CustomResource {
    /**
     * Get an existing Account resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name, id, state, opts) {
        return new Account(name, state, Object.assign(Object.assign({}, opts), { id: id }));
    }
    /**
     * Returns true if the given object is an instance of Account.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Account.__pulumiType;
    }
    constructor(name, argsOrState, opts) {
        let resourceInputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState;
            resourceInputs["arn"] = state ? state.arn : undefined;
            resourceInputs["autoEnableControls"] = state ? state.autoEnableControls : undefined;
            resourceInputs["controlFindingGenerator"] = state ? state.controlFindingGenerator : undefined;
            resourceInputs["enableDefaultStandards"] = state ? state.enableDefaultStandards : undefined;
        }
        else {
            const args = argsOrState;
            resourceInputs["autoEnableControls"] = args ? args.autoEnableControls : undefined;
            resourceInputs["controlFindingGenerator"] = args ? args.controlFindingGenerator : undefined;
            resourceInputs["enableDefaultStandards"] = args ? args.enableDefaultStandards : undefined;
            resourceInputs["arn"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Account.__pulumiType, name, resourceInputs, opts);
    }
}
exports.Account = Account;
/** @internal */
Account.__pulumiType = 'aws:securityhub/account:Account';
//# sourceMappingURL=account.js.map