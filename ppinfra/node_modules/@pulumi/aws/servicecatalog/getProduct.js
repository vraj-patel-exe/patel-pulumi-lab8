"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.getProductOutput = exports.getProduct = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
/**
 * Use this data source to retrieve information about a Service Catalog product.
 *
 * > **NOTE:** A "provisioning artifact" is also known as a "version," and a "distributor" is also known as a "vendor."
 *
 * ## Example Usage
 *
 * ### Basic Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const example = aws.servicecatalog.getProduct({
 *     id: "prod-dnigbtea24ste",
 * });
 * ```
 */
function getProduct(args, opts) {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aws:servicecatalog/getProduct:getProduct", {
        "acceptLanguage": args.acceptLanguage,
        "id": args.id,
        "tags": args.tags,
    }, opts);
}
exports.getProduct = getProduct;
/**
 * Use this data source to retrieve information about a Service Catalog product.
 *
 * > **NOTE:** A "provisioning artifact" is also known as a "version," and a "distributor" is also known as a "vendor."
 *
 * ## Example Usage
 *
 * ### Basic Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const example = aws.servicecatalog.getProduct({
 *     id: "prod-dnigbtea24ste",
 * });
 * ```
 */
function getProductOutput(args, opts) {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("aws:servicecatalog/getProduct:getProduct", {
        "acceptLanguage": args.acceptLanguage,
        "id": args.id,
        "tags": args.tags,
    }, opts);
}
exports.getProductOutput = getProductOutput;
//# sourceMappingURL=getProduct.js.map