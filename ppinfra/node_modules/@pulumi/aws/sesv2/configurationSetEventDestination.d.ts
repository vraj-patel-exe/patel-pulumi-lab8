import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
/**
 * Resource for managing an AWS SESv2 (Simple Email V2) Configuration Set Event Destination.
 *
 * ## Example Usage
 *
 * ### CloudWatch Destination
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const example = new aws.sesv2.ConfigurationSet("example", {configurationSetName: "example"});
 * const exampleConfigurationSetEventDestination = new aws.sesv2.ConfigurationSetEventDestination("example", {
 *     configurationSetName: example.configurationSetName,
 *     eventDestinationName: "example",
 *     eventDestination: {
 *         cloudWatchDestination: {
 *             dimensionConfigurations: [{
 *                 defaultDimensionValue: "example",
 *                 dimensionName: "example",
 *                 dimensionValueSource: "MESSAGE_TAG",
 *             }],
 *         },
 *         enabled: true,
 *         matchingEventTypes: ["SEND"],
 *     },
 * });
 * ```
 *
 * ### EventBridge Destination
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const _default = aws.cloudwatch.getEventBus({
 *     name: "default",
 * });
 * const example = new aws.sesv2.ConfigurationSetEventDestination("example", {
 *     configurationSetName: exampleAwsSesv2ConfigurationSet.configurationSetName,
 *     eventDestinationName: "example",
 *     eventDestination: {
 *         eventBridgeDestination: {
 *             eventBusArn: _default.then(_default => _default.arn),
 *         },
 *         enabled: true,
 *         matchingEventTypes: ["SEND"],
 *     },
 * });
 * ```
 *
 * ### Kinesis Firehose Destination
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const example = new aws.sesv2.ConfigurationSet("example", {configurationSetName: "example"});
 * const exampleConfigurationSetEventDestination = new aws.sesv2.ConfigurationSetEventDestination("example", {
 *     configurationSetName: example.configurationSetName,
 *     eventDestinationName: "example",
 *     eventDestination: {
 *         kinesisFirehoseDestination: {
 *             deliveryStreamArn: exampleAwsKinesisFirehoseDeliveryStream.arn,
 *             iamRoleArn: exampleAwsIamRole.arn,
 *         },
 *         enabled: true,
 *         matchingEventTypes: ["SEND"],
 *     },
 * });
 * ```
 *
 * ### Pinpoint Destination
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const example = new aws.sesv2.ConfigurationSet("example", {configurationSetName: "example"});
 * const exampleConfigurationSetEventDestination = new aws.sesv2.ConfigurationSetEventDestination("example", {
 *     configurationSetName: example.configurationSetName,
 *     eventDestinationName: "example",
 *     eventDestination: {
 *         pinpointDestination: {
 *             applicationArn: exampleAwsPinpointApp.arn,
 *         },
 *         enabled: true,
 *         matchingEventTypes: ["SEND"],
 *     },
 * });
 * ```
 *
 * ### SNS Destination
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const example = new aws.sesv2.ConfigurationSet("example", {configurationSetName: "example"});
 * const exampleConfigurationSetEventDestination = new aws.sesv2.ConfigurationSetEventDestination("example", {
 *     configurationSetName: example.configurationSetName,
 *     eventDestinationName: "example",
 *     eventDestination: {
 *         snsDestination: {
 *             topicArn: exampleAwsSnsTopic.arn,
 *         },
 *         enabled: true,
 *         matchingEventTypes: ["SEND"],
 *     },
 * });
 * ```
 *
 * ## Import
 *
 * Using `pulumi import`, import SESv2 (Simple Email V2) Configuration Set Event Destination using the `id` (`configuration_set_name|event_destination_name`). For example:
 *
 * ```sh
 * $ pulumi import aws:sesv2/configurationSetEventDestination:ConfigurationSetEventDestination example example_configuration_set|example_event_destination
 * ```
 */
export declare class ConfigurationSetEventDestination extends pulumi.CustomResource {
    /**
     * Get an existing ConfigurationSetEventDestination resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ConfigurationSetEventDestinationState, opts?: pulumi.CustomResourceOptions): ConfigurationSetEventDestination;
    /**
     * Returns true if the given object is an instance of ConfigurationSetEventDestination.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is ConfigurationSetEventDestination;
    /**
     * The name of the configuration set.
     */
    readonly configurationSetName: pulumi.Output<string>;
    /**
     * A name that identifies the event destination within the configuration set.
     */
    readonly eventDestination: pulumi.Output<outputs.sesv2.ConfigurationSetEventDestinationEventDestination>;
    /**
     * An object that defines the event destination. See `eventDestination` Block for details.
     */
    readonly eventDestinationName: pulumi.Output<string>;
    /**
     * Create a ConfigurationSetEventDestination resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ConfigurationSetEventDestinationArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * Input properties used for looking up and filtering ConfigurationSetEventDestination resources.
 */
export interface ConfigurationSetEventDestinationState {
    /**
     * The name of the configuration set.
     */
    configurationSetName?: pulumi.Input<string>;
    /**
     * A name that identifies the event destination within the configuration set.
     */
    eventDestination?: pulumi.Input<inputs.sesv2.ConfigurationSetEventDestinationEventDestination>;
    /**
     * An object that defines the event destination. See `eventDestination` Block for details.
     */
    eventDestinationName?: pulumi.Input<string>;
}
/**
 * The set of arguments for constructing a ConfigurationSetEventDestination resource.
 */
export interface ConfigurationSetEventDestinationArgs {
    /**
     * The name of the configuration set.
     */
    configurationSetName: pulumi.Input<string>;
    /**
     * A name that identifies the event destination within the configuration set.
     */
    eventDestination: pulumi.Input<inputs.sesv2.ConfigurationSetEventDestinationEventDestination>;
    /**
     * An object that defines the event destination. See `eventDestination` Block for details.
     */
    eventDestinationName: pulumi.Input<string>;
}
