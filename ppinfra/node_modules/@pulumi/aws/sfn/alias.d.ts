import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
/**
 * Provides a Step Function State Machine Alias.
 *
 * ## Example Usage
 *
 * ### Basic Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const sfnAlias = new aws.sfn.Alias("sfn_alias", {
 *     name: "my_sfn_alias",
 *     routingConfigurations: [{
 *         stateMachineVersionArn: sfnTest.stateMachineVersionArn,
 *         weight: 100,
 *     }],
 * });
 * const mySfnAlias = new aws.sfn.Alias("my_sfn_alias", {
 *     name: "my_sfn_alias",
 *     routingConfigurations: [
 *         {
 *             stateMachineVersionArn: "arn:aws:states:us-east-1:12345:stateMachine:demo:3",
 *             weight: 50,
 *         },
 *         {
 *             stateMachineVersionArn: "arn:aws:states:us-east-1:12345:stateMachine:demo:2",
 *             weight: 50,
 *         },
 *     ],
 * });
 * ```
 *
 * ## Import
 *
 * Using `pulumi import`, import SFN (Step Functions) Alias using the `arn`. For example:
 *
 * ```sh
 * $ pulumi import aws:sfn/alias:Alias foo arn:aws:states:us-east-1:123456789098:stateMachine:myStateMachine:foo
 * ```
 */
export declare class Alias extends pulumi.CustomResource {
    /**
     * Get an existing Alias resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, state?: AliasState, opts?: pulumi.CustomResourceOptions): Alias;
    /**
     * Returns true if the given object is an instance of Alias.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is Alias;
    /**
     * The Amazon Resource Name (ARN) identifying your state machine alias.
     */
    readonly arn: pulumi.Output<string>;
    /**
     * The date the state machine alias was created.
     */
    readonly creationDate: pulumi.Output<string>;
    /**
     * Description of the alias.
     */
    readonly description: pulumi.Output<string | undefined>;
    /**
     * Name for the alias you are creating.
     */
    readonly name: pulumi.Output<string>;
    /**
     * The StateMachine alias' route configuration settings. Fields documented below
     */
    readonly routingConfigurations: pulumi.Output<outputs.sfn.AliasRoutingConfiguration[]>;
    /**
     * Create a Alias resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: AliasArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * Input properties used for looking up and filtering Alias resources.
 */
export interface AliasState {
    /**
     * The Amazon Resource Name (ARN) identifying your state machine alias.
     */
    arn?: pulumi.Input<string>;
    /**
     * The date the state machine alias was created.
     */
    creationDate?: pulumi.Input<string>;
    /**
     * Description of the alias.
     */
    description?: pulumi.Input<string>;
    /**
     * Name for the alias you are creating.
     */
    name?: pulumi.Input<string>;
    /**
     * The StateMachine alias' route configuration settings. Fields documented below
     */
    routingConfigurations?: pulumi.Input<pulumi.Input<inputs.sfn.AliasRoutingConfiguration>[]>;
}
/**
 * The set of arguments for constructing a Alias resource.
 */
export interface AliasArgs {
    /**
     * Description of the alias.
     */
    description?: pulumi.Input<string>;
    /**
     * Name for the alias you are creating.
     */
    name?: pulumi.Input<string>;
    /**
     * The StateMachine alias' route configuration settings. Fields documented below
     */
    routingConfigurations: pulumi.Input<pulumi.Input<inputs.sfn.AliasRoutingConfiguration>[]>;
}
