"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.DataProtectionPolicy = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
/**
 * Provides an SNS data protection topic policy resource
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const example = new aws.sns.Topic("example", {name: "example"});
 * const exampleDataProtectionPolicy = new aws.sns.DataProtectionPolicy("example", {
 *     arn: example.arn,
 *     policy: JSON.stringify({
 *         Description: "Example data protection policy",
 *         Name: "__example_data_protection_policy",
 *         Statement: [{
 *             DataDirection: "Inbound",
 *             DataIdentifier: ["arn:aws:dataprotection::aws:data-identifier/EmailAddress"],
 *             Operation: {
 *                 Deny: {},
 *             },
 *             Principal: ["*"],
 *             Sid: "__deny_statement_11ba9d96",
 *         }],
 *         Version: "2021-06-01",
 *     }),
 * });
 * ```
 *
 * ## Import
 *
 * Using `pulumi import`, import SNS Data Protection Topic Policy using the topic ARN. For example:
 *
 * ```sh
 * $ pulumi import aws:sns/dataProtectionPolicy:DataProtectionPolicy example arn:aws:sns:us-west-2:123456789012:example
 * ```
 */
class DataProtectionPolicy extends pulumi.CustomResource {
    /**
     * Get an existing DataProtectionPolicy resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name, id, state, opts) {
        return new DataProtectionPolicy(name, state, Object.assign(Object.assign({}, opts), { id: id }));
    }
    /**
     * Returns true if the given object is an instance of DataProtectionPolicy.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === DataProtectionPolicy.__pulumiType;
    }
    constructor(name, argsOrState, opts) {
        let resourceInputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState;
            resourceInputs["arn"] = state ? state.arn : undefined;
            resourceInputs["policy"] = state ? state.policy : undefined;
        }
        else {
            const args = argsOrState;
            if ((!args || args.arn === undefined) && !opts.urn) {
                throw new Error("Missing required property 'arn'");
            }
            if ((!args || args.policy === undefined) && !opts.urn) {
                throw new Error("Missing required property 'policy'");
            }
            resourceInputs["arn"] = args ? args.arn : undefined;
            resourceInputs["policy"] = args ? args.policy : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(DataProtectionPolicy.__pulumiType, name, resourceInputs, opts);
    }
}
exports.DataProtectionPolicy = DataProtectionPolicy;
/** @internal */
DataProtectionPolicy.__pulumiType = 'aws:sns/dataProtectionPolicy:DataProtectionPolicy';
//# sourceMappingURL=dataProtectionPolicy.js.map