"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.ContactsRotation = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
/**
 * ## Example Usage
 *
 * ### Basic Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const example = new aws.ssm.ContactsRotation("example", {
 *     contactIds: [exampleAwsSsmcontactsContact.arn],
 *     name: "rotation",
 *     recurrence: {
 *         numberOfOnCalls: 1,
 *         recurrenceMultiplier: 1,
 *         dailySettings: [{
 *             hourOfDay: 9,
 *             minuteOfHour: 0,
 *         }],
 *     },
 *     timeZoneId: "Australia/Sydney",
 * }, {
 *     dependsOn: [exampleAwsSsmincidentsReplicationSet],
 * });
 * ```
 *
 * ### Usage with Weekly Settings and Shift Coverages Fields
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const example = new aws.ssm.ContactsRotation("example", {
 *     contactIds: [exampleAwsSsmcontactsContact.arn],
 *     name: "rotation",
 *     recurrence: {
 *         numberOfOnCalls: 1,
 *         recurrenceMultiplier: 1,
 *         weeklySettings: [
 *             {
 *                 dayOfWeek: "WED",
 *                 handOffTime: {
 *                     hourOfDay: 4,
 *                     minuteOfHour: 25,
 *                 },
 *             },
 *             {
 *                 dayOfWeek: "FRI",
 *                 handOffTime: {
 *                     hourOfDay: 15,
 *                     minuteOfHour: 57,
 *                 },
 *             },
 *         ],
 *         shiftCoverages: [{
 *             mapBlockKey: "MON",
 *             coverageTimes: [{
 *                 start: {
 *                     hourOfDay: 1,
 *                     minuteOfHour: 0,
 *                 },
 *                 end: {
 *                     hourOfDay: 23,
 *                     minuteOfHour: 0,
 *                 },
 *             }],
 *         }],
 *     },
 *     startTime: "2023-07-20T02:21:49+00:00",
 *     timeZoneId: "Australia/Sydney",
 *     tags: {
 *         key1: "tag1",
 *         key2: "tag2",
 *     },
 * }, {
 *     dependsOn: [exampleAwsSsmincidentsReplicationSet],
 * });
 * ```
 *
 * ### Usage with Monthly Settings Fields
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const example = new aws.ssm.ContactsRotation("example", {
 *     contactIds: [exampleAwsSsmcontactsContact.arn],
 *     name: "rotation",
 *     recurrence: {
 *         numberOfOnCalls: 1,
 *         recurrenceMultiplier: 1,
 *         monthlySettings: [
 *             {
 *                 dayOfMonth: 20,
 *                 handOffTime: {
 *                     hourOfDay: 8,
 *                     minuteOfHour: 0,
 *                 },
 *             },
 *             {
 *                 dayOfMonth: 13,
 *                 handOffTime: {
 *                     hourOfDay: 12,
 *                     minuteOfHour: 34,
 *                 },
 *             },
 *         ],
 *     },
 *     timeZoneId: "Australia/Sydney",
 * }, {
 *     dependsOn: [exampleAwsSsmincidentsReplicationSet],
 * });
 * ```
 *
 * ## Import
 *
 * Using `pulumi import`, import CodeGuru Profiler Profiling Group using the `arn`. For example:
 *
 * ```sh
 * $ pulumi import aws:ssm/contactsRotation:ContactsRotation example arn:aws:ssm-contacts:us-east-1:012345678910:rotation/example
 * ```
 */
class ContactsRotation extends pulumi.CustomResource {
    /**
     * Get an existing ContactsRotation resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name, id, state, opts) {
        return new ContactsRotation(name, state, Object.assign(Object.assign({}, opts), { id: id }));
    }
    /**
     * Returns true if the given object is an instance of ContactsRotation.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ContactsRotation.__pulumiType;
    }
    constructor(name, argsOrState, opts) {
        let resourceInputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState;
            resourceInputs["arn"] = state ? state.arn : undefined;
            resourceInputs["contactIds"] = state ? state.contactIds : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["recurrence"] = state ? state.recurrence : undefined;
            resourceInputs["startTime"] = state ? state.startTime : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
            resourceInputs["tagsAll"] = state ? state.tagsAll : undefined;
            resourceInputs["timeZoneId"] = state ? state.timeZoneId : undefined;
        }
        else {
            const args = argsOrState;
            if ((!args || args.contactIds === undefined) && !opts.urn) {
                throw new Error("Missing required property 'contactIds'");
            }
            if ((!args || args.timeZoneId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'timeZoneId'");
            }
            resourceInputs["contactIds"] = args ? args.contactIds : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["recurrence"] = args ? args.recurrence : undefined;
            resourceInputs["startTime"] = args ? args.startTime : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["timeZoneId"] = args ? args.timeZoneId : undefined;
            resourceInputs["arn"] = undefined /*out*/;
            resourceInputs["tagsAll"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ContactsRotation.__pulumiType, name, resourceInputs, opts);
    }
}
exports.ContactsRotation = ContactsRotation;
/** @internal */
ContactsRotation.__pulumiType = 'aws:ssm/contactsRotation:ContactsRotation';
//# sourceMappingURL=contactsRotation.js.map