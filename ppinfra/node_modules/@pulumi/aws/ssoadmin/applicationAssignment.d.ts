import * as pulumi from "@pulumi/pulumi";
/**
 * Resource for managing an AWS SSO Admin Application Assignment.
 *
 * ## Example Usage
 *
 * ### Basic Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const example = new aws.ssoadmin.ApplicationAssignment("example", {
 *     applicationArn: exampleAwsSsoadminApplication.applicationArn,
 *     principalId: exampleAwsIdentitystoreUser.userId,
 *     principalType: "USER",
 * });
 * ```
 *
 * ### Group Type
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const example = new aws.ssoadmin.ApplicationAssignment("example", {
 *     applicationArn: exampleAwsSsoadminApplication.applicationArn,
 *     principalId: exampleAwsIdentitystoreGroup.groupId,
 *     principalType: "GROUP",
 * });
 * ```
 *
 * ## Import
 *
 * Using `pulumi import`, import SSO Admin Application Assignment using the `id`. For example:
 *
 * ```sh
 * $ pulumi import aws:ssoadmin/applicationAssignment:ApplicationAssignment example arn:aws:sso::123456789012:application/id-12345678,abcd1234,USER
 * ```
 */
export declare class ApplicationAssignment extends pulumi.CustomResource {
    /**
     * Get an existing ApplicationAssignment resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ApplicationAssignmentState, opts?: pulumi.CustomResourceOptions): ApplicationAssignment;
    /**
     * Returns true if the given object is an instance of ApplicationAssignment.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is ApplicationAssignment;
    /**
     * ARN of the application.
     */
    readonly applicationArn: pulumi.Output<string>;
    /**
     * An identifier for an object in IAM Identity Center, such as a user or group.
     */
    readonly principalId: pulumi.Output<string>;
    /**
     * Entity type for which the assignment will be created. Valid values are `USER` or `GROUP`.
     */
    readonly principalType: pulumi.Output<string>;
    /**
     * Create a ApplicationAssignment resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ApplicationAssignmentArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * Input properties used for looking up and filtering ApplicationAssignment resources.
 */
export interface ApplicationAssignmentState {
    /**
     * ARN of the application.
     */
    applicationArn?: pulumi.Input<string>;
    /**
     * An identifier for an object in IAM Identity Center, such as a user or group.
     */
    principalId?: pulumi.Input<string>;
    /**
     * Entity type for which the assignment will be created. Valid values are `USER` or `GROUP`.
     */
    principalType?: pulumi.Input<string>;
}
/**
 * The set of arguments for constructing a ApplicationAssignment resource.
 */
export interface ApplicationAssignmentArgs {
    /**
     * ARN of the application.
     */
    applicationArn: pulumi.Input<string>;
    /**
     * An identifier for an object in IAM Identity Center, such as a user or group.
     */
    principalId: pulumi.Input<string>;
    /**
     * Entity type for which the assignment will be created. Valid values are `USER` or `GROUP`.
     */
    principalType: pulumi.Input<string>;
}
