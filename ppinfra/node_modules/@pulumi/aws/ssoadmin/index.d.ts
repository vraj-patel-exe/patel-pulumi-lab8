export { AccountAssignmentArgs, AccountAssignmentState } from "./accountAssignment";
export type AccountAssignment = import("./accountAssignment").AccountAssignment;
export declare const AccountAssignment: typeof import("./accountAssignment").AccountAssignment;
export { ApplicationArgs, ApplicationState } from "./application";
export type Application = import("./application").Application;
export declare const Application: typeof import("./application").Application;
export { ApplicationAccessScopeArgs, ApplicationAccessScopeState } from "./applicationAccessScope";
export type ApplicationAccessScope = import("./applicationAccessScope").ApplicationAccessScope;
export declare const ApplicationAccessScope: typeof import("./applicationAccessScope").ApplicationAccessScope;
export { ApplicationAssignmentArgs, ApplicationAssignmentState } from "./applicationAssignment";
export type ApplicationAssignment = import("./applicationAssignment").ApplicationAssignment;
export declare const ApplicationAssignment: typeof import("./applicationAssignment").ApplicationAssignment;
export { ApplicationAssignmentConfigurationArgs, ApplicationAssignmentConfigurationState } from "./applicationAssignmentConfiguration";
export type ApplicationAssignmentConfiguration = import("./applicationAssignmentConfiguration").ApplicationAssignmentConfiguration;
export declare const ApplicationAssignmentConfiguration: typeof import("./applicationAssignmentConfiguration").ApplicationAssignmentConfiguration;
export { CustomerManagedPolicyAttachmentArgs, CustomerManagedPolicyAttachmentState } from "./customerManagedPolicyAttachment";
export type CustomerManagedPolicyAttachment = import("./customerManagedPolicyAttachment").CustomerManagedPolicyAttachment;
export declare const CustomerManagedPolicyAttachment: typeof import("./customerManagedPolicyAttachment").CustomerManagedPolicyAttachment;
export { GetApplicationArgs, GetApplicationResult, GetApplicationOutputArgs } from "./getApplication";
export declare const getApplication: typeof import("./getApplication").getApplication;
export declare const getApplicationOutput: typeof import("./getApplication").getApplicationOutput;
export { GetApplicationAssignmentsArgs, GetApplicationAssignmentsResult, GetApplicationAssignmentsOutputArgs } from "./getApplicationAssignments";
export declare const getApplicationAssignments: typeof import("./getApplicationAssignments").getApplicationAssignments;
export declare const getApplicationAssignmentsOutput: typeof import("./getApplicationAssignments").getApplicationAssignmentsOutput;
export { GetApplicationProvidersArgs, GetApplicationProvidersResult, GetApplicationProvidersOutputArgs } from "./getApplicationProviders";
export declare const getApplicationProviders: typeof import("./getApplicationProviders").getApplicationProviders;
export declare const getApplicationProvidersOutput: typeof import("./getApplicationProviders").getApplicationProvidersOutput;
export { GetInstancesResult } from "./getInstances";
export declare const getInstances: typeof import("./getInstances").getInstances;
export declare const getInstancesOutput: typeof import("./getInstances").getInstancesOutput;
export { GetPermissionSetArgs, GetPermissionSetResult, GetPermissionSetOutputArgs } from "./getPermissionSet";
export declare const getPermissionSet: typeof import("./getPermissionSet").getPermissionSet;
export declare const getPermissionSetOutput: typeof import("./getPermissionSet").getPermissionSetOutput;
export { GetPermissionSetsArgs, GetPermissionSetsResult, GetPermissionSetsOutputArgs } from "./getPermissionSets";
export declare const getPermissionSets: typeof import("./getPermissionSets").getPermissionSets;
export declare const getPermissionSetsOutput: typeof import("./getPermissionSets").getPermissionSetsOutput;
export { GetPrincipalApplicationAssignmentsArgs, GetPrincipalApplicationAssignmentsResult, GetPrincipalApplicationAssignmentsOutputArgs } from "./getPrincipalApplicationAssignments";
export declare const getPrincipalApplicationAssignments: typeof import("./getPrincipalApplicationAssignments").getPrincipalApplicationAssignments;
export declare const getPrincipalApplicationAssignmentsOutput: typeof import("./getPrincipalApplicationAssignments").getPrincipalApplicationAssignmentsOutput;
export { InstanceAccessControlAttributesArgs, InstanceAccessControlAttributesState } from "./instanceAccessControlAttributes";
export type InstanceAccessControlAttributes = import("./instanceAccessControlAttributes").InstanceAccessControlAttributes;
export declare const InstanceAccessControlAttributes: typeof import("./instanceAccessControlAttributes").InstanceAccessControlAttributes;
export { ManagedPolicyAttachmentArgs, ManagedPolicyAttachmentState } from "./managedPolicyAttachment";
export type ManagedPolicyAttachment = import("./managedPolicyAttachment").ManagedPolicyAttachment;
export declare const ManagedPolicyAttachment: typeof import("./managedPolicyAttachment").ManagedPolicyAttachment;
export { PermissionSetArgs, PermissionSetState } from "./permissionSet";
export type PermissionSet = import("./permissionSet").PermissionSet;
export declare const PermissionSet: typeof import("./permissionSet").PermissionSet;
export { PermissionSetInlinePolicyArgs, PermissionSetInlinePolicyState } from "./permissionSetInlinePolicy";
export type PermissionSetInlinePolicy = import("./permissionSetInlinePolicy").PermissionSetInlinePolicy;
export declare const PermissionSetInlinePolicy: typeof import("./permissionSetInlinePolicy").PermissionSetInlinePolicy;
export { PermissionsBoundaryAttachmentArgs, PermissionsBoundaryAttachmentState } from "./permissionsBoundaryAttachment";
export type PermissionsBoundaryAttachment = import("./permissionsBoundaryAttachment").PermissionsBoundaryAttachment;
export declare const PermissionsBoundaryAttachment: typeof import("./permissionsBoundaryAttachment").PermissionsBoundaryAttachment;
export { TrustedTokenIssuerArgs, TrustedTokenIssuerState } from "./trustedTokenIssuer";
export type TrustedTokenIssuer = import("./trustedTokenIssuer").TrustedTokenIssuer;
export declare const TrustedTokenIssuer: typeof import("./trustedTokenIssuer").TrustedTokenIssuer;
