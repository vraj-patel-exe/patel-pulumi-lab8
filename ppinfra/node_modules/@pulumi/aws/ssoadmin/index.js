"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.TrustedTokenIssuer = exports.PermissionsBoundaryAttachment = exports.PermissionSetInlinePolicy = exports.PermissionSet = exports.ManagedPolicyAttachment = exports.InstanceAccessControlAttributes = exports.getPrincipalApplicationAssignmentsOutput = exports.getPrincipalApplicationAssignments = exports.getPermissionSetsOutput = exports.getPermissionSets = exports.getPermissionSetOutput = exports.getPermissionSet = exports.getInstancesOutput = exports.getInstances = exports.getApplicationProvidersOutput = exports.getApplicationProviders = exports.getApplicationAssignmentsOutput = exports.getApplicationAssignments = exports.getApplicationOutput = exports.getApplication = exports.CustomerManagedPolicyAttachment = exports.ApplicationAssignmentConfiguration = exports.ApplicationAssignment = exports.ApplicationAccessScope = exports.Application = exports.AccountAssignment = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
exports.AccountAssignment = null;
utilities.lazyLoad(exports, ["AccountAssignment"], () => require("./accountAssignment"));
exports.Application = null;
utilities.lazyLoad(exports, ["Application"], () => require("./application"));
exports.ApplicationAccessScope = null;
utilities.lazyLoad(exports, ["ApplicationAccessScope"], () => require("./applicationAccessScope"));
exports.ApplicationAssignment = null;
utilities.lazyLoad(exports, ["ApplicationAssignment"], () => require("./applicationAssignment"));
exports.ApplicationAssignmentConfiguration = null;
utilities.lazyLoad(exports, ["ApplicationAssignmentConfiguration"], () => require("./applicationAssignmentConfiguration"));
exports.CustomerManagedPolicyAttachment = null;
utilities.lazyLoad(exports, ["CustomerManagedPolicyAttachment"], () => require("./customerManagedPolicyAttachment"));
exports.getApplication = null;
exports.getApplicationOutput = null;
utilities.lazyLoad(exports, ["getApplication", "getApplicationOutput"], () => require("./getApplication"));
exports.getApplicationAssignments = null;
exports.getApplicationAssignmentsOutput = null;
utilities.lazyLoad(exports, ["getApplicationAssignments", "getApplicationAssignmentsOutput"], () => require("./getApplicationAssignments"));
exports.getApplicationProviders = null;
exports.getApplicationProvidersOutput = null;
utilities.lazyLoad(exports, ["getApplicationProviders", "getApplicationProvidersOutput"], () => require("./getApplicationProviders"));
exports.getInstances = null;
exports.getInstancesOutput = null;
utilities.lazyLoad(exports, ["getInstances", "getInstancesOutput"], () => require("./getInstances"));
exports.getPermissionSet = null;
exports.getPermissionSetOutput = null;
utilities.lazyLoad(exports, ["getPermissionSet", "getPermissionSetOutput"], () => require("./getPermissionSet"));
exports.getPermissionSets = null;
exports.getPermissionSetsOutput = null;
utilities.lazyLoad(exports, ["getPermissionSets", "getPermissionSetsOutput"], () => require("./getPermissionSets"));
exports.getPrincipalApplicationAssignments = null;
exports.getPrincipalApplicationAssignmentsOutput = null;
utilities.lazyLoad(exports, ["getPrincipalApplicationAssignments", "getPrincipalApplicationAssignmentsOutput"], () => require("./getPrincipalApplicationAssignments"));
exports.InstanceAccessControlAttributes = null;
utilities.lazyLoad(exports, ["InstanceAccessControlAttributes"], () => require("./instanceAccessControlAttributes"));
exports.ManagedPolicyAttachment = null;
utilities.lazyLoad(exports, ["ManagedPolicyAttachment"], () => require("./managedPolicyAttachment"));
exports.PermissionSet = null;
utilities.lazyLoad(exports, ["PermissionSet"], () => require("./permissionSet"));
exports.PermissionSetInlinePolicy = null;
utilities.lazyLoad(exports, ["PermissionSetInlinePolicy"], () => require("./permissionSetInlinePolicy"));
exports.PermissionsBoundaryAttachment = null;
utilities.lazyLoad(exports, ["PermissionsBoundaryAttachment"], () => require("./permissionsBoundaryAttachment"));
exports.TrustedTokenIssuer = null;
utilities.lazyLoad(exports, ["TrustedTokenIssuer"], () => require("./trustedTokenIssuer"));
const _module = {
    version: utilities.getVersion(),
    construct: (name, type, urn) => {
        switch (type) {
            case "aws:ssoadmin/accountAssignment:AccountAssignment":
                return new exports.AccountAssignment(name, undefined, { urn });
            case "aws:ssoadmin/application:Application":
                return new exports.Application(name, undefined, { urn });
            case "aws:ssoadmin/applicationAccessScope:ApplicationAccessScope":
                return new exports.ApplicationAccessScope(name, undefined, { urn });
            case "aws:ssoadmin/applicationAssignment:ApplicationAssignment":
                return new exports.ApplicationAssignment(name, undefined, { urn });
            case "aws:ssoadmin/applicationAssignmentConfiguration:ApplicationAssignmentConfiguration":
                return new exports.ApplicationAssignmentConfiguration(name, undefined, { urn });
            case "aws:ssoadmin/customerManagedPolicyAttachment:CustomerManagedPolicyAttachment":
                return new exports.CustomerManagedPolicyAttachment(name, undefined, { urn });
            case "aws:ssoadmin/instanceAccessControlAttributes:InstanceAccessControlAttributes":
                return new exports.InstanceAccessControlAttributes(name, undefined, { urn });
            case "aws:ssoadmin/managedPolicyAttachment:ManagedPolicyAttachment":
                return new exports.ManagedPolicyAttachment(name, undefined, { urn });
            case "aws:ssoadmin/permissionSet:PermissionSet":
                return new exports.PermissionSet(name, undefined, { urn });
            case "aws:ssoadmin/permissionSetInlinePolicy:PermissionSetInlinePolicy":
                return new exports.PermissionSetInlinePolicy(name, undefined, { urn });
            case "aws:ssoadmin/permissionsBoundaryAttachment:PermissionsBoundaryAttachment":
                return new exports.PermissionsBoundaryAttachment(name, undefined, { urn });
            case "aws:ssoadmin/trustedTokenIssuer:TrustedTokenIssuer":
                return new exports.TrustedTokenIssuer(name, undefined, { urn });
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("aws", "ssoadmin/accountAssignment", _module);
pulumi.runtime.registerResourceModule("aws", "ssoadmin/application", _module);
pulumi.runtime.registerResourceModule("aws", "ssoadmin/applicationAccessScope", _module);
pulumi.runtime.registerResourceModule("aws", "ssoadmin/applicationAssignment", _module);
pulumi.runtime.registerResourceModule("aws", "ssoadmin/applicationAssignmentConfiguration", _module);
pulumi.runtime.registerResourceModule("aws", "ssoadmin/customerManagedPolicyAttachment", _module);
pulumi.runtime.registerResourceModule("aws", "ssoadmin/instanceAccessControlAttributes", _module);
pulumi.runtime.registerResourceModule("aws", "ssoadmin/managedPolicyAttachment", _module);
pulumi.runtime.registerResourceModule("aws", "ssoadmin/permissionSet", _module);
pulumi.runtime.registerResourceModule("aws", "ssoadmin/permissionSetInlinePolicy", _module);
pulumi.runtime.registerResourceModule("aws", "ssoadmin/permissionsBoundaryAttachment", _module);
pulumi.runtime.registerResourceModule("aws", "ssoadmin/trustedTokenIssuer", _module);
//# sourceMappingURL=index.js.map