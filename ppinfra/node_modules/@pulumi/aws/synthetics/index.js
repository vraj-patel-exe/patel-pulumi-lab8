"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.GroupAssociation = exports.Group = exports.getRuntimeVersionsOutput = exports.getRuntimeVersions = exports.getRuntimeVersionOutput = exports.getRuntimeVersion = exports.Canary = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
exports.Canary = null;
utilities.lazyLoad(exports, ["Canary"], () => require("./canary"));
exports.getRuntimeVersion = null;
exports.getRuntimeVersionOutput = null;
utilities.lazyLoad(exports, ["getRuntimeVersion", "getRuntimeVersionOutput"], () => require("./getRuntimeVersion"));
exports.getRuntimeVersions = null;
exports.getRuntimeVersionsOutput = null;
utilities.lazyLoad(exports, ["getRuntimeVersions", "getRuntimeVersionsOutput"], () => require("./getRuntimeVersions"));
exports.Group = null;
utilities.lazyLoad(exports, ["Group"], () => require("./group"));
exports.GroupAssociation = null;
utilities.lazyLoad(exports, ["GroupAssociation"], () => require("./groupAssociation"));
const _module = {
    version: utilities.getVersion(),
    construct: (name, type, urn) => {
        switch (type) {
            case "aws:synthetics/canary:Canary":
                return new exports.Canary(name, undefined, { urn });
            case "aws:synthetics/group:Group":
                return new exports.Group(name, undefined, { urn });
            case "aws:synthetics/groupAssociation:GroupAssociation":
                return new exports.GroupAssociation(name, undefined, { urn });
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("aws", "synthetics/canary", _module);
pulumi.runtime.registerResourceModule("aws", "synthetics/group", _module);
pulumi.runtime.registerResourceModule("aws", "synthetics/groupAssociation", _module);
//# sourceMappingURL=index.js.map