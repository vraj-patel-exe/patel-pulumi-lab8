"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.InstanceTrustProviderAttachment = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
/**
 * Resource for managing a Verified Access Instance Trust Provider Attachment.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const example = new aws.verifiedaccess.Instance("example", {});
 * const exampleTrustProvider = new aws.verifiedaccess.TrustProvider("example", {
 *     deviceTrustProviderType: "jamf",
 *     policyReferenceName: "example",
 *     trustProviderType: "device",
 *     deviceOptions: {
 *         tenantId: "example",
 *     },
 * });
 * const exampleInstanceTrustProviderAttachment = new aws.verifiedaccess.InstanceTrustProviderAttachment("example", {
 *     verifiedaccessInstanceId: example.id,
 *     verifiedaccessTrustProviderId: exampleTrustProvider.id,
 * });
 * ```
 *
 * ## Import
 *
 * Using `pulumi import`, import Verified Access Instance Trust Provider Attachments using the `verifiedaccess_instance_id` and `verifiedaccess_trust_provider_id` separated by a forward slash (`/`). For example:
 *
 * ```sh
 * $ pulumi import aws:verifiedaccess/instanceTrustProviderAttachment:InstanceTrustProviderAttachment example vai-1234567890abcdef0/vatp-8012925589
 * ```
 */
class InstanceTrustProviderAttachment extends pulumi.CustomResource {
    /**
     * Get an existing InstanceTrustProviderAttachment resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name, id, state, opts) {
        return new InstanceTrustProviderAttachment(name, state, Object.assign(Object.assign({}, opts), { id: id }));
    }
    /**
     * Returns true if the given object is an instance of InstanceTrustProviderAttachment.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === InstanceTrustProviderAttachment.__pulumiType;
    }
    constructor(name, argsOrState, opts) {
        let resourceInputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState;
            resourceInputs["verifiedaccessInstanceId"] = state ? state.verifiedaccessInstanceId : undefined;
            resourceInputs["verifiedaccessTrustProviderId"] = state ? state.verifiedaccessTrustProviderId : undefined;
        }
        else {
            const args = argsOrState;
            if ((!args || args.verifiedaccessInstanceId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'verifiedaccessInstanceId'");
            }
            if ((!args || args.verifiedaccessTrustProviderId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'verifiedaccessTrustProviderId'");
            }
            resourceInputs["verifiedaccessInstanceId"] = args ? args.verifiedaccessInstanceId : undefined;
            resourceInputs["verifiedaccessTrustProviderId"] = args ? args.verifiedaccessTrustProviderId : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(InstanceTrustProviderAttachment.__pulumiType, name, resourceInputs, opts);
    }
}
exports.InstanceTrustProviderAttachment = InstanceTrustProviderAttachment;
/** @internal */
InstanceTrustProviderAttachment.__pulumiType = 'aws:verifiedaccess/instanceTrustProviderAttachment:InstanceTrustProviderAttachment';
//# sourceMappingURL=instanceTrustProviderAttachment.js.map