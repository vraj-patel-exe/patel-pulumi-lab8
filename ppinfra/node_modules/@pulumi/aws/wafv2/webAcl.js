"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.WebAcl = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
class WebAcl extends pulumi.CustomResource {
    /**
     * Get an existing WebAcl resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name, id, state, opts) {
        return new WebAcl(name, state, Object.assign(Object.assign({}, opts), { id: id }));
    }
    /**
     * Returns true if the given object is an instance of WebAcl.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === WebAcl.__pulumiType;
    }
    constructor(name, argsOrState, opts) {
        let resourceInputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState;
            resourceInputs["applicationIntegrationUrl"] = state ? state.applicationIntegrationUrl : undefined;
            resourceInputs["arn"] = state ? state.arn : undefined;
            resourceInputs["associationConfig"] = state ? state.associationConfig : undefined;
            resourceInputs["capacity"] = state ? state.capacity : undefined;
            resourceInputs["captchaConfig"] = state ? state.captchaConfig : undefined;
            resourceInputs["challengeConfig"] = state ? state.challengeConfig : undefined;
            resourceInputs["customResponseBodies"] = state ? state.customResponseBodies : undefined;
            resourceInputs["defaultAction"] = state ? state.defaultAction : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["lockToken"] = state ? state.lockToken : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["ruleJson"] = state ? state.ruleJson : undefined;
            resourceInputs["rules"] = state ? state.rules : undefined;
            resourceInputs["scope"] = state ? state.scope : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
            resourceInputs["tagsAll"] = state ? state.tagsAll : undefined;
            resourceInputs["tokenDomains"] = state ? state.tokenDomains : undefined;
            resourceInputs["visibilityConfig"] = state ? state.visibilityConfig : undefined;
        }
        else {
            const args = argsOrState;
            if ((!args || args.defaultAction === undefined) && !opts.urn) {
                throw new Error("Missing required property 'defaultAction'");
            }
            if ((!args || args.scope === undefined) && !opts.urn) {
                throw new Error("Missing required property 'scope'");
            }
            if ((!args || args.visibilityConfig === undefined) && !opts.urn) {
                throw new Error("Missing required property 'visibilityConfig'");
            }
            resourceInputs["associationConfig"] = args ? args.associationConfig : undefined;
            resourceInputs["captchaConfig"] = args ? args.captchaConfig : undefined;
            resourceInputs["challengeConfig"] = args ? args.challengeConfig : undefined;
            resourceInputs["customResponseBodies"] = args ? args.customResponseBodies : undefined;
            resourceInputs["defaultAction"] = args ? args.defaultAction : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["ruleJson"] = args ? args.ruleJson : undefined;
            resourceInputs["rules"] = args ? args.rules : undefined;
            resourceInputs["scope"] = args ? args.scope : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["tokenDomains"] = args ? args.tokenDomains : undefined;
            resourceInputs["visibilityConfig"] = args ? args.visibilityConfig : undefined;
            resourceInputs["applicationIntegrationUrl"] = undefined /*out*/;
            resourceInputs["arn"] = undefined /*out*/;
            resourceInputs["capacity"] = undefined /*out*/;
            resourceInputs["lockToken"] = undefined /*out*/;
            resourceInputs["tagsAll"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(WebAcl.__pulumiType, name, resourceInputs, opts);
    }
}
exports.WebAcl = WebAcl;
/** @internal */
WebAcl.__pulumiType = 'aws:wafv2/webAcl:WebAcl';
//# sourceMappingURL=webAcl.js.map