"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.Workspace = exports.IpGroup = exports.getWorkspaceOutput = exports.getWorkspace = exports.getImageOutput = exports.getImage = exports.getDirectoryOutput = exports.getDirectory = exports.getBundleOutput = exports.getBundle = exports.Directory = exports.ConnectionAlias = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
exports.ConnectionAlias = null;
utilities.lazyLoad(exports, ["ConnectionAlias"], () => require("./connectionAlias"));
exports.Directory = null;
utilities.lazyLoad(exports, ["Directory"], () => require("./directory"));
exports.getBundle = null;
exports.getBundleOutput = null;
utilities.lazyLoad(exports, ["getBundle", "getBundleOutput"], () => require("./getBundle"));
exports.getDirectory = null;
exports.getDirectoryOutput = null;
utilities.lazyLoad(exports, ["getDirectory", "getDirectoryOutput"], () => require("./getDirectory"));
exports.getImage = null;
exports.getImageOutput = null;
utilities.lazyLoad(exports, ["getImage", "getImageOutput"], () => require("./getImage"));
exports.getWorkspace = null;
exports.getWorkspaceOutput = null;
utilities.lazyLoad(exports, ["getWorkspace", "getWorkspaceOutput"], () => require("./getWorkspace"));
exports.IpGroup = null;
utilities.lazyLoad(exports, ["IpGroup"], () => require("./ipGroup"));
exports.Workspace = null;
utilities.lazyLoad(exports, ["Workspace"], () => require("./workspace"));
const _module = {
    version: utilities.getVersion(),
    construct: (name, type, urn) => {
        switch (type) {
            case "aws:workspaces/connectionAlias:ConnectionAlias":
                return new exports.ConnectionAlias(name, undefined, { urn });
            case "aws:workspaces/directory:Directory":
                return new exports.Directory(name, undefined, { urn });
            case "aws:workspaces/ipGroup:IpGroup":
                return new exports.IpGroup(name, undefined, { urn });
            case "aws:workspaces/workspace:Workspace":
                return new exports.Workspace(name, undefined, { urn });
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("aws", "workspaces/connectionAlias", _module);
pulumi.runtime.registerResourceModule("aws", "workspaces/directory", _module);
pulumi.runtime.registerResourceModule("aws", "workspaces/ipGroup", _module);
pulumi.runtime.registerResourceModule("aws", "workspaces/workspace", _module);
//# sourceMappingURL=index.js.map